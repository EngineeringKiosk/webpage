---
import MainHead from '../../../../components/MainHead.astro';
import { formatDate, formatDateWithoutWeekday, formatTime } from '../../../../scripts/date.js';
import { getNextMeetup, getPastMeetups } from '../../../../scripts/meetups.js';

let title = 'Stats Meetup Alps - Engineering Kiosk - Innsbruck';
let description = 'Tech Meetup in Innsbruck, brings together tech enthusiasts, engineers, and professionals from various fields to explore the intersection of engineering culture, open source, people and technology.';
const canonicalURL = new URL(Astro.url.pathname, Astro.site);

// Get all meetups data
const allMeetups = getPastMeetups()
const nextMeetup = getNextMeetup();
// if next meetup is not already in the list, add it
if (allMeetups.findIndex(m => m.date === nextMeetup.date) === -1) {
    allMeetups.push(nextMeetup);
}

// reverse sorting based on date
allMeetups.sort((a, b) => new Date(b.date) - new Date(a.date));

// Calculate statistics
const highestRegistrationNum = Math.max(...allMeetups.map(m => m.participants?.registered || 0));
const numMeetups = allMeetups.length;
const validMeetups = allMeetups.filter(meetup => meetup.participants?.registered && meetup.participants?.present?.total);
const totalShowUpRate = validMeetups.reduce((acc, meetup) => acc + (meetup.participants.present.total / meetup.participants.registered), 0);
const averageShowUpRate = (totalShowUpRate / validMeetups.length) * 100;

const validMeetupsForGenderRatio = allMeetups.filter(meetup => meetup.participants?.present?.female !== undefined && meetup.participants?.present?.male !== undefined);

const totalFemaleRatio = validMeetupsForGenderRatio.reduce((acc, meetup) => acc + (meetup.participants?.present?.female / meetup.participants?.present?.total), 0);
const averageFemaleRatio = (totalFemaleRatio / validMeetupsForGenderRatio.length) * 100;

const totalMaleRatio = validMeetupsForGenderRatio.reduce((acc, meetup) => acc + (meetup.participants?.present?.male / meetup.participants?.present?.total), 0);
const averageMaleRatio = (totalMaleRatio / validMeetupsForGenderRatio.length) * 100;


---

<html lang="de">
    <head>
        <MainHead title={title} description={description} image="/meetup/alps/images/ibk.jpg" {canonicalURL} />
    </head>

    <body class="antialiased bg-body text-body font-body">
        <div class="container mx-auto px-4 py-8">
            <h1 class="text-3xl font-bold mb-6">Engineering Kiosk Alps - Meetup Statistics</h1>

            <div class="mb-8">
                <p class="text-lg">Number of Meetups: {numMeetups}</p>
                <p class="text-lg">Average Show-Up Rate: {averageShowUpRate.toFixed(2)}%</p>
                <p class="text-lg">Average Read as Female/Male Ratio: {averageFemaleRatio.toFixed(2)}% / {averageMaleRatio.toFixed(2)}%</p>
            </div>
            
            <div class="">
                <table class="min-w-full bg-white border border-gray-300">
                    <thead class="sticky top-0 bg-gray-100">
                        <tr class="bg-gray-100">
                            <th class="px-6 py-3 border-b text-left">Date</th>
                            <th class="px-6 py-3 border-b text-left">Location</th>
                            <th class="px-6 py-3 border-b text-left">Speakers</th>
                            <th class="px-6 py-3 border-b text-center">Registrations (New Email Addresses)</th>
                            <th class="px-6 py-3 border-b text-center">Attendees</th>
                            <th class="px-6 py-3 border-b text-center">Attendees Read as Female</th>
                            <th class="px-6 py-3 border-b text-center">Attendees Read as Male</th>
                        </tr>
                    </thead>
                    <tbody>
                        {allMeetups.map((meetup) => (
                            <tr class="hover:bg-gray-50">
                                <td class="px-6 py-4 border-b">{formatDate(meetup.date)}</td>
                                <td class="px-6 py-4 border-b">{meetup.location.name}</td>
                                <td class="px-6 py-4 border-b">
                                    {meetup.talks.map(talk => `${talk.name} (${talk.title})`).join(', ')}
                                </td>
                                <td class="px-6 py-4 border-b text-center" id={ meetup.eventId }>
                                    {meetup.participants?.registered === highestRegistrationNum ? (
                                        <strong>{meetup.participants?.registered || 0}</strong>
                                    ) : (
                                        meetup.participants?.registered || 0
                                    )}
                                    {(!meetup.participants?.registered && meetup.eventId) && (
                                        <script define:vars={{ eventId: meetup.eventId }}>
                                            var element = document.getElementById(eventId);
                                            element.textContent = 'Loading...';
                                            fetch(`https://rsvp.engineeringkiosk.dev/registrations/${eventId}`)
                                                .then(response => response.json())
                                                .then(data => {
                                                    element.textContent = `${data.registrations} (live!)`;
                                                })
                                                .catch(error => console.error('Error fetching registration data:', error));
                                        </script>
                                    )}
                                    {(meetup.participants?.newParticipants && meetup.participants.newParticipants > 0 && meetup.participants.registered) && (
            
                                        <br><span class="text-sm text-gray-500">({meetup.participants.newParticipants}/{(meetup.participants.newParticipants / meetup.participants.registered * 100).toFixed(0)}% new)</span>
                          
                                    )}                                    
                                </td>
                                <td class="px-6 py-4 border-b text-center">
                                    {meetup.participants?.present?.total || "no data"}
                                    {meetup.participants?.present?.total ? ` (${((meetup.participants?.present?.total / meetup.participants?.registered) * 100).toFixed(2)}%)` : ''}
                                </td>
                                <td class="px-6 py-4 border-b text-center">
                                    {meetup.participants?.present?.female || "no data"}
                                    {meetup.participants?.present?.female ? ` (${((meetup.participants?.present?.female / meetup.participants?.present?.total) * 100).toFixed(2)}%)` : ''}
                                </td>
                                <td class="px-6 py-4 border-b text-center">
                                    {meetup.participants?.present?.male || "no data"}
                                    {meetup.participants?.present?.male ? ` (${((meetup.participants?.present?.male / meetup.participants?.present?.total) * 100).toFixed(2)}%)` : ''}
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            </div>
        </div>
    </body>
</html>
