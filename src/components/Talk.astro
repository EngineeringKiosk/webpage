---
export interface Props {
	avatar: string;
	name: string;
	title: string;
	description: string;
	github?: string;
	twitter?: string;
	linkedin?: string;
	mastodon?: string;
	website?: string;
	bio?: string;
	slides?: string;
}

const { avatar, name, title, description, github, twitter, linkedin, mastodon, website, bio, slides } = Astro.props;

const talkId = `talk-${name.toLowerCase()}-${title.toLowerCase()}`.replace(/[^a-z0-9-]/g, '-');
const htmlDescription = description.replace(/\n/g, '<br>');

const linkedInArray = linkedin ? Array.isArray(linkedin) ? linkedin : [linkedin] : [];

const mastodonServer = mastodon ? mastodon.split('@')[1] : '';
const mastodonHandle = mastodon ? mastodon.split('@')[0] : '';

---

<div class="w-full md:w-1/2 lg:w-1/2 px-4 mb-10 hostpreview" id={talkId}>
	<div class="h-full py-8 px-10 bg-white rounded-md text-center">
		<img class="w-56 h-56 mx-auto mb-6 rounded-full" src={`/meetup/alps/images/speaker/${avatar}`} alt={name} title={name} />

		<h2 class="mb-2 text-2xl md:text-3xl leading-tight font-semibold">
			{title}
		</h2>

		<span class="inline-block mb-6 text-lg font-medium text-yellow-500">
			{name}
		</span>
		<p class="mb-8 text-coolGray-500 font-medium description" set:html={htmlDescription} />
		{bio && <p class="mb-8 text-coolGray-500 font-medium bio">{bio}</p>}
		<div class="flex items-center justify-center">
			{
				github && (
					<a class="inline-block mr-6 hover:opacity-80" href={`https://github.com/${github}`}>
						<img src="/images/brands/github-gray.svg" alt={`${name} auf GitHub`} />
					</a>
				)
			}
			{
				twitter && (
					<a class="inline-block mr-6 hover:opacity-80" href={`https://twitter.com/${twitter}`}>
						<img src="/images/brands/twitter.svg" alt={`${name} auf twitter`} />
					</a>
				)
			}
			{
				mastodon && (
					<a class="inline-block mr-6 hover:opacity-80" href={`https://${mastodonServer}/@${mastodonHandle}`}>
						<img src="/images/brands/mastodon.svg" alt={`${name} auf Mastodon`} class="h-5	 grayscale opacity-60" />
					</a>
				)
			}
			{
				linkedInArray && linkedInArray.length > 0 && (
					linkedInArray.map(handle => (
							<a class="inline-block mr-6 hover:opacity-80" href={`https://linkedin.com/in/${handle}`}>
									<img src="/images/brands/linkedin.svg" alt={`${name} auf LinkedIn`} />
							</a>
					))
				)
			}
			{
				website && (
					<a class="inline-block hover:opacity-80" href={website}>
						<img src="/images/elements/icon-website.svg" height="33" width="33" alt={`Website von ${name}`} />
					</a>
				)
			}
		</div>
		{
			slides && (
				<div class="flex items-center justify-center mt-5">
				<a target="_blank" class="inline-block hover:opacity-80 text-yellow-500 font-medium" href={`/meetup/alps/slides/${slides}`}>
					<img src="/images/elements/icon-presentation.svg" height="25" width="25" alt="Slides of the talk" class="inline-block" /> Download slides of the talk
        </a>
				</div>
			)
		}
	</div>
</div>
