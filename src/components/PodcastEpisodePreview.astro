---
export interface Props {
	episode: any;
	descriptionChars: number;
}

import { URLify } from "../scripts/urlify.js"
import { formatDate } from "../scripts/date.js"
import { cutText } from "../scripts/strings.js"

const { episode, descriptionChars } = Astro.props;
const { frontmatter } = episode;

let tags = frontmatter.tags.map((element) => URLify(element));

// Cut description text
let description = cutText(frontmatter.description, descriptionChars);
---
<article class="w-full md:w-1/2 lg:w-1/3 px-4 mb-8">
	<a class="block mb-6 overflow-hidden rounded-md" href={episode.url}>
		<img class="w-full" src={frontmatter.image} alt={`Details zur Podcast Episode ${frontmatter.title}`} title={`Details zur Podcast Episode ${frontmatter.title}`}>
	</a>
	<p class="mb-2 text-coolGray-500 font-medium">
		<time class="date" datetime={frontmatter.pubDate}>{formatDate(frontmatter.pubDate)}</time>
	</p>
	<a href={episode.url}>
		<h2 class="inline-block mb-4 text-2xl leading-tight text-coolGray-800 hover:text-coolGray-900 font-bold hover:underline">{frontmatter.title}</h2>
	</a>
	<p class="mb-4 text-base md:text-lg text-coolGray-400 font-medium">
		{description}
	</p>
	{ tags.map((element) => <a class="inline-block py-1 px-3 mb-3 mr-3 text-xs leading-5 text-yellow-500 hover:text-yellow-600 font-medium uppercase bg-yellow-100 hover:bg-yellow-200 rounded-full shadow-sm" href={`/tag/${(element.url)}/`}>{element.name}</a>) }
</article>
