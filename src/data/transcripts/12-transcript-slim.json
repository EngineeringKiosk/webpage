{
    "language_code": "de",
    "audio_url": "https://audio1.redcircle.com/episodes/1adada84-15c2-4fd0-99b9-e7842f29ecef/stream.mp3",
    "punctuate": true,
    "format_text": true,
    "dual_channel": false,
    "webhook_url": null,
    "webhook_auth_header_name": null,
    "webhook_auth_header_value": null,
    "audio_start_from": null,
    "audio_end_at": null,
    "word_boost": [],
    "boost_param": null,
    "filter_profanity": false,
    "redact_pii": false,
    "redact_pii_audio": false,
    "redact_pii_policies": null,
    "redact_pii_sub": null,
    "speaker_labels": true,
    "speakers_expected": 2,
    "content_safety": false,
    "content_safety_confidence": null,
    "iab_categories": false,
    "custom_spelling": null,
    "disfluencies": false,
    "sentiment_analysis": false,
    "auto_chapters": false,
    "entity_detection": false,
    "summarization": false,
    "summary_model": null,
    "summary_type": null,
    "auto_highlights": false,
    "language_detection": false,
    "speech_threshold": null,
    "id": "62box55cw4-c9a7-4b94-8373-52f585dee4b8",
    "status": "completed",
    "error": null,
    "utterances": [
        {
            "text": "Willkommen zu einer neuen Episode des Engineering-Kiosks. Der eigene Hardware-Server oder doch besser eine Cloud-Lösung? Software hinzukaufen, Open-Source-Software verwenden oder doch einfach selber programmieren? Diese Fragen und alle Aspekte rund um Make-or-Buy besprechen wir in dieser Episode. Einen wunderschönen guten Abend. Also wir haben ja letztes Mal besprochen in der letzten Episode, wie man sich so Firmen aussucht und was man so in den Interviews fragen kann. Und Andi hat sich ja beschwert, dass wir jetzt ein halbes Karriere-Podcast sind und kein Tech-Podcast mehr.",
            "start": 2530,
            "end": 38350,
            "confidence": 0.814392857142857,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Moment mal also du hast zu mir gesagt und das war in einem Nachgespräch von einer Podcast Episode, wo wir uns über die zukünftigen Themen unterhalten haben, wir sind ja sowieso ein Karriere Podcast und das hat mich ein bisschen auf die Palme gebracht, weil irgendwie, vielleicht helfen mir Leute bei der Karriere, aber ich möchte ja keinen Karriere Podcast machen, das hört sich irgendwie so, bisschen esoterisch an da kann ich mir auch live coach wie auf meiner webseite schreiben und dann damit geld verdienen also was ist denn live coaching zum beispiel ja das genau das ist so ein bisschen für mich karriere podcast.",
            "start": 38817,
            "end": 69740,
            "confidence": 0.7533018867924527,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Darum probier jetzt technischer zu werden und und stell dir gleich direkt eine frage ich war mal in einem, In dem Interview für eine CTO-Stelle, ist schon einige Zeit her, und CTO ist ja eindeutig technisch, also wird das natürlich eine technische Frage. Und ihr habt damals die Frage bekommen, sollen wir denn die Software für unser Business Intelligence System, beziehungsweise für AB Testing, sollen wir das kaufen oder selber programmieren? Andi, eindeutige technische Frage.",
            "start": 69780,
            "end": 97711,
            "confidence": 0.7806266666666668,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Was war das für eine firma also war das für zum beispiel irgendwie luca oder sowas also war das eine firma im business intelligent space oder war das ein ein software unternehmen was tracker software geschrieben hat.",
            "start": 98191,
            "end": 110297,
            "confidence": 0.735837837837838,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "War ein unternehmen in der travel branche also gar nichts zu tun mit mit mit business intelligence hat wollte einfach macht natürlich auch eb tests oder hat damals auch eb tests gemacht, Und die Frage war halt einfach, wie sollen wir da jetzt ein eigenes Framework rundherum aufbauen, ist doch eine Kernkomponente von unserer Firma, insofern brauchen wir da vielleicht individuelle Dinge in unserer Software, Features, oder gibt's denn das einfach auch am Markt und kann man das einfach kaufen? Ich muss dazu sagen, es war schon vor einiger Zeit, also der Markt hat sich sicher auch geändert, aber jetzt direkt an dich die Frage gestellt.",
            "start": 110357,
            "end": 147913,
            "confidence": 0.8357830188679246,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ich würde es jetzt erstmal, glaube ich, kaufen. Wir gehen mal drei Schritte zurück und sagen, okay, wir wollen mit simplem AB-Testing anfangen. Okay, wir haben also von einer Variante zwei Versionen, schmeißen die auf die Webseite jetzt mal zum Beispiel, haben einen Entscheidungsalgorithmus, der sagt, du kommst auf Version A oder B. Das kann entweder Traffic Splitting sein, das kann ich rollen Würfel sein, das kann von mir aus auch die Quelle des Traffic sein. Kommst du von Google, kommst du immer auf Seite A. Kommst du von Microsoft Bing, gehst du immer auf Seite B. Und hinterher brauchst du ein Kriterium, was besser performt. Und das Kriterium kann sein, nehmen wir mal Travel. Reise gebucht oder nicht. Okay. Das sind also Datenpunkte, die du ja sowieso in dem System zusammenführen musst, weil die ja so individuell sind. Aber das System, das ist jetzt mal das Simpleste. Und jetzt wüsste ich nicht, warum ich das alles selber schreiben sollte. Also ich meine, anbinden musst du ja die Software so oder so. Damit sind glaube ich schon Leute ausreichend beschäftigt. Ansonsten würde ich mich fragen, was für spezifische Anforderungen hat denn eine Normale firma daran und eine normale firma sage ich jetzt. die nicht Google ist. Ich denke, Google hat bei dem Scale und Co. vielleicht ein bisschen andere Anforderungen, aber vielleicht haben die auch Mathematiker, die sich dann die Strategien überlegen und die Signifikanz und allem drumherum.",
            "start": 147933,
            "end": 224132,
            "confidence": 0.7740336134453784,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Bei Trivago hatten wir unsere selbstgeschriebene Software. Findest du im Nachhinein gesehen, dass das ein Fehler war, ohne dass du jetzt an dieser Software gearbeitet hast, natürlich im Detail? Müssten wir jetzt vielleicht einen Data Scientist fragen, ob er zufrieden war, oder einen Businessmenschen?",
            "start": 224152,
            "end": 238965,
            "confidence": 0.7387499999999999,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Wenn man Trivago jetzt nochmal bauen würde, dann würde ich sagen, es sollte diese Art von Software, denke ich, nicht geschrieben werden. Ob dieses AB-Testing schon wirklich so Software-as-a-Service-mäßig, wann haben die damit gestartet, 2010 oder ähnliches, ob das schon so verfügbar war und diese Nische schon so Produkt heißt war also wirklich als Produkt angeboten war, muss ich zugeben, weiß ich gar nicht, aber mich würde es nicht wundern, wenn 2010 da noch keiner wirklich auf dem Markt war, der das konnte.",
            "start": 239405,
            "end": 270832,
            "confidence": 0.8287469879518075,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Also das ist glaube ich wirklich ein wichtiger Punkt, dass da sich in den letzten Jahren so viel getan hat und mittlerweile kannst du einfach mit Google Analytics das komplett abbilden und ich kenne auch wirklich große Firmen, die Google Analytics komplett verwenden. Dafür, also sogar das ist möglich. Das kann man natürlich nicht mehr vergleichen mit vor zehn Jahren. Ja, gebe dir vollkommen recht.",
            "start": 271373,
            "end": 292604,
            "confidence": 0.780692307692308,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Nehmen wir mal ein anderes Beispiel. Reisekostenabrechnungen. Ein Thema, was glaube ich jeder Mitarbeiter liebt. Bei Teriberger habe ich super lange, immer wenn ich auf einem Business Trip war, irgendwelche Excel-Listen ausgefüllt und irgendwelche Excel-Makro-Formulare. Mit allem pain die man da haben kann dass diese formulare dann gebenfalls nur auf einem windows funktioniert haben aber nicht unter einem mac excel und so weiter und sofort und die muss ich dann irgendwo einreichen jetzt war ich die tage wieder auf einem auf einer geschäftsreise und den den kassenzettel vom vom taxi habe ich einfach mit einer app gescannt und eingereicht. Jetzt kann man natürlich nicht die neue, hippe Startup-Firma mit einer Firma, die schon 10, 15 Jahre am Markt ist, vergleichen. Auch Prozesse umstellen sind bei vorhandenen Firmen natürlich immer ein riesiger Arbeitsschritt. Aber in den letzten Jahren hat sich einfach enorm viel getan von Services, die da sind, die einfach genutzt werden können. Und vor 10 Jahren war es halt, glaube ich, einfach noch nicht so oder vor 15.",
            "start": 292664,
            "end": 351737,
            "confidence": 0.7824260355029582,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Vor allem, ich glaube, das ist auch ein großer Unterschied. Du kannst zwar jetzt selber ein kleines Tool bauen, was dir die Reisekostenabrechnung macht, aber wenn du dann noch eine App bauen musst, in der du fotografieren kannst, die das automatisch checkt, was steht auf der Rechnung und so weiter mit Image Recognition und so weiter. dann braucht es einfach so viel Zeit und das schaffst du einfach intern nicht mehr. Auch wenn du eine große Firma bist, dann rentiert sich das kaum, so eine Software selber zu bauen. Also es ist auch so, dass die Software mittlerweile so komplex wird, dass es wirklich schwer ist, die selber zu bauen. Aber damit wir mal eine Überschrift über dieses ganze Thema setzen, Sprechen wir heute.",
            "start": 351747,
            "end": 393206,
            "confidence": 0.8064516129032259,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Mal über das Thema, was ihr alle kennt. Sollen wir die Lösung einkaufen oder sollen wir sie selbst schreiben? In der Industrie wird das ganze Thema Make-or-Buy genannt. Und in der Episode 1 oder 2 haben wir uns diesem Thema schon mal ein bisschen genähert. Und zwar hat in Episode 1 oder 2 der Wolfgang von seiner schönen Geschichte erzählt, wie er seinen Mail-Server betrieben hat oder immer noch betreibt. Ich bin mir gar nicht sicher. Betreibst du ihn noch? Nee. Hast du ihn ausgelagert?",
            "start": 393306,
            "end": 420035,
            "confidence": 0.745164705882353,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja auf jeden fall du bist also.",
            "start": 420095,
            "end": 422057,
            "confidence": 0.5681428571428572,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Von von make nach bei gewechselt ja okay auf jeden fall nach der nach der episode 1 oder 2 haben wir von einem hörer danke hans mal die frage bekommen hey macht doch mal bitte eine folge nur zu diesem thema weil ich bin mir da immer unsicher. Und zwar habe ich meinen eigenen Server bei einem Web-Poster und bei jedem neuen Projekt stelle ich mir die Frage, hoste ich jetzt meine HTML-Seite auf diesem Server oder nutze ich zum Beispiel so etwas wie GitHub-Pages oder Cloudflare-Pages? Hoste ich meinen Git-Code selber, zum Beispiel auf einem eigenen Git-Lab, den ich mir selbst hoste, oder schiebe ich den nach GitHub oder Bitbucket? Meine Daten, hoste ich die bei mir selbst auf einem Web-Space und installiere da Nextcloud oder packe ich die nach Google Drive oder Dropbox? Und so geht das durch und durch und durch. Und das ist natürlich auch eine schwierige Frage. Heute beschäftigen wir uns mal ein bisschen mit diesem Thema. Was spricht dafür? Was spricht dagegen? Was sind eigentlich Opportunitätskosten? Wie teuer ist das Ganze denn eigentlich wirklich? Berechnen also mal, machen mal eine ganz kleine Berechnung über die Total Cost of Ownership. Und ja, schauen wir mal, ob wir zu einer endgültigen Meinung kommen. Wolfgang, eine Frage. Welche Services betreibst du selbst für dich, die du dir einkaufen könntest?",
            "start": 422097,
            "end": 498495,
            "confidence": 0.8075180180180178,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Super, ich wollte eigentlich genau die gleiche Frage jetzt wirklich stellen. Ein Klassiker. Lass mich mal kurz überlegen, welche Services ich noch selber betreibe. Also ich habe probiert wirklich den Großteil auszulagern, eben Mail-Server, Meine Nextcloud, wer Nextcloud seit Jahren einsetzt, kennt die Schmerzen. Es hat sich wahnsinnig gebessert, aber früher zu On-Cloud-Zeiten, noch zu Anfangszeiten, die haben teilweise Programmiersprachen geändert und wirklich Technologien geändert. Da waren die Updates teilweise wirklich katastrophal.",
            "start": 498695,
            "end": 532057,
            "confidence": 0.7807916666666664,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ganz kurz für die für die Hörer Nextcloud ist deine eigene Version von Dropbox oder?",
            "start": 532757,
            "end": 539003,
            "confidence": 0.7325999999999999,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Kann man im Großen und Ganzen so sagen, aber es ist natürlich nicht nur Files, es ist ein Kalender, den man anbinden kann im Mobilephone zum Beispiel, man kann diverse Apps auch zusätzlich installieren, man kann Video Calls drüber machen, also es ist wirklich eine sehr coole Open-Source-Lösung und die hatte ich bisher selber gehostet und jetzt zahle ich einfach die 5€ für die 500GB oder 1TB. Alles ist erledigt, es wird abgedatet automatisch und ich brauche mir keinen Kopf mehr drüber zu brechen.",
            "start": 539023,
            "end": 570082,
            "confidence": 0.7951428571428572,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Wem bezahlst du da? Hetzner?",
            "start": 570562,
            "end": 572963,
            "confidence": 0.5412000000000001,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, Hetzner hat da ein Angebot von der Open-Source-Lösung und man zahlt da mehr oder weniger eigentlich nur den Space, bekommt dann aber die ganze Nextcloud-Lösung dazu.",
            "start": 573003,
            "end": 581767,
            "confidence": 0.7901481481481482,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Okay, zwei Produkte hast du schon von Make nach Bay geschoben. Was hast du noch so?",
            "start": 582385,
            "end": 587391,
            "confidence": 0.7233125,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ich habe noch ein altes NAS stehen bei mir daheim in einer Ecke, das Backups macht von diversen Servern. Das war eigentlich der Hauptgrund, dass früher der Speicherplatz in der Cloud extrem teuer war. Mittlerweile ist eigentlich günstiger geworden, vor allem wenn man wirklich für lange Zeit speichern will. Man hat ja da die unterschiedlichen Levels dann. Wenn man das zum Beispiel ein Jahr lang speichert, dann bekommt man den Speicherplatz eigentlich sehr günstig für Backups zum Beispiel. Und da bin ich jetzt gerade dabei, das eigentlich Großteils umzustellen, dass auch dieser letzte Schritt dann in der Cloud landet von den Backups.",
            "start": 587431,
            "end": 622077,
            "confidence": 0.8029019607843132,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Das benutzt du ja nicht aktiv oder ich meine das schmeißt du einmal im monat an wenn du backup machst und dann machst du es wieder aus also ich meine was für einen vorteil hat das jetzt von von weg nach bei zu schieben.",
            "start": 623418,
            "end": 631822,
            "confidence": 0.6789772727272729,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Na das backup wirklich jede nacht also diverse server und und datenbanken die werden gebackup und dann zusätzlich in dem zusätzlichen schritt nochmal gebackup auf dieses nas das ist wirklich bei mir lokal liegt. Es hat einfach diesen Vorteil, wenn ich das auch noch weit bekomme, dass ich mir erst die Stromkosten spare, dass ich mir sparen muss das Ganze zu monitoren, ist es überhaupt noch aktiv in dieser Ecke, weil gibt es natürlich aktuell kein Monitoring, ist eh klar. Und die Festplatte ist natürlich auch ein Klassiker. Wenn die kaputt geht, sind alle Backups weg. Das ist jetzt kein Problem, weil es Backups sind und zwar wirklich das letzte Level, aber trotzdem habe ich mehr Vertrauen in Google, weil wenn die das speichern, dann bin ich mir sicher, dass die sich im Kopf drüber zerbrochen haben. Viele, viele schlaue Leute, wie sie das sicher machen und so, dass es nicht verloren geht. Und das ist garantiert sicherer als meine Festplatte in der Ecke.",
            "start": 632683,
            "end": 684749,
            "confidence": 0.8049207317073171,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Okay, das ist jetzt in deinem privaten Leben, aber dann hast du ja noch diese Führerschein-Plattform, die betreut ihr ja noch selber, da nutzt ihr jetzt noch kein Webseiten-Host-Service wie Render oder Vercel oder ähnliches, oder?",
            "start": 685249,
            "end": 697612,
            "confidence": 0.7238055555555555,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Für die statischen Seiten verwenden wir eigentlich und verwende ich auch in allen Projekten eigentlich mittlerweile Netlify, wenn irgendwie möglich, weil ich da eben auch wieder eine Sache weg habe und das ist kostenlos eigentlich für die meisten Projekte, den Traffic muss man erstmal mit irgendwelchen privaten Projekten herbekommen. Also auch das kann ich woanders hosten. Das hat auch den großen Vorteil z.B. bei F-Online, bei diesem Führerschein-Projekt, dass wenn die eigentliche App down ist, also was für ein Grund auch immer, dann habe ich die Startseite immer noch auf einem anderen Server liegen und kann dorthin schreiben, wir sind gerade down oder sonstige Informationen auf diese Webseite packen. Das heißt, man hat auch da gewisse Backup-Funktionen, wenn das woanders liegt und wirklich statisch gerendert einfach ausgeliefert wird. Aber natürlich die App selber, die muss irgendwo gehostet werden und da verwenden wir hoffentlich bald einen Docker Swarm. könnte man natürlich auch zukaufen sowas oder Kubernetes, aber irgendwo ist man halt dann immer in dieser Schnittstelle, in dieser Schicht zwischen dem eigenen Produkt, wo man halt einfach selber die ganze Sache programmiert hat und wo man dann auf externe Ressourcen zugreift, wie im Hosting.",
            "start": 697632,
            "end": 769046,
            "confidence": 0.8327305699481862,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Du hattest gerade das freie Paket von Netlify mit dem Traffic angesprochen, da habe ich eine kleine lustige Story. Und zwar der Shep, Podcast-Host vom Working Graph Podcast, schöne Grüße an ihn, hat mal irgendeinen guten Artikel geschrieben, ich glaube im Frontend-Space, irgendwas mit CSS. Der ist auf Hacker News relativ steil gegangen und nächsten Monat musste er dann Geld an Netlify zahlen, weil Hacker News ihm so viel Traffic beschert hat, dass er halt diese freie Bandbreite Von 100 Gigabyte im Monat, habe ich gerade nochmal nachgeschaut, überschritten hat. Und ich weiß jetzt gar nicht, wie viel er gezahlt hat, aber hier, das aktuelle Pricing ist, du zahlst dann für weitere 100 Gigabyte pro Monat 20 Dollar. Ich glaube, da musst du ja ein paar Dollar abdrücken, weil Hackern eben so viel Traffic geschickt hat. Und auf der anderen Seite ist das natürlich auch ein schönes Problem, wenn man das hat, oder?",
            "start": 769306,
            "end": 817782,
            "confidence": 0.7454901960784307,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, auf jeden Fall, wenn man diese Probleme hat, dann kann man sie wahrscheinlich auch lösen oder ist happy darüber, dass man einfach ein bisschen Geld zahlen kann und einen erfolgreichen Blogartikel gehabt hat. Ich glaube, das ist das gleiche wie ganz allgemein bei so Services, wenn man sich immer die Skalierung so frühzeitig überlegt, die Premature Optimization und sich überlegt, was passiert, wenn ich hunderttausende Zugriffe habe, dann sollte man das schon überlegen, wie das skaliert. Aber meistens kommt es eh nicht dazu. Und wenn mal dann der Server wirklich nicht mehr skaliert und zusammenbricht unter dem Traffic, dann kann man glaube ich glücklich sein und dann einfach über dieses Problem nachdenken. Und wenn man dann in den Medien steht, dass der Server zusammengebrochen ist wegen so viel Zugriffen, dann hat man es eigentlich geschafft. Ist jetzt keine sehr technische Herangehensweise. Ich weiß von einem Techniker, der eigentlich alles perfekt machen will, aber ich glaube, man kann auch glücklich sein über Erfolg.",
            "start": 818108,
            "end": 867313,
            "confidence": 0.7809386503067484,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Wenn ich dir so zuhöre, hört sich das aber eigentlich an, dass du eher so auf der Beischiene bist, so generell. Und jetzt würde ich gerne mal erfahren, was ist dein Entscheidungskriterium, wann du etwas Make machst, wann du etwas selber machst oder wann du etwas dazu kaufst?",
            "start": 867743,
            "end": 880452,
            "confidence": 0.6943333333333334,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Mittlerweile bin ich auf dieser Beischiene. Also früher war ich eigentlich sehr hart auf der Make-Schiene. Auch aus dem Grund, glaube ich, dass es früher weniger gegeben hat, muss man schon auch ganz klar sagen. Dann auch aus Datenschutzgründen. Wobei auch da habe ich mittlerweile gemerkt, wenn man mit professionellen Firmen zusammenarbeitet, dann kann man denen vertrauen, hat das vielleicht auch vertraglich festgelegt. Also auch das ist jetzt weniger ein Thema geworden. Und was mich dann eigentlich umgestimmt hat, ist einfach mein eigener Schmerz, den ich bei meinen Projekten gehabt habe. Plus, dass ich mittlerweile weiß, was einfach Leute kosten, inklusive meiner eigenen Zeit. Und die Zeit einfach viel, viel wichtiger geworden ist und ich die nicht mehr in irgendwas investieren will, was mir selber wenig weiterbringt.",
            "start": 880492,
            "end": 924175,
            "confidence": 0.8165748031496064,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Da muss ich jetzt aber mal kurz eingrätschen. Und zwar hast du, du hast zwei Sachen bezüglich deiner eigenen Zeit angesprochen. Einmal, dass dir deine eigene Zeit wichtig ist. Okay, da kann ich nichts dagegen sagen, das ist ja total super. Die andere Geschichte ist aber, dass deine eigene Zeit dir gegebenenfalls monetär zu wertvoll oder wie viel deine eigene Zeit kostet. So, und jetzt ist es ja so, dass du dann, nehme ich mal an, rechnest, okay, wenn ich jetzt eine Stunde darauf verbrate, das NAS zu betreiben und die Software auf dem NAS zu updaten, in dieser Stunde könnte ich das Geld, was ich für den Cloud-Dienst ausgebe, ja wieder durch Jobs reinholen. Und immer wenn ich sowas höre oder darüber nachdenke, denke ich mir, du hast ja nicht 24 7 irgendwelche Aufträge, die dir konstant einen Einkommensstrom liefern.",
            "start": 924538,
            "end": 972579,
            "confidence": 0.7785673758865251,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Die Frage ist ja, ob du deine ganze Freizeit auch in solche Sachen investieren willst. Du kannst es natürlich in solche Sachen investieren. Du kannst auch einen Mail-Server betreiben. Ich habe extrem viel gelernt dabei und da hatte ich auch die Zeit oder habe sie investiert. Aber es gibt natürlich auch dann, wenn man gerade älter wird, vielleicht einen Punkt, wo man sagt, okay, ich hätte gern lieber eine Stunde Freizeit, als eine Stunde Freizeit, die in meinen Mail-Server investiert.",
            "start": 972619,
            "end": 996474,
            "confidence": 0.7800125,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja genau, deswegen habe ich ja den einen Punkt nicht angesprochen, wo du sagst, deine Zeit ist hier zu wichtig, dass du die Zeit nicht darauf auf das Betreiben eines Mail-Servers verwenden möchtest. Aber ich möchte jetzt auf den anderen Punkt reingehen, wie viel deine Zeit kostet.",
            "start": 996935,
            "end": 1011771,
            "confidence": 0.7988085106382982,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Meine private Zeit kostet natürlich in dem Sinne nichts und ich kann nicht automatisch damit Geld verdienen. Aber ich verdiene wahrscheinlich sowieso Geld in meinem normalen Job und dann ist dieses Geld zur Verfügung und dann ist halt die Frage, will ich noch mehr arbeiten, um dann irgendwas selber zu betreiben oder investiere ich dieses Geld, was ich bekommen habe, für meine Arbeit, wahrscheinlich besser bezahlt, investiere ich das in zum Beispiel irgendeinen Service. Aber ich glaube auch, es ist auch bei einer Firma genau dasselbe. Bei einer Firma muss ich halt auch überlegen, was kostet mich irgendein Produkt, irgendwas, was ich selber mache und was kostet mich das, wenn ich das auslagere und wie viele Ressourcen habe ich überhaupt zur Verfügung, sei es jetzt Geld oder auch Leute und Arbeitsstunden. Was kann ich also investieren und wie kann ich am besten damit umgehen, dass ich halt am Ende des Monats auch irgendwo einen Gewinn habe. Aber wenn wir jetzt vom privaten Bereich schon mal in den Firmenbereich kommen. Andi, hast du irgendwelche Beispiele von so Klassikern, wo du glaubst, dass es besser wäre, dass man es in der Cloud macht oder in der Cloud machen hätte sollen?",
            "start": 1011791,
            "end": 1076235,
            "confidence": 0.8101717171717171,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, ein paar Beispiele, die mir gerade so einfallen. Soll die Firma ihr eigenes Git-Storage hosten, eigenes GitLab hosten, maintain, skalieren oder geht man direkt auf gitlab.com, bitbucket.org oder github.com und kauft sich das da ein und inklusive natürlich allen Updates und Co. Wie sieht es zum Beispiel mit dem eigenen Mail-Server aus? Betreibt man noch einen Microsoft Exchange oder nutzt man vielleicht nicht schon Google Workspaces? Wie sieht es denn eigentlich mit Authentifizierung und Single Sign-On aus? Betreibt man seinen eigenen Active Directory oder nutzt man sowas wie Auth0, Okta oder ähnliches?",
            "start": 1076275,
            "end": 1116032,
            "confidence": 0.760559139784946,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Wobei Okta jetzt ja gerade gehackt wurde, beziehungsweise datengeleaked wurden für eine Sicherheitsfirma, die Identities und so weiter bewahrt. Das kommt dann halt immer als Argument von Leuten, ja, aber wenn ihr das tot habt, dann die werden gehackt und dann habe ich ein Problem.",
            "start": 1116352,
            "end": 1131250,
            "confidence": 0.7915555555555557,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ok super super beispiel okta gehackt hört sich total negativ an hört sich technische sicherheitslücke an was ist passiert der mensch war der fehler social engineering ja also da war keine technische sicherheitslücke sondern da haben die social engineering betrieben und zufällig einen mitarbeiter erwischt der halt weitgehende rechte hatte.",
            "start": 1131810,
            "end": 1153624,
            "confidence": 0.8275199999999999,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja aber das ist ja mir jetzt egal als Firma, die haben den Müll gebaut und mir als Firma wäre das ja nie passiert.",
            "start": 1154104,
            "end": 1160872,
            "confidence": 0.7122499999999999,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Natürlich wäre dir als Firma das nie passiert. Also ich meine sicherheitstechnisch, wir können auch gerne mal anfangen ein bisschen mehr über Sicherheit zu sprechen und da gegebenenfalls in Zukunft auch eine Folge zu machen. Ende vom Lied ist dennoch, der Mensch ist immer das schwächste Glied. Und nur weil es deiner Firma jetzt noch nicht passiert ist, heißt das nicht, dass es nicht passieren wird. Also zum Beispiel bei uns in der Firma haben wir ein sehr, sehr gutes Sicherheitsteam. Und was das Sicherheitsteam öfters mal macht, das Sicherheitsteam versendet selbst Phishing-E-Mails an ihre eigene Mitarbeiter, einfach nur um zu gucken, wen muss man besser trainieren. Was ich damit sagen möchte ja natürlich gibt man wenn man etwas nicht mehr selbst macht und etwas einkauft teil der verantwortlichkeit in bezug auf sicherheit wartung und ko an die zukünftige an die an die zu nutzende firma alles richtig die nächste frage ist jedoch, kann man all diese tätigkeiten wie sicherheit wartung und ko kann man die kontinuierlich besser machen als diese leute die mit hoher wahrscheinlichkeit das produkt selbst selbst geschrieben haben nehmen wir mal ein beispiel nehmen wir mal nehmen wir mal github. Super Beispiel. GitLab hat eine Datenbank hinten dran. Also irgendwo müssen ja Daten gespeichert werden. Nehmen wir mal an, du betreibst jetzt GitLab mit einer MySQL. So. Der User, der bei GitLab eingetragen ist, welche Datenbankrechte braucht der denn? Braucht er Root-Zugriff auf deinen Datenbank-Server? Braucht er nur Select-Statements, Insert, Update, Delete? Oder braucht er auch Grant-By-Permissions, um neue Datenbank-User anzulegen? All sowas ist mit sehr hoher Wahrscheinlichkeit nicht dokumentiert. Und auch wenn es dokumentiert ist, wirst du, wenn ihr eine GitLab-Instanz in eurer eigenen Firma habt, mit hoher Wahrscheinlichkeit euren Datenbank-User nicht so limitieren, wie ihr es eigentlich solltet. GitLab.com jedoch wird mit hoher Wahrscheinlichkeit im Security Team genau darauf achten.",
            "start": 1160912,
            "end": 1283812,
            "confidence": 0.7951535947712419,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Also ich hoffe natürlich, dass das schon dokumentiert ist irgendwo, davon gehe ich jetzt schon aus. Aber du hast natürlich einen Punkt. Ich glaube auch, dass man gerade auf der technischen Seite eigentlich nie so up to date sein kann wie Profis, die sich darum kümmern. Vor allem, das sind meistens ja viel mehr Leute, die sich darum kümmern. also was man selber in der Firma einfach zur Verfügung hat an Personen, Stunden, sag ich mal, für irgendein Produkt zur Wartung oder zum Hosting oder vielleicht sogar um selber zu schreiben. Was man natürlich fairerweise schon auch dazu sagen muss ist, dass so Firma wie Okta natürlich viel mehr Angriffe anzieht, weil es einfach eine bekannte Firma ist und jeder Hacker auch weiß, da kann man eher was holen, als wenn es jetzt irgendeine kleine mittelständische Firma ist in irgendeinem Caf in Deutschland. Wobei man auch da dazu sagen muss, dass mittlerweile durch so automatisierte Angriffe auch die nicht mehr sich so leicht verstecken können, weil halt einfach Script-Kitties oder auch einfach wenn es irgendwo Löcher gibt, die werden halt einfach probiert mit irgendwelchen Port-Scanners oder sonstigen Möglichkeiten einfach aufzuspüren. Und dann werden auch diese Firmen angegriffen, ohne dass man genau weiß, was diese Firma eigentlich macht oder dass man irgendwie mit dieser Firma was zu tun hat, aber man kann halt die dann auch einfach erpressen. Und die ganze Ransomware-Geschichte hat es ja auch gezeigt, dass man als kleine Firma jetzt nicht mehr sagen kann, ja, uns hat eh niemand am Schirm und wir sind kein Ziel. Also auch das hat sich, glaube ich, geändert. Und da bin ich schon auch der Meinung, wenn ich jetzt, keine Ahnung, mit Okta zum Beispiel, wenn ich da einer Firma vertraue, die hunderte oder tausende Leute, keine Ahnung wie groß sie sind, haben, die sich nur darum kümmern, dann machen die das wahrscheinlich besser als meine halbe Person, die intern in der Firma habe, die sich irgendwie um Identity Management zum Beispiel kümmert.",
            "start": 1283852,
            "end": 1389002,
            "confidence": 0.8039667673716006,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Man muss ja auch sagen, nur weil man etwas nicht selber macht, sondern abgibt, befreit dich das nicht von einer Verantwortlichkeit im Falle eines Sicherheitsleckes, wie zum Beispiel jetzt bei Okta, deine eigenen Audit-Logs mal zu durchforsten. Aber das sind so auf jeden Fall Beispiele. Der Mail-Server, dann E-Mail-Kalender, GitHub, Git-Storage. Das sind so klassische Beispiele, die man eigentlich auch outsourcen kann.",
            "start": 1389662,
            "end": 1415551,
            "confidence": 0.8077741935483872,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Wir haben jetzt kurz besprochen, dass man die Qualität vielleicht selber gar nicht schafft, aber nehmen wir mal an, man schafft die Qualität oder hat schon etwas in-house und das braucht nicht mehr so viel Pflegeaufwand, dann kann man sich auch ganz hart mal durchrechnen, was überhaupt eine Person kostet. Und wir haben das ja in einer vorhergehenden Episode schon mal so angeschnitten. was eigentlich eine Person kostet. Und gerade im IT-Bereich, wo wir extreme Probleme haben, irgendwie Leute zu finden, ist es natürlich noch ein viel größeres Problem, wenn wir jetzt sagen, okay, dann kümmert sich halt der Andi da ein paar Stunden um diesen Mail-Server pro Monat. Weil wenn man dann Andis Gehalt durchrechnet und sich das mal genau anschaut und ihr geht einfach mal von aus wieder eigentlich einen fast niedrig bezahlten IT-Job würde ich mal sagen im deutschsprachigen Raum von 60.000 brutto Lohn pro Jahr. Wenn man dann die ganzen Kosten auf der Arbeitgeberseite dazu rechnet, da kann man normalerweise so 30 bis 50 Prozent dazu rechnen. Da sind jetzt noch gar nicht groß irgendwelche Arbeitsplätze, Fortbildungen und sonstige Perks, die man so hat, als Fitnessstudio oder keine Ahnung, was Firmen sonst so anbieten, noch mit dabei, bis zum Bürostuhl. Also da kommt noch einiges drauf und dann ist man da also schon weit über 100.000 Euro pro Jahr, die man für einen Mitarbeiter, der 60.000 brutto verdient, ist man da also schon wesentlich weiter drüber. Wenn man sich jetzt noch überlegt, dass eine Mitarbeiterin oder Mitarbeiter ja auch nicht wirklich 100% effektiv arbeiten kann, man muss da ja auch was wegrechnen, wenn ich jetzt mal von 30% ausgehe an Kommunikation, an Fortbildungen, die der macht, andere Dinge, wenn der Chef wieder mal nervt und der muss den Chef beruhigen, Also wenn ich da mal 30% abziehe von der effektiven wirklichen 40 Stunden Zeit pro Woche, dann bleiben das, wenn man es sich aufs Jahr ausrechnet, nur mehr 155 Tage, wo ein Mitarbeiter, Mitarbeiterin eigentlich effektiv arbeiten kann. Und wenn wir das jetzt umrechnen mit unserem 60.000 brutto Gehalt plus die 50% Overhead und so weiter und noch ein paar zusätzliche Sachen, wenn man da mal ganz grob, was eh niedrig ist, 110.000 annimmt, dann sind es bereits 700 Euro pro Tag. Das heißt, das Ganze ist noch sehr, sehr niedrig geschätzt, würde ich sagen. Da kann man teilweise leichtes Doppelte nehmen. Das heißt, dass wenn sich ein Mitarbeiter zum Beispiel hinsetzt und eine Stunde den Mail-Server betreut pro Monat, was auch glaube ich sehr, sehr, sehr, sehr gering ist, Dann sind es ungefähr 100 Euro aufwärts. Da kann man schon relativ viele E-Mail-Postfächer irgendwo bei einem Provider wie Mailbox.org oder so kaufen, die gut sind, die sicher sind und man sich selber dann viel Zeit erspart hat. Und das ist jetzt wirklich nur eine Stunde.",
            "start": 1415731,
            "end": 1595122,
            "confidence": 0.8158425531914901,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Das ist ja auch nur die halbe Wahrheit, die du gerade erzählst, weil das ist ja nur...",
            "start": 1596003,
            "end": 1599967,
            "confidence": 0.8341764705882353,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Willst du es sagen in Lüge?",
            "start": 1599987,
            "end": 1601468,
            "confidence": 0.4683333333333333,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Nein, das nicht, aber es ist halt nur so, die Arbeit der Mitarbeiter, die du gerade vorgerechnet hast, ist ja nur, erhalte bitte den Status Quo. Lass das Ding bitte am Laufen. Das inkludiert ja noch gar nicht mal Wartungsfenster, um die Software wirklich mal abzudaten, das was in der Regel ein paar Stunden dauert, wo du gegebenenfalls den Service mal offline nehmen musst. Das inkludiert ja gar nicht, neue Features mal zu untersuchen, können wir die gebrauchen oder ähnliches. Das Produkt wird ja nicht weiterentwickelt von deinen Mitarbeitern, wenn man jetzt zum Beispiel eine fertige Open Source Software einsetzt und selbst betreibt. Also da fehlt ja noch eine ganze Menge. Und wenn du es jetzt einkaufen würdest, all diese ganzen Sachen würden andere machen, inklusive Weiterentwicklung und neuer Feature-Entwicklung. Das bedeutet, du hast natürlich auch Vorteile dann davon, wenn die irgendwie ein neues Feature launchen. Man muss aber natürlich dann sagen, auf der anderen Seite, die Lizenzkosten sind natürlich dann auch ein ganz schönes Brett. Besonders im Enterprise-Umfeld, wenn du Singles dann ohne haben möchtest und so weiter und so fort, da bist du ratzfatz im Enterprise-Plan.",
            "start": 1601528,
            "end": 1662548,
            "confidence": 0.7868563829787238,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Aber du hast schon ganz gut eingeworfen, weil du Open Source erwähnt hast. Ich glaube, Open Source ist halt auch so ein Zwischenweg zwischen wirklich selber entwickeln, also wirklich eine Software selber entwickeln und vielleicht einfach eine Cloud-Lösung, Software also Service zukaufen, ist halt der Betrieb einer Open Source-Lösung. Das ist natürlich sicher mehr Aufwand, als wenn du das jetzt nur in der Cloud kaufst, ist aber weniger Aufwand, als wenn du das selber entwickeln würdest. Ich glaube, für viele Bereiche gibt es Open-Source-Lösungen und da hat man dann nur unter Anführungszeichen das Hosting und der Betrieb zu dem Ganzen und man hat den Vorteil, dass wenn das Open-Source-Lösung ist, die auch aktiv weiterentwickelt wird, dass man eben selber gar nichts weiterentwickeln muss und profitieren kann von der ganzen Open-Source-Welt, die Features dazu fügt und dementsprechend das Ganze auch erweitert und man selber dann davon profitieren kann. Also das hat schon auch Vorteile, aber man muss auch sagen, das Hosting und das Updaten und so weiter, das braucht auch viel Zeit, auch wenn es weniger ist als selber entwickeln.",
            "start": 1662842,
            "end": 1723556,
            "confidence": 0.8145977653631282,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Aber das bringt mich zu einer interessanten Frage. Ist Make das Selbsterschaffen von der Software und zu betreiben oder fällt unter Make auch das Betreiben von Open Source Software on Premise, obwohl ich mir das auch als Software as a Service einkaufen könnte? Ja, oder?",
            "start": 1724016,
            "end": 1741314,
            "confidence": 0.7364444444444445,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Es kommt darauf an, wie du das siehst. Ich glaube, für jede Tätigkeit kannst du make oder buy machen. Du kannst auch für das klassische Hosting einfach jemanden beauftragen, extern, der das macht. Dann ist es halt auch buy von dem Hosting von deiner Open-Source-Lösung. Also ich glaube, es gibt in allen Bereichen irgendwo make und buy, bei allen Services, bei Software, bei der Programmierung selbst, auch bei der Programmierung selbst. kannst du auf Libraries aufsetzen, dann hast du, obwohl du was selber programmierst, hast du ja einen Teil der Software auch irgendwie von außen durch Libraries dazu gefügt und du fangst ja auch nicht an, jetzt zum Beispiel die Datenbank selber zu programmieren. Auch wenn wir in einem der letzten Episoden gehört haben, du würdest gerne eine Datenbank programmieren, aber üblicherweise, es gibt wenig Leute, die sagen, okay, programmier jetzt zusätzlich zu meinem CRM, was ich entwickle, entwickle ich auch noch schnell die Datenbank mit. Also da sind sich ja glaube ich alle einig. Also auch da in dem Bereich gibt es natürlich Buy in dem Sinne, wenn man Open Source Libraries zum Beispiel dazu nimmt oder auch nicht Open Source Libraries dazu nimmt. Was vielleicht bei der finanziellen Seite noch zu erwähnen ist, wir gehen jetzt davon aus, dass wir diese Arbeitskraft zur Verfügung haben. Aber wenn wir so auf den Arbeitsmarkt schauen, jede Firma sucht neue Mitarbeiter, Mitarbeiterinnen, IT-Fachkräfte und eigentlich hat niemand diese Fachkräfte. Das heißt, man kann jetzt da schon nicht berechnen, wie viel würde denn das kosten. Aber wenn man die Person gar nicht zur Verfügung hat, dann muss man da jetzt die Stunden von jemand anderen abziehen, der sich dann eigentlich nicht mehr um dieses Hauptprodukt, das man zum Beispiel hat, kümmern kann. Und so zieht man sich eigentlich die ganze Energie, die man aufwenden sollte für sein Kernprodukt ab, für irgendwelche nebensächlichen Dinge.",
            "start": 1741374,
            "end": 1841754,
            "confidence": 0.7842829581993569,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Und das nennt man Opportunitätskosten, oder? Ich fühle mich gerade wie im Erstsemester BWL 1.",
            "start": 1841774,
            "end": 1848529,
            "confidence": 0.7403333333333333,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Da lernt man Opportunitätskosten.",
            "start": 1848539,
            "end": 1849880,
            "confidence": 0.78125,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ich glaube schon oder? Also zumindest erwähnt der Professor das mal eben im Nebensatz oder? Oder sagst du, wenn man studiert und BWL eins hat, sollte man ein bisschen schon was Opportunitätskosten sehen?",
            "start": 1850420,
            "end": 1860286,
            "confidence": 0.6876666666666668,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ich habe ja nie sowas BWL, ich habe einmal eine BWL-Vorlesung in Informatik genossen, aber da ist mehr darum gegangen, ob ich den Blumenstraß absetzen kann, den mir irgendwie der Frau von einem Geschäftskunden schenke oder sowas, keine Ahnung mehr.",
            "start": 1860326,
            "end": 1871693,
            "confidence": 0.7025499999999998,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Das sollte doch eher in Rechnungsbesen oder sowas Platz haben, oder?",
            "start": 1872163,
            "end": 1875945,
            "confidence": 0.7879090909090909,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Wie gesagt, es war alles für Informatiker in eine Vorlesung gepresst. Aber das sind natürlich Opportunitätskosten und auch was du am Anfang erwähnt hast, zum Beispiel, wenn sich Mitarbeiter Zeit sparen bei der Reisekostenabrechnung, indem sie einfach die Belege fotografieren können mit dem Handy, auch das sind meiner Meinung nach Opportunitätskosten. Weil wenn ich das nicht hätte, ich weiß ja gar nicht, dass ich mir da eigentlich viel Zeit sparen könnte und vielleicht meinen Prozess verbessern kann. Also auch das sind für mich eigentlich klassische Opportunitätskosten, die ich habe oder die ich zahlen müsste, wenn ich nicht von außen diese Innovation oder neue Features von Software automatisch mit reinbekommen würde.",
            "start": 1875985,
            "end": 1913988,
            "confidence": 0.8134363636363636,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Also das Beispiel von der Reisekastenabrechnung, das habe ich jetzt vor kurzem erlebt, da war ein Weltenunterschied. Vorher habe ich auf meiner Geschäftsreise die ganzen Rechnungen gesammelt, in meinen Rucksack gepackt und dann als ich wieder zu Hause war, habe ich die dann alle in meinen Excel eingegeben, weil ich musste die Originale einreichen. Jetzt bin ich aus dem Taxi ausgestiegen, bin in die Hotellobby gelaufen, vor mir an der Rezeption stand jemand. In der Zeit habe ich die Rechnung kurz gescannt, die Rechnung weggeschmissen, weil es gescannt war und fertig. Also der Zeitaufwand, und das war jetzt nur mit einer Rechnung, aber was ist denn, wenn du mal pro Quartal unterwegs bist oder ähnliches oder vielleicht sogar Consultant bist und das regelmäßig machst? da kommen schon paar stunden zusammen also es sind schon auch die die man muss ja sagen es geht ja der begriff developer experience um ja es gibt ja dann jedenfalls auch den begriff employee experience für mich war es immer ein graus diese excel tabelle auszufüllen von reisekosten. Und jetzt mal eben kurz ein Foto machen von der mit der App das das hat mir Spaß gemacht also.",
            "start": 1914528,
            "end": 1980955,
            "confidence": 0.8011139896373056,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Das ist ja auch das was wir in Episode 6 glaube ich in der Freelancer Episode erwähnt haben, dass man sich ein Steuerberater suchen soll einfach oder eine Steuerberaterin weil es einfach keinen Sinn macht sich, selber hinzusetzen, weil man wirklich was verdient hat, weil es einfach effektiver ist, eine Stunde oder den Verdienst von einer eigenen Stunde einfach in den Steuerberater zu investieren zum Beispiel. Also auch da ist make oder buy durchaus eine Frage und so zieht sich das halt eigentlich durch alle Entscheidungen durch. Glaubst du, dass es auch irgendeinen Bereich gibt, wo es Sinn macht, nicht einzukaufen und irgendwas selber zu machen? Bis auf das Hauptprodukt natürlich, was man klarerweise selber baut.",
            "start": 1980995,
            "end": 2022354,
            "confidence": 0.8060689655172413,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Vielleicht, wenn man einen zweiten Businessstrang aufbauen möchte und etwas prototypen möchte. Oder wenn man vielleicht wirklich businesskritische Features haben möchte, die aber kein Anbieter bietet. Aber dann ist die Frage, ob das nicht schon wieder zum Hauptprodukt zählt. Eine Sache, die ich mir denken könnte und da weiß ich gar nicht, ob das so wirklich so klug ist, was ich jetzt erzähle, aber oft ist es ja für Mitarbeiter auch super spannend, einfach mal etwas anderes zu machen, als das am Hauptprodukt zu entwickeln und die Lösung, die man gerade braucht, selbst zu entwickeln, anstatt sie eigentlich zu kaufen. Aber das ist so eine art mitarbeiter motivation aber da stelle ich mir gerade die frage ne so sollte es ja eigentlich nicht sein also eigentlich sollte man die mitarbeiter ja auch am ball halten und auch mit spannenden aufgaben betreuen am kernprodukt aber das könnte ich mir denken würde ich jetzt nicht so machen aber das fällt mir dazu ein.",
            "start": 2022374,
            "end": 2075760,
            "confidence": 0.8223478260869563,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Das finde ich einen spannenden Punkt, also gerade die Attraktivität von einem Arbeitgeber, wenn ich daran denke, dass viele Firmen einfach extrem alte Software verwenden, weil die tut schon noch oder die funktioniert ja, warum sollte ich umsteigen, weil das ja auch wieder Mehrkosten sind oder eine neue Cloudlösung oder was auch immer, haben wir doch schon immer so gemacht. Das hat halt einen direkten Einfluss dann auf die Attraktivität von der Firma, weil ob jetzt jemand in der Firma arbeiten will, wo extrem alte Software verwendet wird, also klar, wir haben ja schon gehabt, diesen Server im Keller, der das Geld verdient, sowas gibt es ja eh immer, aber wenn das natürlich breit in der Firma ist, dass man sehr alte Software, nicht sehr attraktive Software verwendet, dann kann das durchaus Blocker sein für viele Leute und da rede ich gar nicht von Tech-Leute, wenn jetzt zum Beispiel ein Designer nicht mit aktueller Designsoftware arbeiten kann, würde er auch sagen warum, also ich will vielleicht bei dieser Firma nicht arbeiten oder ein Finanzmensch, dass der die neueste Finanzsoftware hat oder eben dass der nicht Ständig diese Excel-Tabellen, die der Andi ihm schickt für die Reisekostenabrechnung, dass er die händisch irgendwie copy-pasten muss oder sonst irgendwas, sondern dass das automatisch passiert. Auch für den ist das vielleicht wichtig und der will in einer Firma arbeiten, wo es diese Automatisierung gibt.",
            "start": 2076139,
            "end": 2155140,
            "confidence": 0.799260869565218,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ich habe noch ein anderes Beispiel. Ich meine, du hast jetzt gerade von Innovationsblocker mehr oder weniger gesprochen. Ich habe jetzt die Tage gehört und zwar hat eine Firma ziemlich viele Data Scientists gesucht und Data Engineers und die Firma war noch ganz großer Nutzer von Hadoop und es gibt halt kaum noch talentierte Data Scientists, die auf On-Premise-Hardware mit Hadoop ordentlich arbeiten können und jeder Data Scientist ist irgendwie jetzt super flüssig mit big query und und wie sie alle heißen mit den ganzen google cloud produkten zum beispiel und diese firma hat über das letzte jahr festgestellt, sie haben ein richtiges richtiges problem weil sie einfach keine talentierten leute mehr finden nicht wegen dem markt sondern weil, Der Markt ist generell schwierig, aber dann im Speziellen noch Leute zu finden, die dann wirklich schon Erfahrung mit Hadoop haben und nicht mit der Google Cloud und dann auch noch bereit sind, damit zu arbeiten. Ich meine, Hadoop ist ja keine wirklich alte Software. Da reden wir ja jetzt nicht über Software aus 1995 oder ähnliches, sondern es ist ja immer noch Top-Notch-Software, die den Map-Reduce-Algorithmus ja wirklich super ausführt. Doch allein das ist schon schwierig. Jetzt müssen wir uns aber auch mal die augen öffnen nur weil ich etwas einkaufe heißt das ja nicht dass das direkt toll ist ja und dass ich dann geld gespart habe und auch noch zeit oder arbeitskraft sondern es ist ja auch so man hat ja auch ein paar blocker also Oder ein paar Risiken. Auf der einen Seite, wenn du dir einen Service einkaufst, dann habt ihr entweder einen zentralen Einkauf in der Firma, der schaut sich gegebenenfalls schon an, haben wir schon eine ähnliche Firma, mit der wir Verträge machen, könnt ihr nicht das nutzen, damit man nicht zweimal eine Dashboard-Software einkauft zum Beispiel. Dieser zentrale Einkauf muss sich natürlich auch mit dem Thema beschäftigen. Eine andere Alternative ist natürlich, dass jeder Engineering Manager eine Kreditkarte hat und dann einfach diesen Service durchbucht und man so eine Landschaft aus sogenanntem Shadow-IT baut, dass Abteilung A vielleicht Figma fürs Design nutzt und Abteilung B Adobe Photoshop und dann Abteilung C vielleicht Canvas und Abteilung D vielleicht Miro oder ähnliches. Und das alles nutzen sie, um ein Dashboard zu erstellen.",
            "start": 2155960,
            "end": 2291634,
            "confidence": 0.8062148541114061,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ich glaube, du hast jetzt ganz viele Lösungen genannt, die alle nicht dafür geeignet sind, Dashboards zu erstellen.",
            "start": 2291994,
            "end": 2297859,
            "confidence": 0.7578888888888888,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Das ist richtig.",
            "start": 2297899,
            "end": 2298380,
            "confidence": 0.49833333333333335,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Aber es gibt wahrscheinlich sogar Firmen, die das machen da draußen. Ich glaube, der Punkt ist angekommen. Was man aber auch noch sagen muss ist, dass man schon auch wenn man was kauft eine gewisse Flexibilität verliert. Also wenn man natürlich irgendwelche speziellen Features braucht oder irgendwas flexibles bauen muss, dann kann es natürlich schon auch Sinn machen, dass man da selber was baut. Wobei das natürlich auch gerne als Ausrede verwendet wird. Ah, wir sind dann zu unflexibel oder das kann nicht genau unseren Workflow abbilden, unseren Prozess in der Firma. weil an der 200. Stelle im Prozess ist irgendein Spezialfeature nicht möglich. Und sowas wird dann teilweise verwendet, dass man sagt, okay, dann müssen wir das Ganze selber programmieren. Und da stellt sich dann natürlich schon auch die Frage, bin ich vielleicht zu unflexibel als Firma, dass ich mich da vielleicht auf eine externe Software einlasse oder mir da auch die Vorteile rausziehe.",
            "start": 2298460,
            "end": 2354310,
            "confidence": 0.8222322580645159,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Besonders wenn wir das Thema Prozesse ansprechen, ist es auch oft so, wenn man eine Lösung einkauft, sollte man immer darüber nachdenken, ob man nicht den vorhandenen Prozess über Bord schmeißt und seinen neuen Prozess an die Software oder an das Produkt, was man einkauft, anpasst. Ob das nicht gegebenenfalls geringere Schmerzen sind als den anderen Weg, dass man auf seinen Prozess beharrt und dann eine Software sucht, die den erfüllen kann.",
            "start": 2354750,
            "end": 2378958,
            "confidence": 0.8462222222222222,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Und vor allem hat es ja meistens einen Grund, warum diese externe Software, die man sich vielleicht einkaufen will, diesen Prozess hat oder auf diese Prozesse fokussiert ist, weil wahrscheinlich alle anderen Firmen in dieser Branche oder in dieser Industrie oder in diesem Bereich sich einfach auf einen Prozess geeinigt haben, der wahrscheinlich auch sehr gut funktioniert. Also gerade beim Hiring, Recruiting, wenn ich da irgendeine externe Software einsetze, und da irgendein spezielles Feature von meinem Hiringprozess nicht abbildbar ist, dann muss ich mich schon auch fragen, okay, wenn ich jetzt der einzige bin, der dieses Problem hat, vielleicht hat mein Hiringprozess ein kleines Problem. Oder, wenn es wirklich so so wichtig ist, kann ich es vielleicht trotzdem irgendwie lösen in dieser Software oder mit einem Workaround. Aber dass ich so intelligent bin und gescheiter als alle anderen Firmen, da würde ich mir immer überlegen, ist das wirklich die Realität, vor allem wenn es nicht mein Hauptbusiness ist. Dass ich intelligenter bin bei meinem Hauptbusiness ist ja hoffentlich der Fall als meine Konkurrenz, aber wenn es jetzt zum Beispiel um Recruiting geht, wo alle Firmen mit einem ähnlichen Prozess arbeiten, dann würde ich mich schon fragen, macht der Prozess Sinn oder sollte ich vielleicht mal meinen Prozess einfach genauer beobachten und dann auch beurteilen, ob der noch Sinn macht.",
            "start": 2379138,
            "end": 2451678,
            "confidence": 0.8152328767123284,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Natürlich, wenn es an das Thema Prozesse geht, hat man immer mit Schwierigkeiten zu kämpfen, mit Leuten, die vielleicht nicht so viel Flexibilität an den Tag legen wollen, ihrem Job, ihre Arbeitsweise anzupassen. Da muss man dann ein bisschen mit Empathie vorgehen und vielleicht auch denen mal ein bisschen den Grund darlegen, warum man jetzt die Software wechselt, warum man jetzt den Prozess wechselt. Das ist klassisches Change Management. Auch wenn da viele Leute vielleicht keine Geduld für haben, ist da Geduld Gold wert, meines Erachtens nach. Aber Wolfgang, jetzt hast du vielleicht noch einen Tipp für uns, weil ab und zu findest du ja alteingesessene Personen in Unternehmen, die bringen dann Gründe auf, weswegen man nicht diese Software nutzen soll. Zum Beispiel habe ich mal den Grund gehört, warum jemand nicht github.com nutzt. Wenn GitHub.com down ist, dann sind wir alle in unserer Entwicklung geblockt und wir können das Produkt nicht weiterentwickeln. Und deswegen, genau das ist der Grund, warum wir unseren eigenen Git-Storage selbst betreiben. Hast du bei solchen Leuten, und es gibt glaube ich ganz viele Gründe, ganz viele fadenscheinige Gründe, warum man etwas selbst betreiben sollte? Hast du da ein paar Tipps für die Hörer? Also was man sowas angeht also ich.",
            "start": 2452118,
            "end": 2524856,
            "confidence": 0.7909320388349511,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Glaube dass das nicht unbedingt falsch ist das ganze also wenn ich jetzt zum Beispiel eine Datenbank online habe im Internet und mein gesamter Produktionsprozess in meiner Firma läuft auf dieser Datenbank und ich brauche eine Internetverbindung. und meine Internetverbindung schmiert ab und mein gesamter Betrieb mit 2000 Leuten steht, dann habe ich vielleicht wirklich ein Problem. Und dann sollte man überlegen, ob die Datenbank nicht vielleicht wirklich ins lokale Netzwerk verlegt, irgendwo nahe zu den Produktionsmaschinen zum Beispiel, oder ob ich das anders irgendwie lösen kann. Aber dieses Risiko muss ich natürlich abwägen. Also ich glaube, das kann schon geben, solche Fälle. Also es ist nicht automatisch, dass das falsch ist, meiner Meinung nach. Aber wie du richtig sagst, meistens ist es eigentlich eine Ausrede. Und da würde ich mir das halt einfach genauer anschauen. Wie oft passiert denn ein Ausfall eigentlich, wenn ich was selber baue zum Beispiel? Weil ich glaube auch da wieder, dass irgendeine große Firma das wesentlich besser im Griff hat, aufs Jahr gesehen, dass das bessere Uptime-Zeiten hat, ein externes Service als ein internes Service. Oder dass vielleicht sogar was anderes schuld ist, dass eigentlich das Internet schuld ist und gar nicht das Service selbst. Also da muss man sich dann überlegen, okay, vielleicht braucht man eher redundantes Internet zum Beispiel, was heutzutage, glaube ich, sehr wichtig ist, weil in modernen Firmen, wo alle am Computer arbeiten, dann vielleicht wirklich alle geblockt sind, wenn das Internet mal zusammenbricht. Also auch, dass man da, wenn man externe Services hat, dieses Risiko minimieren kann, dass man keinen Zugriff mehr drauf hat. Aber wenn man sich dann im Detail anschaut, ob ein externes Service wirklich schlechter ist als das, was man intern schafft, das wage ich in sehr, sehr vielen Fällen. Hättest du sonst einen Tipp oder ein Standard-Vorgehen?",
            "start": 2524876,
            "end": 2628740,
            "confidence": 0.7864536423841061,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Oft, wenn man solche Fälle hat, wo man Mitarbeiter hat, die dann so, ich nenne es jetzt einfach mal böse gesagt, fadenscheinige Gründe vorlegen, Dann geht es so in dieses Spektrum der Politik dieser Firmenpolitik und da bin ich einfach überhaupt nicht stark drin. Ich hasse Politik. Was ich immer versucht habe in der Vergangenheit ist immer wirkliche Gründe darzulegen warum das jetzt ein Vorteil für die Firma ist. Ein Beispiel war ich habe mal den kompletten Git-Storage von Trivago. von On-Premise nach GitHub gemoved. War ein Riesenprojekt, aber das war eigentlich relativ einfach, weil wir durch sehr viele Features im Security-Bereich, zum Beispiel Passwort-Scanning oder Produktivitätsgewinne, wie zum Beispiel GitHub Actions punkten konnten, wo wir dann zum Beispiel weitere CI-Server on-premise abschalten konnten. Dann hatte ich den Move nach GitHub mit auch Engineering-Kultur-Themen verbunden, wie zum Beispiel InnerSource. InnerSource ist die Ausführung von Open-Source-Best-Practices innerhalb einer Organisation. Dann habe ich das weiter begründet, dass GitHub eigentlich das de facto Industriestandard ist für Softwareentwicklung, dass eigentlich fast jeder Mitarbeiter, den wir neu einstellen, sich bereits mit der Plattform auskennt.",
            "start": 2628760,
            "end": 2707563,
            "confidence": 0.8514525139664809,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Also weder die Opportunitätskosten eigentlich, weil wenn jetzt ein externer Mitarbeiter kommt und du hast da irgendeinen selbstgeschriebenen Git-Server, dann wird er sich auch denken, what the fuck, gibt ja GitLab und GitHub, warum verwenden die nichts von diesen Standardsoftwaren? Oder Bitbucket.",
            "start": 2707603,
            "end": 2724376,
            "confidence": 0.7205714285714285,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Auf jeden Fall habe ich dann mich halt auf die Fakten bezogen, habe ich ein bisschen tiefer in das, in das, in die Firma und in das Produkt auch eingearbeitet. Eine Sache, die auch oft hilft, ist, sprecht doch einfach mal mit dem Support oder macht doch mal einen Call mit dem Account Manager von dem jeweiligen Produkt, weil die Situation, die ihr da habt, dass irgendjemand sich in der Firma querstellt, das ist deren täglich Brot, das haben die dauerhaft. Und die können euch dann auch ein bisschen supporten bei eurer frühen Recherche, wie ihr das zum Beispiel in der Firma platziert. Also sprecht da ruhig mal mit einem Sales-Mitarbeiter, erklärt da ganz offen das Problem, erklärt da auch ganz offen die Gründe, die geführt werden, warum man etwas nicht einführen kann. Bitte beachtet natürlich immer darauf, was ihr sagen dürft. Das müsst ihr bei euch in der Firma mal klären oder einfach mit eurem Manager. Euer Manager sollte euch in der Regel auch dabei helfen. Sprecht einfach mal das Vorgehen mit ihm ab. Hey, ich würde gerne mal einen Pitch machen, dass wir unseren Git-Storage auf GitHub ziehen. Das wären die Gründe, die ich mir überlegt hätte. Was hältst du davon? Würdest du mich da supporten? Und von da aus einfach mal weitergehen.",
            "start": 2724416,
            "end": 2792495,
            "confidence": 0.7818372093023255,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Wobei, da muss ich jetzt gerade sagen, gerade GitHub ist relativ teuer. Also für kleinere Firmen kann das schon durchaus relevant sein, irgendwas anderes zu verwenden. Aber auch da ist es halt immer, dass man, glaube ich, einfach das berechnen muss. Was kostet denn sowas? Und neben den Mitarbeitern ist es ja auch so, du brauchst normalerweise, damit du einen ordentlichen Busfaktor hast, sprich, dass auch mal jemand auf Urlaub gehen kann. dass du mindestens zwei Personen hast, die sich in dem Software-Bereich auskennen oder die dann auch die Feuerwehr spielen können, wenn mal was kaputt geht. Also auch da braucht man dann mehrere Leute.",
            "start": 2792515,
            "end": 2827385,
            "confidence": 0.7987333333333335,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Also zu dem Preis bei GitHub, es kommt immer ganz darauf an, was seid ihr für eine Firma und wie viel ist euch das wirklich wert. Ich habe jetzt gerade mal nachgeguckt, das Standardpricing bei GitHub kostet 40 Dollar pro User pro Jahr. Da ist die erste Frage, wie viele Leute brauchen auch Zugriff? Was ist das wert? Ist Softwareentwicklung eure Kernkompetenz? Betreibt ihr immer noch euren eigenen Jenkins-Server und maintainet ihr diesen? Oder ist das vielleicht das Ops-Team, was das betreibt und wollt ihr das vielleicht in Softwarehand geben? Wie sieht es mit eurem Security-Scanning aus? Wie sieht euer Employer-Branding aus mit eurer Open-Source-Strategie? Also all das zählt ja dann eigentlich in diese 40 Dollar pro Jahr rein. Und auf der anderen Seite, wenn ihr vielleicht schon Microsoft-Kunde seid, ihr bezieht zum Beispiel irgendwie eine MS-Office-365-Lizenz oder ähnliches und seid vielleicht eine größere Firma, dann sprecht doch einfach mal mit dem Einkauf, weil man kann nämlich auch über Microsoft bei GitHub Rabatte kriegen. Also da gibt es noch ganz viele Möglichkeiten, dass ihr final mit hoher Wahrscheinlichkeit gar nicht diese 40 Dollar pro Jahr zahlt. Wenn ihr natürlich eine kleine AG2 mit fünf Leuten seid, dann sieht die ganze Sache ein bisschen anders aus. Aber das muss man im Individualfall einfach mal betrachten.",
            "start": 2827425,
            "end": 2901324,
            "confidence": 0.7754252336448596,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Was sagst du denn den ganzen Leuten, die Sicherheitsbedenken haben mit den ganzen Cloud-Produkten, sei es jetzt Datenschutz oder auch allgemeine Sicherheit? Wenn du jetzt zum Beispiel deinen Source-Code auf GitHub rauflädst, dann hast du ja wirklich alles, was du schaffst als Softwarefirma zum Beispiel, gibst du dann in eine externe Hand oder vertraust dieser externen Hand. Wenn es jetzt da Kritiker gibt, was würdest du denen sagen?",
            "start": 2901740,
            "end": 2926261,
            "confidence": 0.7657499999999997,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Naja, Datenschutz, also wir sind jetzt hier in Deutschland, DSGVO, Datenschutz-Grundverordnung im europäischen Bereich, GDPR. Schaut euch einfach mal an, was diese Services für Zertifizierungen haben und ob die GDPR-compliant sind oder nicht. Die meisten auch amerikanischen Firmen sind es. Bei Amerika ist es immer ein bisschen so eine Sache, weil da gibt es natürlich ganz unten drin noch irgendwelche Subrechte, da wo dann die CIA oder NSA im Sicherheitsfall dann sehr wahrscheinlich schon da reingehen kann. Deswegen sind super viele Leute, glaube ich, auch nicht bei Amazon oder bei Google oder nur in ganz speziellen Regionen. Oder deswegen hat zum Beispiel OVH auch so einen ziemlich großen Zulauf als europäischen Cloud Provider. Jedes Produkt, was einigermaßen groß ist, hat auf jeden Fall etliche Zertifizierungen im Bereich Datenschutz, Compliance und ähnliches. ab und zu auch firmen die je nach größe der firma und je nach größe nach eurer firma die zusätzliche agreements mit sich machen lassen ja geht auch aber in der regel ist das schon alles alles gecovered es kommt natürlich ganz drauf an in welchem sektor ihr seid arbeitet ihr in der rüstungsindustrie habt ihr mit hoher wahrscheinlich oder in in der flugindustrie ihr seid zum beispiel boeing ich gehe stark davon aus ihr habt ganz andere sicherheitsvorkehrungen als die webagentur aus wanne.",
            "start": 2927002,
            "end": 3009549,
            "confidence": 0.8196558139534889,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Eikel Genau, und ich glaube, dass eigentlich die meisten Firmen gar nicht so relevante Daten wirklich speichern, dass jetzt ein Sicherheitsdienst oder so was damit anfangen könnte. Insofern sehe da auch eigentlich kaum Probleme. Es gibt auch viele Sachen, die man einfach dann wirklich verschlüsseln kann, wenn es jetzt zum Beispiel jetzt klassische Nextcloud oder so um so eine Sache geht, die kann man einfach verschlüsseln und dann sind die Daten auch verschlüsselt. Also auch da gibt es Möglichkeiten, dass man auch, wenn man was in der Cloud hat, dass das wirklich sicher ist. Und wie gesagt, ich glaube, dass die meisten Cloudlösungen eigentlich sicherer sind als irgendwelche zusammengestöpselten eigenen Tools, die womöglich seit fünf Jahren nicht mehr aktualisiert worden sind, wo es schon 20 SSL-Lücken gibt in der Zwischenzeit und wenn irgendein Script-Kitty mal lustig ist und eigentlich auf dem Server ein Bot-Scanner laufen lässt, dass man dann womöglich alles löschen könnte auf dem Server und dann ist es zwar wenigstens nicht in fremde Hände gefallen, aber alles ist gelöscht. Aber Andi, wenn ich dich jetzt gerade da habe, du hast ja bei Trivago gearbeitet, wo wir beides miterlebt haben, wo wir beinahe eigentlich alles selber gebaut haben, aus guten und teilweise schlechten Gründen. Wie ist es jetzt bei deinem neuen Arbeitgeber? Wie viel wird da selber gebaut?",
            "start": 3009609,
            "end": 3094447,
            "confidence": 0.8023287671232877,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Von Services, die nicht Teil des Core-Produktes sind, kaufen wir eigentlich fast alles zu. Und alles, was das Core-Produkt anschneidet, bauen wir selbst. Beispiel tools um die plattform zu maintainen und auch zu betreiben das ist fast alles eigenentwicklung da wird kaum etwas dazu gekauft aber reisekosten abrechnungen reisebuchen, e-mails das wird alles das wird alles dazu gekauft und ich muss zugeben, Wenn ich das jetzt so direkt vergleiche mit mit Trivago, wo sehr viel selbst gemacht wurde, das dazukaufen ist schon sehr angenehm, weil natürlich auch die eigene User Experience von den Services ist deutlich angenehmer. Man muss sich da nicht darum kümmern, dass die User Experience von deinen selbstgeschriebenen Tools super ist, weil da hast du komplette Produktteams. Und das ist schon sehr, sehr angenehm. Es macht schon sehr viel Spaß und man baut sich natürlich über Zeit nicht so einen Stack auf, den man kontinuierlich maintainen muss. Und wenn man dann Auswahl von der Hauptplattform hat und dann muss man sich auch noch um den E-Mail-Server kümmern. Also ist es schon sehr angenehm, dass du dich wirklich auf dieses Produkt fokussieren kannst, das weiterentwickeln kannst und dich um dein Kerngeschäft kümmern kannst. Muss ich zugeben. Das ist meine persönliche Meinung jetzt gerade.",
            "start": 3094487,
            "end": 3168722,
            "confidence": 0.8057951219512198,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, also dem kann ich eigentlich nur beipflichten. Und ich würde heutzutage eigentlich, wenn es um irgendeine Software geht, auch immer schauen, gibt es diese Software schon? Gibt es eine Software, die mir das Problem vom Hals schaffen kann, ohne dass ich selber jetzt von null anfange? Und wenn es da eine gibt, dann, wenn die nicht extreme Preise hat, dann würde ich das eher extern zukaufen. Es gibt natürlich schon Bereiche, wo die Preise einfach so unverschämt sind, wo man sich dann überlegen kann, okay, dann macht es vielleicht keinen Sinn, aber im Großen und Ganzen, vor allem es gibt ja auch einen Wettbewerb, sind die Preise dann schon in einem normalen Bereich. Wenn man das dann wirklich vergleicht, was realistisch dann sowas kostet, wenn man das selber machen würde, gibt es eigentlich fast keine Preise, die teurer sind als eine Eigenentwicklung.",
            "start": 3169454,
            "end": 3216074,
            "confidence": 0.7863286713286717,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Und jetzt habe ich dich natürlich vorhin so gechallengt, als du Dein shift von make to buy im privaten umfeld beschrieben hast aber auch im privaten umfeld gehe ich mehr und mehr hin sachen einzukaufen anstatt sie selber zu machen nicht weil ich denke dass meine zeit mir wertvoller ist sondern einfach weil ich oft einfach keine lust habe das zum selbst zu betreiben oder ähnliches.",
            "start": 3216454,
            "end": 3237437,
            "confidence": 0.7991212121212125,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, aber du bist ja schon ein alter Mann, der viel gesehen hat und dann will man immer alles selber machen. Aber ich glaube, es gibt auch eine Zeit, wo man das gerne macht einfach und wo man auch viel dabei lernen kann. Und ich glaube, das ist gut, wenn man das macht. Also man sollte, glaube ich, nicht von Anfang an nur auf alles hosted und alles extern setzen, weil man einfach die Chance vergibt, dass man extrem viel lernen kann.",
            "start": 3237685,
            "end": 3263367,
            "confidence": 0.8141097560975612,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Vielleicht ist es aber auch genau das, was du sagst, weil wir das früher alles selbst gemacht haben, sind wir jetzt froh, dass wir es abgeben können.",
            "start": 3264268,
            "end": 3271416,
            "confidence": 0.8250370370370371,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Kann durchaus sein, ja. Und es gibt, also ich denke mir oft, wenn in Zukunft irgendwelche DevOps-Personen nur mal YAML schreiben können und eigentlich keine Ahnung mehr haben, was überhaupt eine Netzwerkadresse.",
            "start": 3271456,
            "end": 3283689,
            "confidence": 0.81259375,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ist.",
            "start": 3283729,
            "end": 3283809,
            "confidence": 0.671,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ist es dann, ist es dann gut, ist es dann schlecht?",
            "start": 3285811,
            "end": 3288693,
            "confidence": 0.7940909090909092,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ein guter Kumpel von uns, der Dominik, schöne Grüße, beschreibt immer seinen Job entweder als Feuerwehrmann, was auch wahr ist, weil er Reliability Engineer ist, oder als Jaml Engineer, als professioneller Jaml Engineer. Ja weiß ich nicht also was ich als tipp den ganzen jüngeren leuten mitgeben kann wenn die die zeit und das intrinsische die intrinsische motivation habt versucht einfach mal ein projekt und produkt nachzubauen. ihr wollt irgendwas nutzen und ihr sagt ganz im ernst das schreibe ich doch in fünf minuten neu das schreibe ich das kann ich doch besser macht das einfach mal und geht einfach mal dieses rabbit hole runter und schaut mal ob ihr es wirklich besser könnt und in welcher zeit und lasst einfach mal eine stuppe mitlaufen und so nach zwei wochen sagt einfach mal bescheid wir würden gerne euer feedback feedback holen ich glaube Das das wo ich die story gerade erzählt bringt mich auch zu dem zu dem besten und meist verlinkten hacker news kommentar aller zeiten und zwar war das, das show hacker news von dropbox damals als dropbox rauskam war der allererste kommentar also also show hacker news muss man wissen, ist eine Kategorie auf Hacker News, wo Leute neue Produkte vorstellen oder neue Software vorstellen oder ähnliches. Dann prefix man den Titel mit Show HN, Doppelpunkt, und dann Dropbox, a file syncing service for the world, zum Beispiel. Dropbox hat das 2010 oder 2009 oder wann auch immer gelauncht wird, gemacht. Das erste Kommentar war, was ist denn das für ein Scheiß? Jeder Linux-User kann das ja besser. Einfach einen FTP-Server aufsetzen und in deinen File-Tree mounten. Dieser Kommentar wird immer noch überall im Internet verlinkt. Wir verlinken ihn natürlich auch in den Shownotes. Dieser Kommentar ist einfach Gold wert. Er ist ja, wenn man so möchte, ganz unten drunter. Vielleicht nicht falsch, aber Dropbox ist natürlich inzwischen viel, viel mehr.",
            "start": 3288733,
            "end": 3404749,
            "confidence": 0.7767038216560507,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Eine perfekte Abschlussgeschichte. Wenn wir noch mal zusammenfassen. Andi, wann sollte man Software kaufen?",
            "start": 3404789,
            "end": 3411173,
            "confidence": 0.8647142857142859,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Wenn es nicht Teil deines Core-Businesses ist oder deines Core-Produktes, Wenn es wirklich finanziell Sinn macht und wenn du vielleicht sogar finanzielle Rahmen hast, einen finanziellen Rahmen hast, der ein bisschen enger gestreckt ist, auch wenn du eine toughe Deadline hast und vielleicht einfach nur das Produkt jetzt gerade brauchst, also wenn du zeitlich eingebunden bist, oder wenn du halt einfach nicht die technischen Fähigkeiten hast, um dieses komplexe Projekt zum Beispiel umzusetzen. Hast du ein paar Punkte, wann man die ganze Sache selbst bauen sollte?",
            "start": 3411193,
            "end": 3441922,
            "confidence": 0.7776860465116281,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja ich glaube grundsätzlich, das Hauptprodukt sollte man natürlich immer selber bauen oder wenn man wirklich einen Fall hat, wo es einfach keine Software am Markt gibt, die das Problem löst, das kann es natürlich auch geben, aber wie gesagt, da entwickelt man dann vielleicht schon wieder ein neues Produkt, was man weiter verkaufen kann, hat es ja in der Geschichte auch oft gegeben. Wenn man extreme Anforderungen an die Flexibilität hat, dass man so wirklich spezielle Features einbauen will, die jetzt nicht irgendwie über APIs oder so mit irgendwelchen externen Tools ermöglicht werden können, dass man so da von außen zu kann, sondern dass man wirklich in den Kern rein muss. Und ich glaube natürlich, der wichtigste Punkt ist, wenn du die richtigen Leute dazu hast, die Zeit dazu hast und die halt auch dir leisten kannst und du am Ende dann wieder was raus bekommst. Also im klassischen Fall, wenn das halt dein Produkt ist, das du dann auch wieder verkaufen kannst. Weil für eine HR-Software oder Recruiting-Software, dass du die komplett selber entwickelst, ist immer die Frage, hast du dann da so viel Mehrwert, dass sich das wirklich schlussendlich auch kaufmännisch rentiert.",
            "start": 3442802,
            "end": 3503620,
            "confidence": 0.8189692307692306,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Das war es mal wieder mit einer langen Episode von uns und hoffentlich haben wir die Hörerfrage von Hans beantwortet. Lasst uns doch mal wissen, welches Service ihr selbst betreibt und auch warum und vielleicht sogar warum ihr diese auf gar keinen Fall auslagern wollt. Oder vielleicht habt ihr auch ein Beispiel aus eurer Firma von Prozessen, da wo ihr euch wirklich, wirklich wünscht, hätten wir da mal was eingekauft, dann wären wir jetzt schon viel weiter.",
            "start": 3504161,
            "end": 3530583,
            "confidence": 0.7807012987012987,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Wie immer das ganze auf Twitter unter engkiosk oder direkt per E-Mail an uns stetisch at engineeringkiosk.dev und wir hoffen natürlich auch wenn euch zumindest diese Episode in irgendeiner Form sinnvoll erscheint, dass ihr das ganze teilt, vielleicht mit euren Kollegen, Kolleginnen, vor allem wenn ihr gerade diskutiert, vielleicht sollen wir uns was anschaffen, sollen wir was selber programmieren, sollen wir eine Open-Source-Lösung verwenden, dann teilt doch bitte diese Episode, würde uns natürlich extrem freuen und auch sehr helfen und sonst wünschen wir euch eine gute Woche oder gutes Wochenende, je nachdem wann ihr die ganze Sache hört.",
            "start": 3530697,
            "end": 3573363,
            "confidence": 0.8122040816326533,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Bis zum nächsten Mal, tschö!",
            "start": 3574223,
            "end": 3575203,
            "confidence": 0.5036,
            "channel": null,
            "speaker": "B"
        }
    ],
    "confidence": 0.795128419602438,
    "audio_duration": 3583.0,
    "webhook_status_code": null,
    "webhook_auth": false,
    "summary": null,
    "auto_highlights_result": null,
    "content_safety_labels": null,
    "chapters": null,
    "sentiment_analysis_results": null,
    "entities": null
}