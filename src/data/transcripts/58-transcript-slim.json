{
    "language_code": "de",
    "audio_url": "https://audio1.redcircle.com/episodes/dcfd7831-32d4-4a68-b816-85636ed618e9/stream.mp3",
    "punctuate": true,
    "format_text": true,
    "dual_channel": false,
    "webhook_url": null,
    "webhook_auth_header_name": null,
    "webhook_auth_header_value": null,
    "audio_start_from": null,
    "audio_end_at": null,
    "word_boost": [],
    "boost_param": null,
    "filter_profanity": false,
    "redact_pii": false,
    "redact_pii_audio": false,
    "redact_pii_policies": null,
    "redact_pii_sub": null,
    "speaker_labels": true,
    "speakers_expected": 2,
    "content_safety": false,
    "content_safety_confidence": null,
    "iab_categories": false,
    "custom_spelling": null,
    "disfluencies": false,
    "sentiment_analysis": false,
    "auto_chapters": false,
    "entity_detection": false,
    "summarization": false,
    "summary_model": null,
    "summary_type": null,
    "auto_highlights": false,
    "language_detection": false,
    "speech_threshold": null,
    "id": "6214qv2652-c71f-4100-a26e-05d442f8a9f6",
    "status": "completed",
    "error": null,
    "utterances": [
        {
            "text": "Sollten wir alte Software akzeptieren oder lieber jedem Update hinterherjagen? Das ist die Balance die jeder von uns finden muss. Wann update ich Software? Wie lange kann ich alte Software betreiben? Wann ist alte Software ein wirkliches Risiko? Sollte ich bei jeder neuen Major Version direkt updaten? Bringt es überhaupt was eine alte Software auf etwas Neues zu migrieren ohne neue Funktionalitäten zu bekommen? Und welche Risiken verbergen sich hinter den Updates? Und final, ist der klassische Spruch Never Touch a Running System eigentlich noch aktuell oder sogar ein Fehler? All das und weitere Themenbereiche wie Long Term Support, End of Life Dates, die Softwaremetrik Dependency Drift, Dependabot und Rostendes Software besprechen wir in dieser Episode. Viel Spaß! Moment! Bevor der Spaß losgeht, müsst ihr noch was wissen. Wir haben diese Episode direkt bei Andi in Duisburg aufgenommen. Und weil wir so viel Spaß daran hatten, haben wir auch noch eine Kamera mitlaufen lassen. Ihr könnt also jetzt direkt in die SnowNotes gehen, auf den Link dort klicken und könnt uns nicht nur hören, sondern auch sehen, falls das wirklich jemand wollen sollte. Und noch zur Info, durch das andere Setup ist auch die Tonqualität eine andere. Ich vermute immer noch, es liegt an den ganzen Stahlwerken in Duisburg und die hatten irgendwie Einfluss auf die Mikros. Aber jetzt wirklich zum Content und viel Spaß quasi fast live aus Duisburg.",
            "start": 4383,
            "end": 82835,
            "confidence": 0.8207826086956517,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "So, Andi, wie fühlst du dich bei unserem ersten Video-Podcast?",
            "start": 85960,
            "end": 89462,
            "confidence": 0.6035,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Also, wenn man mit Podcast anfängt, dann spricht man ja eigentlich so ins Nichts hinein. Und später hört man seine eigene Stimme. Und das fühlt sich fremd an. Und wenn ich jetzt weiß, dass ich gefilmt werde, fühlt sich noch komischer an.",
            "start": 89502,
            "end": 100527,
            "confidence": 0.7036428571428572,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ich hab schon gedacht, du sprichst vor mir, dass ich ein Nichts bin.",
            "start": 100567,
            "end": 103329,
            "confidence": 0.6972307692307691,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, also ich mach das ja hier nicht freiwillig, aber nun gut.",
            "start": 104029,
            "end": 106930,
            "confidence": 0.6194999999999999,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "So ist das Leben. Wir machen alles für YouTube, Spotify, den bösen Big Giants.",
            "start": 106950,
            "end": 113174,
            "confidence": 0.7581428571428572,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Supportet unsere Plattform überhaupt Videos über Spotify oder müssen wir das da rein injecten irgendwie?",
            "start": 113194,
            "end": 117677,
            "confidence": 0.6608666666666668,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Spotify, gute Frage, ob wir das einbauen können. Werden wir noch herausfinden, aber heute geht es mal um alte Technologien oder vermeintlich alte Technologien würde ich fast sagen.",
            "start": 117777,
            "end": 126923,
            "confidence": 0.7820357142857143,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Wieso vermeintlich alte? Was ist alte Technologie für dich?",
            "start": 126943,
            "end": 129544,
            "confidence": 0.7448888888888888,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Also alte Technologie. Ich habe jetzt gerade gelernt, kürzlich, dass eine Firma eine zentrale Softwarekomponente einsetzt, die auf einem 16-Bit-System läuft, beziehungsweise auf einem alten virtualisierten Windows und die Applikation ist auf 16-Bit. Das ist noch nicht alt.",
            "start": 129805,
            "end": 145695,
            "confidence": 0.7766842105263155,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Haben Waschmaschinen mehr?",
            "start": 145715,
            "end": 146916,
            "confidence": 0.562,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Moderne schon. Du sprichst über WLAN mit deiner Waschmaschine.",
            "start": 146956,
            "end": 150318,
            "confidence": 0.7876666666666667,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, aber ich kann mir schon vorstellen, dass der Hauptchip immer noch so irgendwie 16-Bit operiert und die dann einfach, weil die die alte Software nicht updaten wollten, irgendwie einen neuen Chip daneben gesetzt haben oder so, der dann irgendwie so an die Sensoren mit angeklemmt ist.",
            "start": 150578,
            "end": 161862,
            "confidence": 0.7506808510638298,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, das glaube ich nicht. Da läuft sicher irgendein Linux drauf, irgendein modernes Ding. Wahrscheinlich so ein kleiner Raspberry Pi oder so.",
            "start": 162122,
            "end": 168224,
            "confidence": 0.46577272727272734,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Aber wenn du jetzt mal von Webtechnologien mal sprechen würdest, was würdest du sagen.",
            "start": 168608,
            "end": 171369,
            "confidence": 0.5907142857142856,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Okay, ist alte Software? Ja, ich verwende ja selber quasi noch so an einer Stelle für ein Side-Project, PHP. Es läuft zwar eigentlich schon auf PHP 7, glaube ich, oder so, aber ist eigentlich der Code ist von PHP 5 mit Register Globals und diesen ganzen bösen Sachen.",
            "start": 171429,
            "end": 188215,
            "confidence": 0.810729166666667,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Achso, da hast du aber auch gut Einfallstore, oder? Also ich meine, Register Global is on, oder wie das damals hieß?",
            "start": 188475,
            "end": 193058,
            "confidence": 0.5480476190476191,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, ich glaube, irgendwann ist es dann abgeschafft worden. Ich bin mir gar nicht sicher, ob das noch überhaupt möglich ist, oder ob wir das mal gefixt haben in irgendeiner Form.",
            "start": 193399,
            "end": 200524,
            "confidence": 0.7446129032258064,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Wie sieht es mit jQuery aus?",
            "start": 200544,
            "end": 201645,
            "confidence": 0.6146666666666666,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ist das alles für dich? Ja, jQuery ist überall noch im Einsatz, also wird noch verwendet in neuen Projekten.",
            "start": 201685,
            "end": 207869,
            "confidence": 0.7192105263157895,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Nutzt man da nicht Lodash, Backbone, oder?",
            "start": 207889,
            "end": 210591,
            "confidence": 0.7700000000000001,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, das ist auch schon alles ein alter Hut.",
            "start": 210611,
            "end": 212573,
            "confidence": 0.5995555555555555,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ähnliches?",
            "start": 212633,
            "end": 212973,
            "confidence": 0.645,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ich habe bei einer Applikation noch Marionette. Das war dann irgendwie auf Backbone so eine Aufsatzkatastrophe. Und jetzt mal das zum Bild zu bringen, das ist das Schlimmste. Wenn du jetzt noch ein Bild brauchst und da irgendwas bilden musst, weil du irgendwie einen Wert änderst, das ist eine absolute Katastrophe.",
            "start": 213193,
            "end": 228718,
            "confidence": 0.7826666666666667,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Da kann ich eine schöne Story von neulich erzählen, wirklich von neulich. Ende 2020 habe ich eine kleine Quiz-Applikation, so ein Mehr-Step-Formular-Quiz in Vue.js gebaut. Und das ging dann leider nicht online und dann wurde ich jetzt vor den letzten Tagen kontaktiert. Hey Andi.",
            "start": 229170,
            "end": 245677,
            "confidence": 0.7580227272727275,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Die ging nicht online, weil du sie programmiert hast?",
            "start": 245717,
            "end": 247418,
            "confidence": 0.509888888888889,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Nee, nee, nee. Die lief schon ordentlich, so ist das nicht. Aus irgendwelchen Gründen ging die halt nicht online. sondern wurde ich auf jeden Fall die Tage kontaktiert und gesagt, hey, okay, wir würden das Ding jetzt gerne online bringen. Doch irgendwas klappt da nicht mehr. Also Hintergrund war, das Ding schreibt auch irgendwelche E-Mail-Adressen per PHP dran, das bedeutet, das ist so ein AJAX-Request und dann muss ja mit aktuellen AJAX-Requests an die Domain das freischalten, wer da wohin Request machen darf und so weiter und so fort. Und auf jeden Fall habe ich das dann versucht mal eben zu fixen. Mal eben. Ich habe mir diese JavaScript-Applikation runtergeladen, Git-Clone, npm install und alles ist mir um die Ohren geflogen.",
            "start": 247478,
            "end": 280535,
            "confidence": 0.6812727272727277,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Warum? Die sind nur ein Jahr alt.",
            "start": 280895,
            "end": 282836,
            "confidence": 0.35699999999999993,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, fast anderthalb Jahre inzwischen, ja. Aber irgendwie die ganzen JavaScript-Pakete darunter hatten irgendwie ganz viele Sicherheitslücken und wurden die Tags upstream, also auch im Git-Repositor, irgendwie gelöscht. Dann die damalige JavaScript-Version oder Vue.js-Version und so weiter ist nicht mehr mit neuen Node-Versionen kompatibel und so weiter und so fort.",
            "start": 282857,
            "end": 302111,
            "confidence": 0.73848,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Und du hast die Versionen gepinnt damals, die Libraries?",
            "start": 302131,
            "end": 305753,
            "confidence": 0.5265555555555556,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ich habe ganz genau auf die letzte Versionsnummer gepinnt. Ich hoffe, das macht ihr auch alle, weil meines Erachtens nach sollte man das tun.",
            "start": 305773,
            "end": 311617,
            "confidence": 0.7826249999999999,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Wie macht man das am besten? Gehst du da alle Libraries durch oder machst du das mit einem Befehl?",
            "start": 311937,
            "end": 315781,
            "confidence": 0.5691578947368423,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Naja, immer welchen Library ich einbinde, sage ich, okay, ich nehme die Version 1.0.3. Also ohne Tilde, ohne Dach davor oder ähnliches. Weil ich kann ja nicht sagen, nur jedes Paket, was ich nutze, folgt Semantic Version.",
            "start": 315821,
            "end": 329276,
            "confidence": 0.7097837837837838,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Aber wenn du npm add machst, dann wird dir da ja irgendwie nicht die genaue Version eingefügt.",
            "start": 329636,
            "end": 335559,
            "confidence": 0.7843529411764704,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ich gebe zu, ich habe noch nie npm add benutzt. Ich habe immer das Package.json-File und dann habe ich das zu mir eingetragen.",
            "start": 335599,
            "end": 340582,
            "confidence": 0.655695652173913,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Und die Nummer gepinnt.",
            "start": 340622,
            "end": 343163,
            "confidence": 0.52275,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Also anders, warum sollte man das machen oder warum bin ich ein sehr großer Freund davon? Ist ganz einfach. Wenn man Version pinnt, dann kann man in der Regel davon ausgehen, dass jeder die gleiche Version installiert hat, also auch das CI-System. Die zweite Geschichte, weil nur wenn du eine Tilde hast oder ähnliches, also Tilde Version 1.0.3, dann kann das sein, dass ich eine Version mit 1.0.3 installiert habe, du aber eine Version 1.0.4 und das CI-System 1.0.5. weil es dann unter anderem ja auch andere Versionen zulässt anhand von Semantic Versioning. Und das willst du eigentlich nicht. Du willst überall immer den gleichen Bild. Eine kleine Korrektur. Das Argument zur Installation von verschiedenen Versionen ist nur halbgültig. Jeder aktuelle Package-Manager unterstützt neben der Definition von euren Dependencies bei JavaScript z.B. in der Package.json auch ein sogenanntes Log-File, der Package-Log.json. In diesem Log-File werden spezifische Versionen für die Installation festgehalten, um genau das Problem der unterschiedlichen Software-Paket-Versionen zu lösen. Es wird empfohlen, dieses Logfile ebenfalls mit ins Versionskontrollsystem einzuchecken. Das habe ich in der Diskussion vergessen zu erwähnen. Wenn ihr also das Logfile nicht eingeschickt habt, dann könnt ihr in das Problem von verschiedenen Softwarepaketen rennen. Das ist die erste Baustelle und die zweite Baustelle ist halt, dass du die Upgrades explizit machst. Also ich bin kein Freund von Überraschungen, besonders nicht bei der Softwareentwicklung.",
            "start": 343203,
            "end": 428805,
            "confidence": 0.7782477876106194,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Und darum haben wir bei unserem Projekt bei EngineeringQS überall diesen Dependabot, der uns ständig nervt, wenn Version 3.4.1 Alpha auf.",
            "start": 428885,
            "end": 436812,
            "confidence": 0.7384285714285715,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "3.4.1 Beta.",
            "start": 436822,
            "end": 437052,
            "confidence": 0.42000000000000004,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Upgradet, ein Issue erstellt, ein Pull-Request erstellt und man den dann durchwinken muss. So, glaube ich, schaffst du es ja nur, dass wenn du diese grüne, diese Heatmap auf GitHub, die zeigt, wann du wie oft irgendwas machst, damit die möglichst grün wird, indem du möglichst viele PRs durchwinkst, weil das sind auch Activities und dann wird dein Graph auf GitHub grüner und wenn du dann Codeprints verwendest, was mein Kollege Matthias und ich ja damals programmiert haben, dann kannst du dir ein schönes T-Shirt machen, mit dem Grafen, der sehr grün leuchtet. Das ist dein Hintergrund. Habt ihr T-Shirts verkauft?",
            "start": 442097,
            "end": 475231,
            "confidence": 0.7832970297029701,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ich habe ja ein Poster von euch damals bekommen, aber T-Shirts habt ihr nicht verkauft?",
            "start": 475271,
            "end": 477954,
            "confidence": 0.4604000000000001,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ah, Blödsinn, T-Shirts. Jetzt sage ich selber schon T-Shirts. Weil wir so oft über T-Shirts gesprochen haben vom Engineering Kiosk, natürlich, wer ein Poster verkauft. Du hast es ja schon an der Wand hängen. Das hätten wir da hinten eigentlich für alle, die es übrigens jetzt noch nicht mitbekommen haben, wir machen ja auch ein Video, Hinter uns hätte man das aufhängen können, dein GitHub-Code-Profil.",
            "start": 477974,
            "end": 496771,
            "confidence": 0.6722769230769231,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Aber hol mir die Leute mal ganz kurz ab. Was ist Dependabot? Dependabot ist ein Bot, der auf sein GitHub-Repository guckt und schaut nach, welche Sprache nutzt du bzw. welchen Dependency-Manager. Also für JavaScript die Package.json und für PHP die Composer.json und für Go die Modules.gomod heißt das, glaube ich, jetzt gerade eben. Ich bin Go-Programmierer und weiß gerade nicht, wie der Package-Manager von Go heißt. Aber wie dem auch sei, Der schaut dann danach und sagt, okay, gibt es ein Upgrade von deinen Dependencies? Und dann macht er einen Pull-Request und raise die Version und raise die Dependency. Und ich bezeichne Dependabot als den besten Mitarbeiter, weil er ackert einfach nur so wie ein Tier. Also die Performance-Reviews von Dependabot sind immer top-notch.",
            "start": 496831,
            "end": 537362,
            "confidence": 0.7454193548387097,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Er ist ja kostengünstig.",
            "start": 538223,
            "end": 539784,
            "confidence": 0.39025,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Der Nachteil ist halt natürlich, und das kommt leider bei JavaScript sehr zur Geltung, ist, dass ein simples JavaScript-Projekt mehrere hundert Dependencies haben kann und dass der Release-Zyklus von diesen JavaScript-Paketen halt enorm agil ist, nennen wir es mal. Man könnte auch sagen...",
            "start": 539844,
            "end": 555817,
            "confidence": 0.8467906976744186,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Katastrophal.",
            "start": 555977,
            "end": 557058,
            "confidence": 0.521,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Könnte man sagen. Auf jeden Fall merge ich da halt schon pro Woche 10 Pull-Requests oder sowas. Und ich habe, weiß ich nicht, 9 aktive Dependencies eingetragen. Also jetzt echt nicht viele für ein Jahresgrip-Projekt, aber ich glaube die Subdependencies, die knallen rein. Nun gut.",
            "start": 557078,
            "end": 571922,
            "confidence": 0.7553777777777777,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ich muss mir endlich mal einen Filter erstellen, damit meine E-Mails weniger werden. Damit ich die von dir und deinem Dependabot nicht mehr bekomme.",
            "start": 571962,
            "end": 578984,
            "confidence": 0.7272083333333333,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Naja, zurück zur alten Software. Ist Subversion alte Software?",
            "start": 579464,
            "end": 583505,
            "confidence": 0.6893333333333334,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Das ist eine gute Frage und wir haben ja jetzt gerade am Wochenende ein kleines Community-Treffen gehabt mit einigen HörerInnen in Brüssel auf der FOSDEM.",
            "start": 584252,
            "end": 595199,
            "confidence": 0.8753199999999999,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Nicht letztes Wochenende.",
            "start": 595219,
            "end": 596399,
            "confidence": 0.6943333333333334,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ah ja, dieses Wochenende. Also wir nehmen jetzt gerade auf, vor ein paar Tagen waren wir in Brüssel.",
            "start": 596479,
            "end": 600642,
            "confidence": 0.7482222222222222,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Genau.",
            "start": 601823,
            "end": 602563,
            "confidence": 0.813,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Letztes Wochenende, dieses Wochenende.",
            "start": 602603,
            "end": 604424,
            "confidence": 0.77075,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Was sagt ihr? Wir nehmen kurz nach der FOSDEM auf, genau.",
            "start": 604444,
            "end": 607166,
            "confidence": 0.6734545454545454,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "War wohl letztes Wochenende dann? Oder habt ihr da in Deutschland schon wieder einen anderen Begriff?",
            "start": 607626,
            "end": 610888,
            "confidence": 0.5615,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Nee, letztes Wochenende war wirklich das vergangene und dieses Wochenende ist das kommende Wochenende.",
            "start": 610928,
            "end": 615130,
            "confidence": 0.7497857142857143,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, genau. Okay, dann reden wir eben gleich. Auf jeden Fall haben wir da ein kleines Community-Treffen gehabt, sind einige Leute gekommen, war super cool, super nett. Und da haben wir auch gelernt, dass ein Unternehmen gerade auf Git umgestellt hat von SVM. Wir haben da auch mit ein paar Leuten gesprochen und alle haben irgendwie gemeint, so spät und um Gottes Willen gibt es das überhaupt noch. Aber das ist die Frage, ist SVN überhaupt alt? Vor allem die Frage ist, die haben ja die letzten Jahre auch entwickeln können. Warum sind sie nicht bei SVN geblieben? Also wir könnten jetzt natürlich fragen, was der Grund war, aber es würde mich auch interessieren, wenn es die letzten Jahre funktioniert hat, warum steigt man auf Git um? Vor allem man muss ja auch die ganzen Tools womöglich umbauen. die rundherum um dieses ganze SVN-System arbeiten.",
            "start": 615170,
            "end": 661512,
            "confidence": 0.7704275862068963,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Das ist aber jetzt mal eine interessante Frage. Glaubst du wirklich, es gibt in dem modernen Open-Source-Ökosystem mehr Tools, die immer noch mit Subversion arbeiten als mit Git?",
            "start": 661532,
            "end": 669817,
            "confidence": 0.6558928571428574,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Na, mehr sicher nicht.",
            "start": 669837,
            "end": 671018,
            "confidence": 0.65525,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, aber wenn die zum Beispiel eine komplette Modernisierung und eine Annäherung an den existierenden Open-Source-Stack haben möchten, zum Beispiel als Ziel, dann wird es ja mit hoher Wahrscheinlichkeit mehr Support im Open-Source-Ökosystem für Git geben als für Subversion, oder?",
            "start": 671058,
            "end": 684886,
            "confidence": 0.7601500000000001,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Das kann natürlich sein, aber wenn du deine CI, CD irgendwie rund um SVN angepasst hast und aufgebaut hast, musst du natürlich das alles mit umstellen. Das heißt, das hängt ja alles hinten dran nochmal. Es ist ja womöglich nicht nur SVN, sondern alle Leute müssen sich umgewöhnen, du müsst einen neuen Workflow einbauen in die Köpfe der ganzen ProgrammiererInnen und du musst vielleicht irgendwelche Tools im Hintergrund austauschen, du musst deinen Server austauschen, Backup, was auch alles hinten dran hängt. Das heißt, du musst es komplett neu aufstellen. Ist ein großes Projekt, würde ich sagen.",
            "start": 685066,
            "end": 714993,
            "confidence": 0.7678854166666665,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Also die Gründe für das Upgrade von Subversion nach Git kenne ich jetzt leider auch nicht.",
            "start": 715193,
            "end": 719417,
            "confidence": 0.8118125,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Der Grund... Ja, aber wann würdest du updaten grundsätzlich? Oder würdest du sagen, sofort immer auf Git?",
            "start": 719457,
            "end": 725341,
            "confidence": 0.7180588235294119,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ne, das jetzt nicht. Also ich denke, du hast Use Cases für alles. Was ich mir aber gut vorstellen kann, ist zum Beispiel Teil der Flexibilität und der Remote Arbeit. Bei Subversion brauchst du für jeden Befehl eine Konnektivität zum Server. Sogar für einen SVN-Log musst du eine Konnektivität zum Server haben. Und wenn du jetzt mal vielleicht sogar deinen Mitarbeitern erlauben möchtest, von Mallorca zu.",
            "start": 725401,
            "end": 750060,
            "confidence": 0.7931969696969696,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Arbeiten, oder... Ja, auch da gibt es Internet.",
            "start": 750140,
            "end": 753542,
            "confidence": 0.73175,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, das ist richtig.",
            "start": 753583,
            "end": 754643,
            "confidence": 0.615,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Im 19. Bundesland, 18., 19., 20., wievieltes Bundesland?",
            "start": 754683,
            "end": 756585,
            "confidence": 0.50525,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Das 17.",
            "start": 759052,
            "end": 760723,
            "confidence": 0.6094999999999999,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Bundesland.",
            "start": 760733,
            "end": 761854,
            "confidence": 0.776,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Bayern und Franken ist dabei aber ein Bundesland.",
            "start": 761894,
            "end": 763876,
            "confidence": 0.8141249999999999,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Das brauchst du mir nicht erzählen, solange du Österreich nicht als Bundesland mitrechnest.",
            "start": 764856,
            "end": 769039,
            "confidence": 0.5437692307692308,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Wenn man zum Beispiel seinen Mitarbeitern mal erlauben möchte, um aus dem Zug zu arbeiten, da gibt es dann offiziell kein Internet mehr.",
            "start": 769079,
            "end": 776184,
            "confidence": 0.7792173913043479,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Das kenne ich leider zu gut, vor allem wenn man durch Deutschland fährt. Sobald man in Österreich oder in Holland zum Beispiel wieder ist, ist das alles schon besser.",
            "start": 776684,
            "end": 783269,
            "confidence": 0.7245172413793106,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Dann denke ich halt schon macht das Sinn.",
            "start": 784171,
            "end": 786693,
            "confidence": 0.8075,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, aber trotzdem du machst ja, ja gut, du kannst natürlich offline committen.",
            "start": 786713,
            "end": 790476,
            "confidence": 0.6559999999999999,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Nein, bei Subversion nicht.",
            "start": 791177,
            "end": 791977,
            "confidence": 0.45475,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, ja, na, ich sag bei Git kannst du wenigstens offline committen, wenn du wirklich committen willst.",
            "start": 792218,
            "end": 796001,
            "confidence": 0.6903529411764705,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Du hast halt eine komplette Kopie von deinem Repository lokal, ja, und somit, wo du halt bei Subversion den Code lokal hast, aber immer wenn du auf einen anderen Branch wechseln möchtest, dann brauchst du halt Konnektivität im Server.",
            "start": 796041,
            "end": 807790,
            "confidence": 0.6599999999999999,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Aber die Frage ist ja immer, macht es Sinn, auf was Neues zu wechseln, ohne dass ich Funktionalität dazugewinne? Also, wenn ich jetzt eine 16-Bit-Anwendung habe auf einem alten Server oder virtualisiert, ist ja egal, und ich habe die alte 16-Bit-Anwendung und die funktioniert und in meinem ganzen Ecosystem ist das irgendwie eingebunden, alles funktioniert. Sollte ich dann wegmigrieren oder nicht? Das hängt ja auf irgendeinem kleinen Server im Eck. Da ist Sicherheit auch egal.",
            "start": 808130,
            "end": 833423,
            "confidence": 0.7995866666666669,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Naja, also klar, das Sicherheitsthema ist immer ganz vorne parat. Aber wird diese Änderung noch verändert?",
            "start": 833883,
            "end": 841187,
            "confidence": 0.81325,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Diese Änderung?",
            "start": 841227,
            "end": 842428,
            "confidence": 0.7945,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Diese Applikation. Wird diese Applikation, deine 16-Bit-Applikation noch weiterentwickelt?",
            "start": 842448,
            "end": 845870,
            "confidence": 0.746888888888889,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, die greift niemand mehr natürlich an, sonst zerbricht sie.",
            "start": 845890,
            "end": 848932,
            "confidence": 0.7164,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, okay. So, und darauf basiert dein Business?",
            "start": 848972,
            "end": 852354,
            "confidence": 0.7082499999999999,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, ein Teil zumindest. Aber wenn das eine Blackbox ist, die funktioniert.",
            "start": 852854,
            "end": 858795,
            "confidence": 0.66025,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, und was passiert, wenn die nicht mehr funktioniert? Ja, das ist eine gute Frage. Ich glaube, darum geht es halt. Ich glaube, es geht halt, jetzt mal angenommen, du hast irgendeine Blackbox in der Ecke stehen, weil ich habe ja schon mal erwähnt.",
            "start": 858835,
            "end": 871319,
            "confidence": 0.679159090909091,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Die Legacy verdient das Geld.",
            "start": 871359,
            "end": 872459,
            "confidence": 0.5526,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Die Legacy verdient das Geld und ich bin fest davon überzeugt, dass jede Firma, irgendwo einen Rechner in der Ecke stehen hat, der Staub fängt, der sich keiner mehr traut anzufassen, aber jeder weiß, wenn der Stecker von dem Ding gezogen wird, dann bricht hier, dann funktioniert irgendwas nicht und das fällt irgendwie nach Monaten erst auf, nach, keine Ahnung, vielleicht auch bei der Steuerprüfung oder so, das ist völlig egal, ja, aber das führt zum Desaster.",
            "start": 872479,
            "end": 895876,
            "confidence": 0.7390779220779221,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Aber macht das Sinn? Also ist das ein Problem oder ist es kein Problem?",
            "start": 895916,
            "end": 899740,
            "confidence": 0.6894285714285715,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ah, ich denke, dass das solche Elemente sind, die wirklich geschäftsschädigend sein könnten. Da redet man ja auch von Risiken von Business Continuity. Ja? So nach dem Motto, wenn du zentrale Prozesse hast oder wenn du Prozesse hast oder Applikationen oder irgendwas, was 20, 25 Prozent deines Revenue macht oder ausmacht oder beziehungsweise dafür irgendwie verantwortlich ist und dafür gebraucht wird und das sich keiner mehr traut anzufassen, ja? Und da ist vielleicht ein Mitarbeiter dann noch, der weiß wie es geht, dann hat der natürlich den Hebel in der Hand. Also der Junge oder die Dame hat dann die Firma in der Hand. Und oh, ich möchte 300.000 verdienen, no problem, weil du hast ja keine andere Möglichkeit. Und du schießt ja halt selbst ins Knie in der Hinsicht. Und jetzt, was ist, wenn die Person dann jetzt zum Beispiel gar nicht geht, sondern vielleicht sogar einen Unfall hat? Also irgendwie was Unvorhergesehenes passiert. Boof. Und dann bricht das Revenue 20% ein. Ich bin mir nicht sicher, ob jede Firma das verkraften kann. Dann führt es zu Entlassungen und dann geht das Schneeballsystem los.",
            "start": 900200,
            "end": 965793,
            "confidence": 0.7629351351351353,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, ganz oft sind es ja auch irgendwie Elemente, die jetzt nicht so im absoluten Kern fürs Business notwendig sind. Also was ist, wenn das drei Tage stehen darf, weil das irgendeine Abrechnungsgeschichte ist im Hintergrund oder keine Ahnung, irgendeine Verwaltungssache?",
            "start": 965833,
            "end": 979691,
            "confidence": 0.793170731707317,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, okay, aber wir reden ja von Elementen. Wenn die drei Tage stehen, auch in drei Tagen findest du ja niemanden, der das mit einer heißen Schrecknadel anfasst.",
            "start": 980072,
            "end": 989075,
            "confidence": 0.7678928571428572,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Wahrscheinlich nicht, ja.",
            "start": 989115,
            "end": 990296,
            "confidence": 0.47833333333333333,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ich persönlich denke, keiner möchte daran arbeiten. Ja, weil es ist alt, es ist nicht dokumentiert, es ist sehr wahrscheinlich auch unglaublich komplex. Mein liebstes Beispiel, vielleicht ganz viel Code mit Bitshifting, dann würde ich das nicht verstehen. Ich denke aber, man muss sich dieser dreckigen Geschichte stellen. Ich denke, man sollte sich diese Putzhandschuhe anziehen, die echt viel Säure abkönnen und dann da richtig tief in den Dreck reingehen.",
            "start": 990336,
            "end": 1015090,
            "confidence": 0.8319857142857142,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Aber die Frage ist ja immer, okay, wenn es jetzt ganz alt ist, dann sind wir beide der Meinung, das muss weg. Aber jetzt haben wir einen ganz großen Bereich zwischendrin. Zwischen ganz alt und natürlich super hipster neu. Ja. Wo in diesem Bereich weiß ich wann, wo ich umsteigen soll? Wann mache ich das Upgrade, das Update? Und vor allem, es hängt ja auch immer ganz viel dran. Ich kann ja sagen, ich update eine Software und das kennen wir ja alle. Wir updaten eine Versionsnummer höher auf von der Datenbank zum Beispiel und plötzlich bricht alles zusammen, weil die irgendein neues Flag eingeführt haben und der ganze Rattenschwanz, alles was irgendwie zur Datenbank connectet, inklusive allen Analytics-Tools, Reporting-Tools und so weiter, die brechen alle zusammen wegen dem kleinen, kleinen Update.",
            "start": 1015130,
            "end": 1061695,
            "confidence": 0.7964393939393937,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ich glaube, da gibt es nicht die eine Antwort. Ich halte mich da immer an ein paar Ankern fest. Wir haben jetzt diese zwei Extreme. Ganz alte Software auf der linken Seite und hipster Software. Das bedeutet, jedes Nuller-Release nehme ich mit am Releasetag. Gehen wir mal in das eine Extrem. Gehen wir mal in diese Nuller-Release-Geschichte. Gehen wir mal sagen, okay, jetzt gerade kommt eine neue Versionsnummer raus und ich wechsle sofort auf die neue Versionsnummer und puff, gleich am selben Tag, vielleicht auch ein paar Minuten später nach Release, bin ich persönlich kein Fan von, weil besonders wenn dieses Release größere neue Features dabei hat, ist es Es mag zwar sehr gut getestet sein, aber es kommt halt immer wieder vor, dass da halt mal ein Bug drin ist, weil niemand kann verhindern, bugfreie Software zu schreiben. Und man weiß ja gar nicht, ob die Software Semantic Versioning folgt oder nicht. Also das bedeutet bei großen neuen Features die Hauptversion raisen oder vielleicht sogar bei Breaking Changes die Hauptversion raisen und so weiter und so fort. Also auf dem kompletten Extrem bin ich jetzt nicht. Ich bin aber jetzt auch nicht auf der anderen Seite, dass man sagen würde, ich nutze das so lange, wie es mir reicht. Und damit meine ich jetzt, wer heute noch eine MySQL 5.5, 5.6, 5.7 oder Ähnliches betreibt, meines Erachtens ist das grob fahrlässig. Wie alt ist diese Version?",
            "start": 1063443,
            "end": 1140689,
            "confidence": 0.7666118143459917,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Gute Frage, aber schon einige 2016, na 2014 ist 8 rausgekommen, oder?",
            "start": 1141990,
            "end": 1147393,
            "confidence": 0.6607500000000001,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Und ich glaube, die haben noch nicht mal als kompletten Funktionsumfang für JSON-Datentypen und ähnliches, oder?",
            "start": 1150160,
            "end": 1155144,
            "confidence": 0.6922499999999999,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, auf keinen Fall. Da war noch gar nichts da. Das ist alles mit 8.",
            "start": 1155264,
            "end": 1159258,
            "confidence": 0.6405333333333333,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Oder die ganze MySQL-GIS-Geschichte.",
            "start": 1159268,
            "end": 1161210,
            "confidence": 0.8105,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Das war alles später, ja. Oder diese... Ja, GIS teilweise vielleicht, aber es ist alles auf jeden Fall erst später gekommen. Aber das sind ja Features. Die Features sind jetzt weniger relevant. Ob ich jetzt ein Feature habe, was ich sowieso nicht nutze, ob ich das jetzt habe oder nicht, ist dann irrelevant. Aber es geht halt um die Security-Klamotte zum Beispiel oder die Sicherheit.",
            "start": 1161250,
            "end": 1180125,
            "confidence": 0.6845538461538461,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Die Security-Geschichte auf der einen Seite, aber woran ich mich immer so festhalte, ist dieses Supported Services, dieses End of Life, EOL. Weil jede Software hat in der Regel, also jede größere Software, jeder etabliertere Software, Viele Code-Pakete haben es jetzt nicht. Die haben meist so ein EOL-Scheme. Das bedeutet, jede Version, die released wird, wird für zwei Jahre oder ähnliches supported. Du hast dann also so ein Sliding-Window. Kommt immer was Neues raus, verschiebt sich dieses Sliding-Window von supported Versionen. Wie zum Beispiel bei der Sprache Golang. Das ist ganz interessant. Bei der Golang, ich glaub, da kam jetzt Version 1.20 raus, jetzt vor kurzem. Und was dann supportet wird, ist Version 1.20 und 1.19. Und just in dem Moment, wo 1.20 rauskam, ist der Support für 1.18 verfallen. Das bedeutet, für 1.18 gehen keine Security-Fixes mehr ein. Zugegeben, ich weiß gerade nicht, ob es nur die aktuelle und eine davor oder zwei davor waren. Du hast halt dieses Sliding-Window. Umso mehr Versionen released werden, umso schneller werden die alten Versionen dann halt, ich sag mal, gedroppt, nennt man das vom Support. Und das ist halt so der Anker, an dem ich festhalte, wo man sich so ein bisschen schützt. Man springt nicht auf jede neue Hipster-Version und nicht auf jede neue Nuller-Version. Aber man sollte auch aufpassen, dass man aus diesem EOL-Window nicht rauskommt.",
            "start": 1180165,
            "end": 1258911,
            "confidence": 0.7925398230088494,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Aber wie du sagst, in vielen Bereichen hast du es gar nicht. Wenn du dann mit JavaScript hantierst oder so, was nach eineinhalb Jahren komplett nicht mehr zum Bauen geeignet ist, weil einfach alle Versionen weg sind oder irgendwie ein Problem ist.",
            "start": 1259364,
            "end": 1273725,
            "confidence": 0.7607380952380952,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Naja, aber bei Javascript-Paketen hast du es wahrscheinlich nicht, aber sehr wahrscheinlich, also hoffe ich mal, und da muss ich jetzt sagen, weiß ich gerade nicht, ich hoffe mal, es ist für Node so. Also was ich zum Beispiel öfter sehe in Chainshocks ist, dass der Support für Node.js in Version 16 gedroppt wurde. So, da hast du doch dein mehr oder weniger EUL ja schon. Und wenn du dann halt upgraden möchtest auf React, weiß ich nicht, wo sind wir da? 15, 17, 2?",
            "start": 1274246,
            "end": 1299714,
            "confidence": 0.7136117647058822,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Keine Ahnung.",
            "start": 1299724,
            "end": 1300684,
            "confidence": 0.47150000000000003,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Auf die neue React-Version. Dann wird die React-Version irgendeine Subdependency haben, die nicht mehr auf Node.js 16 läuft. Und das ist ja unter anderem dann so dein EUL-Window, dein implizit definiertes EUL-Window, was ich dann sehr schade finde, weil es ja nirgendwo steht und keiner weiß, was das wirkliche EUL-Window ist. Aber dann mit dem Abschaffen des Supports von Node.js Version 16 hinkst du dann hinterher und das ist dann die Kette, der du folgst. Das bedeutet, du kannst dann gar nicht auf die neue React-Version hochgehen.",
            "start": 1300724,
            "end": 1329666,
            "confidence": 0.7867126436781611,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Aber die Frage, die sich mir stellt, ist halt immer, wenn ich jetzt irgendwo eine Software habe, die älter ist, die abgeschlossen ist, Blackbox-artig abgeschlossen ist, die jetzt auch nicht direkt weiterentwickelt, weil sie irgendwie was abgeschlossenes macht oder das Projekt abgeschlossen ist. Warum sollte mir die Mühe machen, ständig da Updates zu fahren, Zeit zu investieren, immer wieder alle drei Monate neue Versionen einspielen, höher zu gehen, höher zu gehen, höher zu gehen, wenn es ja so auch läuft.",
            "start": 1329706,
            "end": 1359687,
            "confidence": 0.8508875000000001,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Also, ich sage immer, oder nicht ich, der Spruch kommt nicht von mir, sondern ich habe ihn irgendwann in meiner Laufbahn mal aufgefasst, Software rostet. Und unter gewissen Umständen ist das vielleicht auch gar nicht falsch, das was du sagst. Das bedeutet, du hast ja die Box und die läuft, Blackbox, und ich gehe jetzt nicht davon aus, dass das was Proprietäres ist von irgendeiner Firma, sondern das ist irgendwann mal Software, die ihr inhaus geschrieben habt.",
            "start": 1360487,
            "end": 1381817,
            "confidence": 0.7110649350649352,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, aber vielleicht auch was Proprietäres, ist ja egal.",
            "start": 1382678,
            "end": 1384999,
            "confidence": 0.7085555555555556,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Naja, bei Proprietär muss ich halt schon gucken, ist die Firma noch dahinter und so weiter und so fort.",
            "start": 1385555,
            "end": 1390277,
            "confidence": 0.7734736842105264,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, aber die will mir ja vielleicht auch eine neue Version verkaufen. Muss ich unbedingt auf die neue Version kommen?",
            "start": 1390318,
            "end": 1394920,
            "confidence": 0.6895,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Nee, musst du nicht, aber dann gehst du ja eine aktive Entscheidung ein, dass du ein Risiko entgehst.",
            "start": 1394940,
            "end": 1399522,
            "confidence": 0.678388888888889,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Was für ein Risiko?",
            "start": 1399562,
            "end": 1400583,
            "confidence": 0.5655,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Wer weiß, was morgen ist? Wer weiß?",
            "start": 1402004,
            "end": 1403645,
            "confidence": 0.7898571428571428,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, aber das ist immer so.",
            "start": 1404166,
            "end": 1404966,
            "confidence": 0.6418333333333334,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Okay, bestes Beispiel. Du hast eine Software für Rechnungsstellungen, ja? 19% Mehrwertsteuer. So. Und auf einmal, was kam?",
            "start": 1405346,
            "end": 1412851,
            "confidence": 0.6683333333333333,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Du meinst dieses Corona-Zeug?",
            "start": 1412891,
            "end": 1414352,
            "confidence": 0.4895,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "So sieht's aus. Ich glaube, wir, Deutschland, hat mal einen sehr agilen Move gemacht und hat, glaube ich, innerhalb von drei Monaten gesagt, ja, pass mal auf, in drei Monaten gilt für ein Jahr 16% Mehrwertsteuer. War doch irgendwie sowas, ne?",
            "start": 1414393,
            "end": 1426120,
            "confidence": 0.7237560975609758,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, aber die gute Software kann das vielleicht einfach in einem Setting einstellen.",
            "start": 1426180,
            "end": 1430463,
            "confidence": 0.5773846153846154,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Wir reden ja über alte Software.",
            "start": 1430503,
            "end": 1431404,
            "confidence": 0.6163333333333334,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, sogar. Also, ich habe eine ganz alte Software zum Rechnungslegungsschreiben. Ist irgendeine Open-Source-Software. Keine Ahnung. Ich brauche die ganz, ganz selten. Also, das generiert mir halt da BDF oder so. Die kann es zum Beispiel.",
            "start": 1431732,
            "end": 1442729,
            "confidence": 0.7431944444444445,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Okay. Aber deine Blackbox-Software kann das jetzt nicht.",
            "start": 1442809,
            "end": 1445613,
            "confidence": 0.46425000000000005,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Okay. Gehen wir mal davon aus, ich kann es nicht.",
            "start": 1445653,
            "end": 1447516,
            "confidence": 0.6005,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Und du stellst ungefähr 2000 Rechnungen pro Monat. Was machst du?",
            "start": 1447936,
            "end": 1451799,
            "confidence": 0.5786363636363636,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Dann hast du wahrscheinlich ein Problem, ja.",
            "start": 1451819,
            "end": 1453360,
            "confidence": 0.32071428571428573,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Studenten anheuern, die 19 auf 16 runterrechnen.",
            "start": 1453400,
            "end": 1459265,
            "confidence": 0.7007142857142857,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Im Idealfall hast du Zugriff noch auf die Datenbank, weil die schreibt dir in die Datenbank und dann schreibst du in einen Trigger, der mit dem Befehl alle Rechnungen innerhalb von einem gewissen Datum nach unten schreibt. So machen das viele. Irgendwelche Dirty Hacks, damit diese Blackbox noch weiter läuft.",
            "start": 1459365,
            "end": 1476278,
            "confidence": 0.7097200000000001,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Genau, solche Moves kannst du machen, aber es ist ja eine Blackbox, deswegen kennst du ja den ganzen Funktionsumfang mit hoher Wahrscheinlichkeit gar nicht, deswegen weißt du ja gar nicht, was dein Trigger eigentlich so für Nachwehen hat und vielleicht sogar gegebenenfalls Dateninkonsistenzen erzeugt, die dann erst fünf Jahre down the line irgendwie auffällig werden.",
            "start": 1476318,
            "end": 1494530,
            "confidence": 0.7557636363636362,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Aber dann kommt ja eigentlich alles wieder zurück, dass man sagt, okay, ich kann die Software nicht mehr ändern und adaptieren, sogar wenn sie Open Source ist. Also wie gesagt, ich arbeite ja teilweise auch mit eigener Software von mir, die extrem alt ist, die ich dann selber gar nicht mehr bauen kann. Ich ändere einen Wert, weil hin und wieder muss man halt irgendeine Kleinigkeit ändern, dann probiere ich das zu bauen und dann sehe ich, dass meine ganze Pipeline tot ist, weil sie seit zwei Jahren halt nicht mehr gelaufen ist. irgendwie ein Bild fällt oder irgendeine dumme Javascript-Library. Javascript-Libraries sind eine Katastrophe, ja. Also ich habe auch schon irgendwas auf GitHub selber dann runtergefoggt und irgendwie gebildet, damit ich diese dumme uralte Lippe, die mir irgendeinen Grafen malt oder so noch.",
            "start": 1495651,
            "end": 1534223,
            "confidence": 0.7475223880597013,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Aber genau um das Problem, was du jetzt gerade beschreibst zu gehen, empfehle ich zum Beispiel, lass deine CI-Pipeline, und deine CI-Pipeline heißt jetzt nicht unbedingt immer deine Unit-Tests, sondern eigentlich nur ein Make-Install, also installiere deine Dependencies aus deinem Package-Manager jede Nacht. Das bedeutet, lass deine Software jede Nacht nur bauen. Der Grund ist ganz einfach, genau das, was du sagst. Wenn du zum Beispiel nicht überall lokale Mirror hast von deinen Dependencies, also lokal in-house, sondern wirklich noch auf das Original Goaling-Repo gehst oder auf GitHub oder woher auch immer du deine Dependencies siehst, npm.org heißt das, glaub ich, ja, aber es gibt nicht. Doch. Und die löschen eine Version. LeftPad jetzt zum Beispiel. Dann kriegst du das am nächsten Tag sofort mit.",
            "start": 1534936,
            "end": 1579692,
            "confidence": 0.7266960000000002,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, aber das letzte Verrasst du, dass ich eine CI-Pipeline habe, die das irgendwie bauen kann.",
            "start": 1580418,
            "end": 1585499,
            "confidence": 0.5321875,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Genau.",
            "start": 1586459,
            "end": 1586959,
            "confidence": 0.47,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Wenn ich von bauen spreche, kann es ja auch einfach nur ein npm build sein, was ich lokal auf meiner Commandline ausführe.",
            "start": 1586979,
            "end": 1592561,
            "confidence": 0.7822727272727271,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Also in der CI-Pipeline muss jetzt kein Jenkins oder GitHub Actions oder CircleCI sein, das reicht für mich auch irgendwo ein Cronjob auf irgendeiner Linux-Node, der ein Make-Install macht.",
            "start": 1592781,
            "end": 1601363,
            "confidence": 0.6481724137931036,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, aber das müsste ich dann einrichten.",
            "start": 1601423,
            "end": 1602723,
            "confidence": 0.5650000000000001,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Genau. Und dann, wenn das Ding fehlschlägt, weißt du halt, oh, du hast eine externe Abhängigkeit.",
            "start": 1602843,
            "end": 1607625,
            "confidence": 0.6876875,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Und der muss mir dann irgendwie ein E-Mail schreiben oder so.",
            "start": 1607665,
            "end": 1609886,
            "confidence": 0.43509090909090903,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, aber wenn ein Kron fehlschlägt, ist ja im Haus-Linux-System drin Mail. Und wenn du dann ein Mail eingerichtet hast, ja, also das geht ja schon mit Wortmitteln alles. Ist zwar jetzt nicht mehr das aktuellste Prometheus-Alerting, ja, das verstehe ich auch, aber es funktioniert. Aber wenn du es halt jede Nacht bauen lässt, auch wenn du keine Änderungen hattest und du hast externe Dependencies und Da verändert sich was, was du eh nicht unter Kontrolle hast. Dann kriegst du am nächsten Tag einen Ping und kannst sofort reagieren, anstatt zwei Jahre down the line, so wie du das schon gesagt hast.",
            "start": 1609926,
            "end": 1638242,
            "confidence": 0.7030882352941172,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Würdest du dann empfehlen, also übrigens nur nochmal zur Erklärung, ich bin kein Fan von alter Software, ich stelle da nur Davis Advocates Fragen. Nur, dass das auch klar ist. Es sind alles Side-Projects von mir, die ganz, ganz unwichtig sind.",
            "start": 1638262,
            "end": 1652785,
            "confidence": 0.7148536585365853,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Also das glaube ich dir gerade nicht. Ich glaube, du weinst der Software hinterher, weil früher alles besser war.",
            "start": 1652825,
            "end": 1657986,
            "confidence": 0.7720526315789474,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Früher war sowieso alles besser, sogar die Zukunft. Sehr schön, sehr schön. Jetzt hast du mich durcheinander gebracht. Was wollt ihr eigentlich fragen? Ah genau, ob du jetzt empfehlen würdest, dass man jetzt auch als kleiner Softwareentwickler anfängt, dem Kunden solche Fenster vorzugeben, dass man sagt, okay, Support bis dorthin oder mein Window, wenn ihr mich nicht zahlt, dass ich euch das höher ziehe auf höhere JavaScript-Versionen, dann läuft der Support aus, kann ich nichts garantieren.",
            "start": 1658373,
            "end": 1687873,
            "confidence": 0.7195,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "So als Freelancer?",
            "start": 1687893,
            "end": 1688693,
            "confidence": 0.6313333333333334,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Als Freelancer, es ist ja so viel Software draußen, die so eher im kleinen Rahmen ist, was jetzt nicht irgendwie wo große Enterprise dahinter steckt. Ich hätte es noch nie gesehen irgendwo, keine Ahnung.",
            "start": 1688733,
            "end": 1698241,
            "confidence": 0.7574705882352941,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Was ist die klassische Gewährleistung in Deutschland? 3 Jahre?",
            "start": 1699021,
            "end": 1702542,
            "confidence": 0.7853333333333334,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Gewährleistung?",
            "start": 1702582,
            "end": 1703783,
            "confidence": 0.88,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ich rede jetzt nicht von Garantie. Ich glaube 3 Jahre.",
            "start": 1703823,
            "end": 1707424,
            "confidence": 0.6426000000000001,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Gewährleistung ist sowieso nur ein halbes Jahr. Gewährleistung ist 2 Jahre. Aber das hilft ja auch wenig, weil es geht ja darum, dass du irgendwie denen dann weiterhelfen willst. Es geht ja um Weiterentwicklung. Eine Gewährleistung heißt ja, du machst irgendwas, du garantierst, dass das funktioniert eine gewisse Zeit.",
            "start": 1707444,
            "end": 1726612,
            "confidence": 0.7903265306122449,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, richtig. Und ich frage das mit dem Hintergrund, gegebenenfalls, weil du fragst mich ja gerade, macht es Sinn oder würde ich empfehlen, dass ein Freelancer in irgendeiner Art und Weise sagt, okay, pass mal auf, ich schreibe jetzt Software und EOL, also End of Life für diese Art von Software, für diese Version ist in einem Jahr. Ab und zu würde ich sagen, das kann sogar Selbstschutz sein, dass der Kunde nicht einfach in drei Jahren ankommt und ich kann keinen Dienstlohn mehr machen. Wie zum Beispiel jetzt bei diesem Quiz, was ich gerade erzählt habe. Weißt du, warum nicht? Also ob ich es empfehlen würde oder nicht. Ich glaube, es kommt immer ganz an die Software drauf an. Und ich glaube, da gibt es auch verschiedene, also rechtlich gesehen, verschiedene Vertragsarten.",
            "start": 1726972,
            "end": 1762642,
            "confidence": 0.6872105263157893,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Naja, grundsätzlich garantierst du mit Software gar nichts. Wenn sich irgendwie was darunter liegend ändert. Du hast ja keine Verpflichtung zu garantieren, dass was in der Zukunft funktioniert mit Software.",
            "start": 1762682,
            "end": 1772304,
            "confidence": 0.7209666666666668,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Okay, da können wir uns erst streiten und wir werden, glaube ich, nie richtig zu der Antwort kommen, weil ich bin kein Anwalt und du nicht. Und vielleicht hört uns jemand zu und kann uns mal was dazu sagen. Das wäre, glaube ich, ganz toll. Oder schaut uns sogar zu. Auf jeden Fall, was ich, glaube ich, machen würde, ich würde die Frage umdrehen. Ich würde versuchen, dem Kunden eine LTS-Version zu verkaufen. Oder am besten eine E-LTS. LTS steht für Long-Term Support, bieten auch ziemlich viele Software-Produkte an. Beispiel das Contact-Management-System Typo 3, released im ganz normalen Release-Zyklus. Und ich glaube, die Versionen sind ein halbes Jahr oder ein Jahr normalerweise supported. Und die LTS-Version, die kommt dann irgendwie so alle zwei oder drei Jahre raus, die ist dann für drei Jahre supported. Und dann kannst du bei der Typo 3 GmbH auch noch die E-LTS kaufen. Und die E-LTS hat dann nochmal zwei Jahre auf die LTS-Version drauf.",
            "start": 1772344,
            "end": 1819018,
            "confidence": 0.7393437499999995,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Aber was garantiert die, die LTS oder E-LTS?",
            "start": 1819079,
            "end": 1822282,
            "confidence": 0.817875,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Security-Fixes und Bug-Fixes teilweise sogar. Das bedeutet, du kriegst zwei Jahre weitere Security-Fixes.",
            "start": 1823123,
            "end": 1830445,
            "confidence": 0.7564615384615385,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Aber nur Security-Fixes?",
            "start": 1830465,
            "end": 1832186,
            "confidence": 0.753,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, also es kommt dann auf den E-LTS-Vertrag drauf an und den du ja auch dann selbst schließen kannst und den kannst du dann auch selbst formulieren. Aber so würde dann dein Kunde eigentlich eine neue Subscription kaufen und dich dann auch aktiv für diese Arbeit bezahlen, dass du das dann länger maintainst. Und lustiger Fun-Fact. Es gibt sehr, sehr viele Firmen und auch unter anderem sehr viele deutsche Geldautomaten, die immer noch Windows XP und Windows 2000 betreiben. Quizfrage. Ist Windows XP und Windows 2000 noch aktiv supported von Microsoft?",
            "start": 1832226,
            "end": 1860966,
            "confidence": 0.7670000000000001,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Gute Frage, ja.",
            "start": 1861006,
            "end": 1861627,
            "confidence": 0.5803333333333334,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Was meinst du eigentlich, wie sich die gerade so die Hände reiben und mit sowas die Taschen voll machen? Weil du glaubst doch wohl nicht, dass sie das for free tun, oder?",
            "start": 1862558,
            "end": 1871041,
            "confidence": 0.68428125,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, du musst halt auch noch Menschen finden, die Spaß haben an diesem alten Zeug zu arbeiten. Weil es ist ja das nächste, was glaube ich ganz viele vergessen. Gerade jetzt, wo es immer wichtiger wird, Leute zu halten und die Retention zu erhöhen, dass die Leute nicht weglaufen. Wenn du alte Software hast und diese Blackboxen in den Ecken oder auch nur User von der Software sogar, also es kann ja sein, dass das dann andere Abteilungen auch betrifft, wo die User dir dann irgendwann weglaufen, weil sie sagen, das User-Interface ist eine Katastrophe, die Software ist 20 Jahre alt. Ich bin doch nicht, keine Ahnung, in die HR-Abteilung gegangen, damit ich mit irgendeiner Software arbeite, die 20 Jahre alt ist.",
            "start": 1871081,
            "end": 1909357,
            "confidence": 0.8076967213114755,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, aber pass auf. Der Punkt ist ganz einfach. Legacy verdient das Geld. Ja? Und Microsoft macht sich die Taschen voll, weil die immer noch etliche Tausende und Millionen von Euro jedes Jahr von Großkonzernen kriegen, damit die einfach deren Windows 2000 und Windows XP weiter betreiben. Und die Gründe sind, weil die eine Blackbox im Keller stehen haben, die jetzt nur noch irgendwie eine Zertifizierung im Bankwesen für Windows XP oder ähnliches.",
            "start": 1909997,
            "end": 1933243,
            "confidence": 0.741301369863014,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Aber das ist ja eine gute Frage. So Geldautomaten oder sowas. Warum mache ich da keinen Update? Also was habe ich denn für einen Vorteil, dass ich dieses alte Ding habe? Habe ich da irgendwelche Schnittstellen von dieser Hardware, die dann auf 16-Bit laufen und nur mehr auf diesem Windows XP? Oder sind das DLLs, wo die Firmen pleite gegangen sind und keiner weiß, wie die DLLs funktionieren?",
            "start": 1933283,
            "end": 1953329,
            "confidence": 0.7472058823529412,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Bei Geldautomaten kann ich jetzt gerade nicht sagen, was der Grund ist, aber es würde mich mal auch interessieren, also wer jetzt irgendwie bei der Bank IT arbeitet, ja bei der Sparkasse, Volksbank oder Commerzbank, Deutsche Bank und wirklich an diesem System arbeitet, schreibt uns mal eine E-Mail, stetisch at engineeringkiosk.dev, ich würde mich wirklich freuen.",
            "start": 1953889,
            "end": 1967796,
            "confidence": 0.7394821428571429,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, definitiv.",
            "start": 1967936,
            "end": 1968937,
            "confidence": 0.574,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Was ich aber sagen kann ist zum Beispiel im Datenbankenbereich, Da kriegen Datenbankfirmen, die sowas, also Database as a Service zum Beispiel, kriegen Anfragen. Könnt ihr mal bitte unsere Version, die wir gerade betreiben, noch ein halbes Jahr lang weiter betreiben? Wir schaffen es nicht abzugraden.",
            "start": 1968957,
            "end": 1984570,
            "confidence": 0.783913043478261,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ein halbes Jahr verstehe ich ja, aber.",
            "start": 1985322,
            "end": 1987363,
            "confidence": 0.7001428571428571,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Wir sprechen da eher von Windows 2000.",
            "start": 1987403,
            "end": 1991994,
            "confidence": 0.7065714285714286,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Aber da sind wir wieder bei diesem Rattenschwanz, der dranhängt. Weil wahrscheinlich so viele andere Komponenten in irgendeiner Form darauf zugreifen, dass du die auch alle ändern müsstest. Und die hängen ja dann auch wieder irgendwo dran. Und da hängen dann ganz viele Firmen dahinter, manche Firmen gibt es vielleicht gar nicht mehr, manche haben irgendwie das System geändert, manche Schnittstellen gibt es nicht mehr und so hast du dieses kaskadierende Problem dann bei einem Update. Und ich glaube, davor haben ja auch wirklich viele Angst und darum macht man dann lieber keinen Update.",
            "start": 1992004,
            "end": 2019953,
            "confidence": 0.8066489361702128,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, aber deswegen sage ich es auch, Software rostet. Und dieser Spruch wird wahrer, umso älter diese Software ist. Es wird ja nicht leichter. Umso mehr, also ein bisschen Flugrost kriegst du mal eben so abgeschwirbelt. Aber wenn sowas richtig, richtig hart verrostet ist, da hilft auch keine Cola mehr.",
            "start": 2020193,
            "end": 2037643,
            "confidence": 0.7293000000000001,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, aber die Frage ist immer, schweißt du irgendwas, noch einen kleinen Teil oder holst du dir ein neues Auto? Und da ist ja dann auch der Unterschied, wie lange wartest du, weil es gibt ja auch viele Argumentationen, dass man sagt, okay, man wartet so lange, bis es nur irgendwie geht, bis es gar nicht mehr geht und dann tausche ich einfach die komplette Blackbox inklusive dem Zeug, was dranhängt, aus. Dann habe ich wenigstens einmal nur diesen Aufwand zum Austauschen und nicht am Weg ständig.",
            "start": 2038243,
            "end": 2061699,
            "confidence": 0.7828160919540232,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, aber das ist eine lustige Geschichte. Wenn du das so machst, dann kriegst du sehr wahrscheinlich echt viel für dein Geld, weil du nutzt das ja echt lange. Das bedeutet, es hat sich 35 Mal rentiert. Aber du bringst dich auch in eine Situation, wenn das Item, was du da austauschen möchtest, wichtig für dich ist, dann bringst du dich automatisch selbst in eine Drucksituation. Und was ist, wenn just in diesem Moment dein Item, was du austauschen möchtest, im Suezkanal stecken bleibt? Jetzt sagst du, passiert ja eh nicht. Gut, haben wir jetzt mal kurz. Oder was ist, wenn auf einmal ein Virus in China ausbricht und du keine Chips mehr bekommst? Also du glaubst ja wohl nicht, dass die Autobauer gerade alle Teile auf Lager haben wie Noche und Löcher, oder? Also ich glaube, die warten jetzt gerade alle noch. Und das zieht sich ja schon alles zwei, drei Jahre. So, der Punkt ist ganz einfach. In der Zukunft passieren Sachen, die du einfach nicht vorhersehen kannst. Aber du weißt, du hast ein Risiko. Und meine Frage ist gerade einfach nur, du entscheidest dich gerade aktiv dazu, das Risiko nicht zu tacklen. Und wenn du das als Geschäftsführer tust, dann könnte man sogar sagen, du handelst echt fahrlässig.",
            "start": 2062021,
            "end": 2120469,
            "confidence": 0.7540947867298577,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, kommt aufs Risiko drauf an, ja. Aber du gehst ja ständig Risikos ein, also auch finanzielle, weil du überlegst, ok, verdient sich das, irgendwas auszutauschen, neu zu machen, alt zu lassen, wie auch immer.",
            "start": 2120649,
            "end": 2132779,
            "confidence": 0.6324857142857143,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, aber richtig, und deswegen gehe ich ja die ganze Kette durch und sage, ok, wie wichtig ist dieses Item denn da auszutauschen, weil machen wir uns nichts vor. Wenn das Item für die Buchung des Kickertisches im Büro zuständig ist, dann kann man den Kickertisch halt gerade mal für ein paar Monate nicht buchen, sondern muss da hingehen und gucken, ob der frei ist. Also dann ist es halt nicht so wichtig. Aber dann würde ich das auch nicht als Risiko nennen. Natürlich, als Geschäftsführer balanciert man immer Risiken, das ist der Job eines Geschäftsführers oder einer Geschäftsführerin, aber wenn da 10, 15, 20 Prozent Revenue dran hängen und jetzt kommt's, vielleicht ist diese Box da noch nichtmals direkt für das Revenue zuständig, sondern irgendwo down the line, ja? Subdependency von Subdependency von Subdependency. Ja, dann würde ich sagen, happy birthday, hast du gewonnen. Aber wir sind ja in der heutigen Industrie, arbeiten wir sehr viel mit datengetriebenen Entscheidungen. Bist ja auch ein riesen Fan von. Hatten wir glaube ich irgendwo mal eine Episode drüber gemacht, richtig?",
            "start": 2132799,
            "end": 2186156,
            "confidence": 0.69811797752809,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Hatten wir eine Episode, natürlich.",
            "start": 2186176,
            "end": 2187397,
            "confidence": 0.33540000000000003,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "So. Und wusstest du, dass es eine Metrik zum Softwarealterungsprozess gibt?",
            "start": 2187617,
            "end": 2193181,
            "confidence": 0.8001818181818181,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Und zwar?",
            "start": 2193661,
            "end": 2194482,
            "confidence": 0.6845,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Nennt sich Dependency Drift. Und zwar, wie weit driftet deine existierende Versionsnummer oder deine existierenden Dependencies vom Upstream-Stand ab. Und umso weiter, umso mehr driftet die away, wenn du so möchtest. Das ist eine Metrik für Software Aging.",
            "start": 2194522,
            "end": 2210456,
            "confidence": 0.7716842105263159,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Und die geht auf die Versionsnummern? Weil eigentlich müsste man theoretisch mit dem Alter arbeiten, weil es gibt natürlich... Also.",
            "start": 2210476,
            "end": 2217941,
            "confidence": 0.7545000000000001,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Anders, die Definition ist halt jetzt sehr einfach für dieses Format jetzt hier. Unten drunter, wie die jetzt definiert ist, müsste man jetzt noch mal gucken, so nach dem Motto, okay, ist es die Versionsnummer? Von welcher Software reden wir? Hat diese Software einen festen Release-Zyklus? Es gibt Software, die wird zweimal im Jahr immer dann released.",
            "start": 2217961,
            "end": 2237273,
            "confidence": 0.779631578947368,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Das hat sich ja jetzt auch eigentlich extrem geändert, dass du früher hattest du ja Releases, die irgendwie einmal im Jahr oder sogar noch seltener hast du irgendwie große Releases gehabt. Und wenn du die jetzt anschaust, auch so Dinge wie Datenbanken zum Beispiel, was wirklich wichtige Software ist, sogar die sind jetzt auf so einen kleinen Zyklus runtergekommen, dass das wirklich alle paar Monate kommen da irgendwelche Versionen raus, Security-Patches und und und.",
            "start": 2237593,
            "end": 2262235,
            "confidence": 0.7908243243243245,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja gut, aber dann sagst du, okay, jetzt in der Dependency Drift, ja, und wenn ich jetzt sage Dependency Drift, dann, also ich denke, der bessere Name wäre vielleicht ein Version Drift oder irgendwie sowas, da wir ja nicht über nur Dependencies reden, weil wenn du jetzt den Datenbank nimmst, zum Beispiel Postgre, dann nimmst du hier die ganze Datenbank, ja, du kümmerst dich ja nicht um den Dependency Drift von den Dependencies von Postgre, sondern um Also du hast ja hoffentlich keine PostgreSQL 7 mehr im Einsatz, wo jetzt gerade 15 aktuell ist oder gerade sogar 16 in den Startlöchern steht. Auf jeden Fall, vielleicht kommt dann auch nochmal das Datum da rein, also wann, wie alt ist die Version usw. Der Punkt ist jedoch, schau halt nach, dass du eine gesunde Balance in deinem Dependency oder Version Drift findest, in deinem Software Aging, dass du halt nicht in diese beiden Extreme abdriftest, weil immer nur Upgrade, Upgrade, Upgrade ist halt auch nicht geil. Klar, jetzt sagt man so, neueste Software fixt alle Security-Bugs, aber neueste Software kann auch neue Security-Bugs haben oder sogar Regressions.",
            "start": 2262816,
            "end": 2320825,
            "confidence": 0.7063333333333333,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Was ja wirklich interessant ist, ist eigentlich, dass im IT-Administrator-Umfeld ist es ja gang und gäbe, da hast du deine TLS.",
            "start": 2320865,
            "end": 2329169,
            "confidence": 0.7918571428571427,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Meine was?",
            "start": 2329209,
            "end": 2329970,
            "confidence": 0.91,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "TLS, Long Term LTS. LTS? LTS, nicht TLS. LTS-Versionen, du hast Enterprise-Versionen, du hast wirklich auf Hardware-Ebene irgendwie ein Support, du schließt Support-Verträge ab. Das ist ja alles sehr üblich in der Welt. Aber wenn du in die Software-Entwicklung gehst, existiert das Ganze nicht mehr. Also das, was es eigentlich in der klassischen IT-Welt, in dieser Administrator-Welt, wo alles früher nur noch Hardware war, eigentlich gibt und Standard ist, Wenn du in die Softwareentwicklung gehst, wird es immer weniger und umso mehr du in Richtung Web gehst, umso weniger wird es. Und im Web hast du fast überhaupt keinen Support mehr oder alles ist Web und fluide und schnell und es gibt gar nicht mehr so Überlegungen. Außer wenn du im absoluten Enterprise-Umfeld bist dann schon. Aber es gibt da irgendwie viel weniger Informationen. Du findest heutzutage ja nicht mal mehr irgendwelche System Requirements oder was für Browser unterstützt wird. Sogar das wird ja nicht mehr angegeben bei ganz vielen Software-Produkten.",
            "start": 2330010,
            "end": 2395359,
            "confidence": 0.7935962732919256,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Einer der Gründe ist relativ einfach zu erklären. Und zwar ist es die Art und Weise, wie du dieses Item, diese Enterprise-Software, diese Hardware, shippst und ausliefern kannst. Hardware muss die Hardware zum Kunden. Die muss ausgetauscht werden. Das bedeutet, da wird ein System vom Netz genommen und das muss da rein und da muss jemand Geld für zahlen und dann musst du auch die Abhängigkeit zum Kunden haben, weil der Kunde muss das auch wollen und einen Termin vereinbaren und so weiter. Enterprise Software, die on-premise gehostet wird, ist genau dasselbe. Web-Software wird zentral gehostet, wo du den Server selbst unter Kontrolle hast. Du hast es in der Hand, wann du was updatest.",
            "start": 2395379,
            "end": 2432403,
            "confidence": 0.7676315789473681,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Das bedeutet, Ja, das hast du ja bei Linux genauso, da gibt's auch LTS-Versionen. Also die Grundbasis hat dieses Vorgehen von LTS, von Support, und da ist auch sehr gut beschrieben, wie lange wird was supported, was spielt miteinander. zusammen, was funktioniert nicht, lauter Dinge, die ganz gut beschrieben sind. Aber umso weiter das im Stack nach oben geht, umso schlechter werden diese Beschreibungen. Und wenn du dann eben bis nach oben im Web angekommen bist, heutzutage ist es wirklich schwierig zu finden, was für Browser wird supported. Früher war das noch angegeben, dass nur Internet-Explorer supported wird. Das war immer der Klassiker im Business-Umfeld. Heutzutage nicht mal das mehr.",
            "start": 2432423,
            "end": 2472568,
            "confidence": 0.7971818181818188,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Aber würdest du sagen, der Spruch, never touch a running system, war ein Fehler? Weil auch ich habe ihn früher gesagt.",
            "start": 2472588,
            "end": 2478171,
            "confidence": 0.7239523809523809,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, es gibt viele Sprüche, die man sagt. Auch Legacy verdientes Geld ist ein netter Spruch, aber... Bitte? Ist der beste Spruch, sorry, Andi. Ist der beste Spruch, natürlich, Legacy, die verdient Geld. Aber es stimmt natürlich schon, never touch a running system, kann natürlich in gewissen Bereichen schon sinnvoll sein. Die Frage ist halt immer, wie lang greift man ein System nicht mehr an?",
            "start": 2480272,
            "end": 2501459,
            "confidence": 0.7894615384615384,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Naja, bei einem Bug, der bald auftreten wird, da ist es relativ einfach, die Frage zu beantworten, wie lang fasst man ein System nicht mehr an. Ich sage nur das Jahr 2038.",
            "start": 2501499,
            "end": 2512320,
            "confidence": 0.7584374999999999,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Das stimmt natürlich, ganz allgemein. Ich glaube, heutzutage ist das definitiv veraltet. Das kannst du vielleicht bei Hardware noch nachdenken, ob du in diese Richtung gehst, dass du never touch a running system. Aber sobald du im Software-Bereich bist, wo diese Zyklen so schnell geworden sind, wo du auch CI, CD hast, dass du ständig was bauen kannst, testen kannst. Test Coverage hast, wo du einfach Sachen durchtesten kannst, da ist es ja nur meine Ausrede, weil wenn du immer alles sofort updaten kannst und ändern kannst, ist es ja gut und das sollte sicher das Ziel sein. Und dann ist halt die Frage immer, wie komplex ist es und gehe gewisses Risiko ein, weil im Endeffekt ist es ja nur Schulden, die du machst und Schulden bauen sich halt auf und Schulden können Sinn machen. Wenn du ein Haus kaufst, macht es Sinn, Schulden aufzunehmen, aber du musst halt umgehen mit den Schulden. Du musst sie wieder abbauen. Du musst sie handeln können. Du kannst nicht zu viele Schulden machen. Und da ist dann halt der Spielraum, in dem man sich bewegen kann.",
            "start": 2512330,
            "end": 2574160,
            "confidence": 0.8030380434782611,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Naja, aber wie jetzt auch bei finanziellen Schulden, gibt es ja gute Schulden und es gibt ja schlechte Schulden.",
            "start": 2574200,
            "end": 2578961,
            "confidence": 0.7467894736842104,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, beziehungsweise wenn du keine Schulden machen musst, ist es das Beste, aber im Leben ist es halt schwierig.",
            "start": 2578981,
            "end": 2584764,
            "confidence": 0.7951052631578946,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Also bei der aktuellen Inflation hoffe ich doch mal, dass wir alle ein bisschen Schulden haben, weil das kommt dann nämlich deinem Schuldenkonto mehr oder weniger zugute.",
            "start": 2584804,
            "end": 2593547,
            "confidence": 0.8543333333333335,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Wenn du fixe Zinsen hast, aber das ist wieder ein anderes Thema.",
            "start": 2594847,
            "end": 2598490,
            "confidence": 0.46108333333333346,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Aber holen wir mal die Hörerinnen und Hörer und die Zuschauer ab, das Jahr 2038 Problem. Das habe ich jetzt gerade mal erwähnt. Und was passiert da? Und zwar für alle, die sich damit noch nicht auskennen, für jede Applikation, die ein Unix Timestamp speichert, und die Unix Timestamp sind die Anzahl der Sekunden vom 01.01.1970 bis jetzt, Und für jede Applikation, die diesen Wert, einen Unix-Timestamp, in einem vorzeitbehafteten 32-Bit-Integer speichert, was, ich würde mich aus dem Fenster lehnen, sehr viele Systeme betreffen wird, wird im Jahr 2038 der 32-Bit-Integer-Bereich gesprengt. Weil wir dann bei einer Billion Sekunden, glaube ich, sind. Irgendwie sowas. Und somit hast du dann Integer-Overflow und die ganze Sache fängt wieder bei Null an, was dann für viele Systeme schlecht sein kann.",
            "start": 2598530,
            "end": 2645995,
            "confidence": 0.7974094488188979,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Aber 38 ist noch lang hin.",
            "start": 2646035,
            "end": 2647756,
            "confidence": 0.7450000000000001,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ist es wirklich so? 15 Jahre?",
            "start": 2647796,
            "end": 2649876,
            "confidence": 0.7296666666666667,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, ist schon noch einiges an Zeit.",
            "start": 2649916,
            "end": 2653757,
            "confidence": 0.812,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Kannst du dich noch an Silvester 1999 erinnern?",
            "start": 2653777,
            "end": 2657598,
            "confidence": 0.667125,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Natürlich. Alle waren verrückt. Wir hatten bei der Feuerwehr Bereitschaft, weil alle Angst hatten, dass die Welt untergeht. Wir haben wirklich wegen diesem dummen Y2K-Bug Bereitschaft gehabt.",
            "start": 2657618,
            "end": 2668341,
            "confidence": 0.8515185185185183,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Kannst du uns nochmal erklären, was da passiert ist?",
            "start": 2668361,
            "end": 2669681,
            "confidence": 0.3552222222222223,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Du meinst, weil alle mittlerweile zu jung sind, dass sich niemand mehr ans Jahr 2000 erinnern kann? Ja, das war die alte Variante, wo man Jahreszahlen nur in zwei Ziffern dargestellt hat oder zwei Stellen dargestellt hat. Also 1998 war dann 98 und irgendwann ist es dann halt wieder 00 geworden bei 2000 und dann haben halt alle Angst gehabt vor diesem Y2K-Bug, dass irgendwas passiert. Aber es war so stark in den Medien, dass es wahrscheinlich alle irgendwie gecheckt haben und getestet und wahrscheinlich weil die Unix Timestamp auch viel verwendet wird und bei der war das natürlich kein Problem damals, wenn du das abspeicherst.",
            "start": 2669701,
            "end": 2706492,
            "confidence": 0.7720943396226415,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ich kann mich noch an Aufkleber erinnern, bitte über Silvester die Computer ausschalten und solche Geschichten.",
            "start": 2707453,
            "end": 2712856,
            "confidence": 0.7525000000000002,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, ich glaube die Banken haben damals.",
            "start": 2714417,
            "end": 2715998,
            "confidence": 0.8245714285714286,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Zumindestens... Also es wurden Systeme runtergefahren?",
            "start": 2716018,
            "end": 2718540,
            "confidence": 0.4171666666666667,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Eben, die hatten irgendwie so einen Buffer, die haben alles runtergefahren und dann waren ein paar Stunden offline oder irgend sowas, ja. Da hat es durchaus sowas gegeben. Aber 38 wird natürlich spannend, weil Unix Timestamp ist schon sehr wichtig und ist wirklich überall drin und die kann man auch nicht so einfach ändern, weil bei dem Y2K-Bug war das ja eher die Custom-Software, die man selber geschrieben hat oder Applikationssoftware. die halt das irgendwo unter zwei Stellen speichert in der Datenbank. Aber da bricht das ganze System ja nicht zusammen. Aber mit der Unix-Timestamp, die ist überall. Und das ist natürlich schon dann ein Problem.",
            "start": 2718600,
            "end": 2751002,
            "confidence": 0.7262169811320754,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "So, und jetzt muss man natürlich gucken, das betrifft ja jetzt nicht nur Systeme, die die aktuelle Datei, aktuelle Zeit speichern. Das betrifft ja auch Systeme, die zwei Zeitpunkte miteinander vergleichen. Ja? Und da kommt es jetzt natürlich an gute Programmierung an. Wie zum Beispiel, wenn du zwei Sachen miteinander vergleichen möchtest, wie zum Beispiel, weiß ich nicht, Runtime oder sowas, wie schnell wurde etwas oder ähnliches. Oder du willst alle fünf Sekunden ein Event ausführen. Irgendwie sowas, was halt statisch ist, was jetzt eigentlich gar nicht an deine aktuelle Zeit gebunden ist, sondern weil du nur was nach einer gewissen Zeitdistanz machen möchtest. Sehr, sehr, sehr viele Programmierer nutzen dafür Time, also nutzen dafür den Unix-Timestamp. Was aktuell klappt, was aber in zwei Situationen immer auf die Nase fällt. Im Jahr 2038 auf jeden Fall, weil du dann auf einmal den einen Punkt wieder auf Null resettest. Und bei einer Leap Second. Das sind diese klassischen Leap Second-Bug, wo auf einmal die Zeit nicht nach vorne geht, sondern einfach mal rückwärts läuft um eine Sekunde. Für solche Events, also einfach alle 5 Sekunden irgendwie das Ausführen oder ähnliches, nutzt man eigentlich die Monotic Clock. Wenn du sowas nutzt, dann bist du zeitunabhängig, weil die Monotic Clock ist die CPU Clock. Das bedeutet, es wird auf der CPU gezählt, Sekunde 1, Sekunde 2 und so weiter und du bist nicht abhängig von der Unix Epoch Time. Ich lehne mich aus dem Fenster, sehr viele Applikationen vergleichen sowas. Nutzen die Unix Timestamp von 2038, vergleichen die gegen 0 oder was weiß ich, teilen durch 0 und das sind alles Bugs. Versucht die mal herauszufinden. Versucht die mal zu debuggen. Versucht die mal zu reproduzieren.",
            "start": 2751022,
            "end": 2847070,
            "confidence": 0.7757915194346297,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Aber ich lehne mich mal weiter aus dem Fenster und glaube, dass 38 nicht mehr viel Software unterwegs sein wird, die es jetzt gibt aktuell.",
            "start": 2847130,
            "end": 2854555,
            "confidence": 0.69672,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Nichts hält so lange wie ein gutes Provisorium.",
            "start": 2854595,
            "end": 2856417,
            "confidence": 0.865375,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Das stimmt, aber mit dem Speed, wo wir jetzt weitergehen in die Zukunft, wird es schwierig werden, meiner Meinung nach. Hoffe ich zumindest.",
            "start": 2857170,
            "end": 2863414,
            "confidence": 0.790086956521739,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ich habe in der Vorbereitung für diese Episode mal nachgeschaut, wie lange man eigentlich eine Software betreiben kann, beziehungsweise supporten kann. Was meinst du, war der Gewinner?",
            "start": 2863434,
            "end": 2877001,
            "confidence": 0.8577407407407409,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Wenn du Windows 2000 sagst, dann sind es ja jetzt schon 20 Jahre.",
            "start": 2877142,
            "end": 2881164,
            "confidence": 0.6198461538461539,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ich habe noch was heftigeres gefunden, was mich sehr beeindruckt und zwar ist es unsere Lieblingsdatenbank SQLite. SQLite hat im Jahr 2016 versprochen, dass sie die aktuelle SQLite Version bis 2050 supporten. Inklusive der Stabilität und Rückwärtskompatibilität der C-API und des On-Disk-Formats. Das bedeutet, Daten, die jetzt von SQLite auf Disk geschrieben werden, können mit der Version, die 2049 rauskommt, noch gelesen werden.",
            "start": 2881558,
            "end": 2915383,
            "confidence": 0.8484761904761906,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Da hat er sich viel vorgenommen. Es ist eigentlich nur ein Hauptentwickler. Natürlich ist es eine Community mittlerweile, aber eine Person dahinter.",
            "start": 2916148,
            "end": 2926397,
            "confidence": 0.7759090909090909,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Den Link posten wir auch in die Shownotes. Lest euch das mal durch. Die haben so ein kleines Manifesto geschrieben. Die haben sich da auch wirklich Gedanken drüber gemacht. So nach dem Motto, okay. Jetzt haben wir 2023, das bedeutet 27 Jahre wird die ganze Sache auf jeden Fall noch supportet. Und die haben sich dann Gedanken gemacht, was heißt das denn eigentlich, wenn ich eine Software 27 Jahre noch supporte? Ich meine, das, worüber wir gerade sprechen, haben sie 2016, also das war dann irgendwie... 34 Jahre. Und das ist recht interessant und da muss ich einfach nur sagen Hut ab. Also ich meine, dieser Mensch muss für.",
            "start": 2926417,
            "end": 2954553,
            "confidence": 0.6934495412844035,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Sein Leben... Ja, noch haben sie es nicht durchgezogen. Wir müssen jetzt mal abwarten bis 2049.",
            "start": 2954573,
            "end": 2958945,
            "confidence": 0.64575,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Also offen gesprochen, da steht auch ein Satz, wir wissen natürlich nicht, was in der Zukunft passiert und so weiter und so fort, aber da steht, wenn es uns möglich ist, diese Software noch so lange zu betreiben, dann sorgen wir dafür, dass halt mindestens die C-API und das Discrete-Format rückwärtskompatibel ist. Und wow. Ich glaube, da ist sich wirklich jemand bewusst, wo und wie diese SQLite-Datenbank überall eingesetzt wird. Und ich glaube, das ist uns gerade nicht bewusst.",
            "start": 2958955,
            "end": 2987803,
            "confidence": 0.8314177215189872,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Also, wie wir schon immer gesagt haben, SQLite super Datenbug. Sollte mal verwenden. Bei MySQL ist das garantiert nicht garantiert.",
            "start": 2988863,
            "end": 2996527,
            "confidence": 0.7590999999999999,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Um Gottes Willen, MySQL garantiert noch niemals ein Upgrade auf die letzte meiner Version.",
            "start": 2996587,
            "end": 3000229,
            "confidence": 0.6034285714285714,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Also von daher... Ja, das ist dein persönlicher Fight, den du da gerade führst mit MySQL.",
            "start": 3000269,
            "end": 3004431,
            "confidence": 0.5274375,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, das ist richtig. Ich renne in letzter Zeit immer in so meiner Bugs bei MySQL. Zusammengefasst sollte man bei der ganzen Versions-Upgrade-Geschichte einfach nicht in die zwei Extremen fallen. In die eine gar nicht mehr upgraden und zwar verrosten lassen und in die andere einfach nicht jeder neuen Version hinterherjuckeln oder hinterherhypen. Von daher, ich glaube, wenn man sich im gesunden Mittelfeld bewegt, dann kommt man gut voran. Man muss sich dafür natürlich auch Strategien und Zeitfenster zurechtlegen, um auch schwierige Komponenten wie Datenbank und Co. zu upgraden.",
            "start": 3004451,
            "end": 3033258,
            "confidence": 0.7384269662921348,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ich glaube, was man sich aber auch im Klaren sein muss, dass diese Update-Zyklen, die in der Vergangenheit waren, einfach immer kleiner werden. Egal in welcher Branche, in welcher Software. Definitiv, wenn man sich die letzten Jahrzehnte anschaut, der Trend ist einfach in die Richtung immer schnellere Updates, weil auch das passieren muss einfach mit Security und gar nicht nur Features, aber alles, was da irgendwie dranhängt. Es wird einfach alles schnelllebiger und schneller. Und ich glaube, man kann, egal welchen Speed man gefahren ist vor x Jahren, er wird jetzt schneller sein. Also da bin ich hundertprozentig überzeugt.",
            "start": 3033278,
            "end": 3066526,
            "confidence": 0.7671010101010096,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ich glaube, ich hatte das schon mal erwähnt im Podcast, glaube ich auch. In meinem Studium habe ich den Produktlebenszyklus vom Volkswagen Golf durchgenommen. Und schaut euch mal einfach an, wann der Golf 1 released wurde, der Golf 2 und jetzt der Golf 6 und wo sind wir jetzt, Golf 8 oder 9 oder so, weiß ich gerade auch nicht mehr.",
            "start": 3066566,
            "end": 3081857,
            "confidence": 0.5737868852459019,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, du bist der Deutsche.",
            "start": 3081877,
            "end": 3082798,
            "confidence": 0.364,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, aber ich fahre noch ein altes Auto, deswegen. Auf jeden Fall.",
            "start": 3082858,
            "end": 3085439,
            "confidence": 0.6296666666666667,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Einfach ein Golf.",
            "start": 3085499,
            "end": 3086500,
            "confidence": 0.31966666666666665,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, aber ein Golf 6, ist richtig, aber das ist auch schon 13 Jahre alt. Wie dem auch sei, schaut euch mal die Jahre zwischen den Releases an. Und die werden immer kürzer. Und das unterstreicht genau das, was der Wolfgang gerade gesagt hat. Egal wo, alles wird immer schnelllebiger.",
            "start": 3086520,
            "end": 3099776,
            "confidence": 0.72098,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ja, und vor allem, weil wir jetzt gerade bei Autos noch sind. Früher hat man einmal ein Auto gekauft, das war's. Und jetzt fangst du an mal updaten und bevor du losfahren kannst, kannst du einen 20-Minuten-Update fahren und da gibt es Geschichten aus dem E-Auto-Sektor auch, wo du musst dann wirklich warten, bis das Ding fertig updatet hat und davor darfst du nicht weiterfahren oder es funktioniert dann gar nicht mehr und du kriegst das Auto nicht mehr auf. Also da gibt es schon Horror-Geschichten, aber auch da sieht man, es wird einfach alles komplexer und die Update-Zyklen gehen nach unten und ich glaube, mit dem muss man sich einfach befassen und wirklich daran arbeiten, dass man da schneller wird mit den Update-Zyklen. Weil wenn man den Zug verpasst, irgendwann wird man mal ein konkretes Problem haben und dann hat man wirklich ein großes Problem womöglich.",
            "start": 3099816,
            "end": 3143566,
            "confidence": 0.7511564625850339,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ich weiß gar nicht, ob man da immer so schneller werden muss oder ob man sich einfach nur eine gute Strategie zur Hand legen sollte. Ich denke, die Nutzung von Long-Term-Support-Versionen, LTS-Support-Versionen, ist völlig valide. Und früher in meiner Agenturzeit haben wir das sehr, sehr oft gemacht. Das bedeutet, wir sind auf die nächste LTS-Version gegangen und hatten zwei Jahre Ruhe und sind danach auf die nächste LTS-Version gegangen. Klar, das Upgrade hat mehr Zeit gekostet als kontinuierlich upgraden. Das ist genauso wie, wenn du einmal im Jahr dein Auto saugst, wirst du da einfach länger fürs Auge brauchen, als wenn du es jede Woche fünf Minuten machst. Das ist einfach so.",
            "start": 3143846,
            "end": 3177721,
            "confidence": 0.7669375000000003,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Aber ich glaube halt auch, dass du in Zukunft einfach mehr Probleme haben wirst von, auch wenn es LTS ist, du bekommst so die Security-Updates, aber wenn du dann auf eine nächste Version aufsteigst, wirst du viel mehr Probleme haben, weil du einfach viel mehr Breaking Changes hast. Durch diese Schnelllebigkeit gibt es natürlich auch immer mehr Breaking Changes in den Versionen. Du kannst natürlich argumentieren, okay, mach es trotzdem dann nur einmal, das muss man abwägen, ist eh ganz klar. Aber auch da, glaube ich, wird es schwieriger. Und das, was man früher gemacht hat, die Update nur alle drei, vier, fünf Jahre, das wird, glaube ich, auch immer, immer schwieriger, weil das Zeug immer komplexer wird. Und da hilft mir auch ein Long-Term-Support nichts. Weil ich bekomme zwar die Security-Updates, aber das Umsteigen wird dann einfach schwieriger.",
            "start": 3177761,
            "end": 3219741,
            "confidence": 0.7535899280575541,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ja, das ist richtig, aber besonders durch so Varianten wie LTS-Versionen oder E-extended LTS-Versionen wird's mit hoher Wahrscheinlichkeit auch immer spezialisierte Dienstleister dafür geben, die dann das Upgrade mit dir machen. Und cool, klar, du zahlst die ganze Geschichte, ja, aber wird's immer möglich sein, da auch immer noch für eine alte Version noch Support zu kriegen und dann wird's halt richtig teuer, aber hey, das ist dann, ich sag mal, der Tradeoff, den du machst, ja. Wie dem auch sei, falls ihr immer nur am Zahn der Zeit bleiben wollt, schaut euch auf jeden Fall unseren besten Mitarbeiter an, den Dependabot oder eine andere Software, nämlich Renovatebot. Könnt ihr euch auch ins Git-Repository einklinken. Macht das ähnlich wie Dependabot und die Details sind ein bisschen anders, aber beide Software-Systeme helfen euch, eure Dependencies up-to-date zu halten. Und jagt nicht jedem Trend hinterher. Also nur weil jetzt eine neue Versionierung kommt, sagen wir, das Wolfgang Versionskontrollsystem heißt das nicht, dass ihr da von Git wechseln müsst. Soviel dazu. Ich hoffe, ich bin sehr vielen Leuten, die immer der nächsten Nuller-Version nachjagen, nicht auf den Schlips getreten und wenn doch, tut es mir leid. Und natürlich immer noch die Best-Practice, die wir auch erwähnt haben. Version-Pinning, meines Erachtens nach Best-Practice. Und lasst eure Software jede Nacht einmal bauen, damit ihr einfach externe Dependencies schnell identifiziert, wenn diese fehlen.",
            "start": 3220148,
            "end": 3295590,
            "confidence": 0.7411233480176209,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Ist genau wie beim Backup. Ein Backup ist nur dann ein sinnvolles Backup, wenn du den Restore immer regelmäßig machst. Das ist beim Bild dasselbe. Nur zu wissen, dass man den Source-Code hat und dass es vielleicht eigentlich bauen könnte, heißt noch lange nicht, dass es schlussendlich baut.",
            "start": 3296291,
            "end": 3310546,
            "confidence": 0.7849166666666666,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Und bis dahin ist es Schrödingers Backup, oder?",
            "start": 3310747,
            "end": 3312588,
            "confidence": 0.63775,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Genau, Schrödingers Backup ist sowieso immer gut. Schrödingers bauen, Schrödingers Backup. Falls ihr noch irgendwelche Infos habt, vor allem zu dem ganzen Bankomat Thema, bitte schickt uns das, falls ihr da irgendwie einen Einblick habt.",
            "start": 3312628,
            "end": 3324517,
            "confidence": 0.6444000000000003,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ich hab das schon wieder vergessen.",
            "start": 3324577,
            "end": 3326058,
            "confidence": 0.4793333333333334,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Und falls ihr Feedback habt, schickt uns das bitte auch. Wir haben auch jetzt unten in der Episode immer so einen Link, wo ihr einfach schnell sagen könnt, ist cool, war weniger cool, einfach um uns so ein bisschen schnelles Feedback zu geben. Und drückt gerne mal den Thumbs Down, den Daumen nach unten, auch wenn es euch nicht so super gefallen hat, hilft uns auch einfach, da besseres Feedback zu bekommen. Und sonst auf allen üblichen Kanälen, die unten in den Show Notes stehen. Und, nachdem wir jetzt ja auch ein Video haben, vielleicht da unten sind auch irgendwelche Thumbs Up Knöpfe. Es heißt ja immer, wenn es euch gefallen hat, Thumbs Up, wenn es euch nicht gefallen hat, zweimal Thumbs Down. Also sagen wir auch diesen Standardspruch scheinbar.",
            "start": 3326098,
            "end": 3362817,
            "confidence": 0.7766307692307691,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Ich würde jetzt mehr als einmal.",
            "start": 3362857,
            "end": 3363858,
            "confidence": 0.2953333333333333,
            "channel": null,
            "speaker": "A"
        },
        {
            "text": "Aber ist ja für uns auch jetzt ein neues Format. Lasst uns auch mal wissen, was ihr davon hält. Eventuell bringen wir auch eine kleine unterschiedliche Variante von Podcast und Video raus. Wir werden uns das mal genauer anschauen. Aber würde uns auf jeden Fall interessieren, ob euch dieses Format auch gut gefällt, ob ihr auf YouTube auch sowas hört oder ob ihr sowieso nur auf den Podcast Plattformen seid. Lasst uns das auch gerne wissen.",
            "start": 3366567,
            "end": 3389495,
            "confidence": 0.7710131578947368,
            "channel": null,
            "speaker": "B"
        },
        {
            "text": "Der Wolfgang hat genug gebrabbelt. Ich verarsche mir nämlich. Tschüss, bis zum nächsten Mal.",
            "start": 3389515,
            "end": 3392937,
            "confidence": 0.3875714285714285,
            "channel": null,
            "speaker": "A"
        }
    ],
    "confidence": 0.7456461358542071,
    "audio_duration": 3399.0,
    "webhook_status_code": null,
    "webhook_auth": false,
    "summary": null,
    "auto_highlights_result": null,
    "content_safety_labels": null,
    "chapters": null,
    "sentiment_analysis_results": null,
    "entities": null
}