{
  "language_code": "de",
  "audio_url": "https://audio1.redcircle.com/episodes/09191ebd-f313-4ef9-9c77-b2a32217ca2c/stream.mp3",
  "punctuate": true,
  "format_text": true,
  "dual_channel": false,
  "webhook_url": null,
  "webhook_auth_header_name": null,
  "webhook_auth_header_value": null,
  "audio_start_from": null,
  "audio_end_at": null,
  "word_boost": [],
  "boost_param": null,
  "filter_profanity": false,
  "redact_pii": false,
  "redact_pii_audio": false,
  "redact_pii_policies": null,
  "redact_pii_sub": null,
  "speaker_labels": true,
  "speakers_expected": 2,
  "content_safety": false,
  "content_safety_confidence": null,
  "iab_categories": false,
  "custom_spelling": null,
  "disfluencies": false,
  "sentiment_analysis": false,
  "auto_chapters": false,
  "entity_detection": false,
  "summarization": false,
  "summary_model": null,
  "summary_type": null,
  "auto_highlights": false,
  "language_detection": false,
  "speech_threshold": null,
  "id": "62si28he4i-c73e-4906-a048-6933b8d70fc4",
  "status": "completed",
  "error": null,
  "utterances": [
    {
      "text": "Dank Chet, GPT und Co. ist der Turing-Test in aller Munde. Aber was steckt eigentlich dahinter? Und damit willkommen zu einer neuen Episode des Engineering Kiosks. Einer ganz besonderen Episode. Denn sie ist der Start einer neuen Serie, in der wir Personen und ihre Erfindungen betrachten, die einen fundamentalen Einfluss auf die Informatik gehabt haben. In dieser Episode starten wir mit Alan Turing, dem Erfinder der Turing-Maschine und Namensgeber des Turing-Tests. Wir tauchen in die Berechenbarkeit ein, besprechen, ob Quantencomputer mehr leisten können, was das Hilbert-Kalkül ist, was Lambda-Funktionen damit zu tun haben und ob man Gott eigentlich logisch beweisen kann. Begleitet uns also auf eine Reise von den Anfängen der Computer bis zu den aktuellsten Themen im Spannungsfeld KI und Mensch. Und los geht's!",
      "start": 3290,
      "end": 48183,
      "confidence": 0.852648,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Wolfgang, ein Standardritual bei mir ist ein schlechtes Ritual. Ich nehme mein Handy abends mit ins Bett und scrolle immer zum Einschlafen durch Hackernews.",
      "start": 53442,
      "end": 62009,
      "confidence": 0.7394166666666666,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Immerhin schon besser als Instagram.",
      "start": 62049,
      "end": 63870,
      "confidence": 0.5434,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Richtig.",
      "start": 63910,
      "end": 64611,
      "confidence": 0.97,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Hast du dein Display dann wenigstens auf diesen Nachtmodus geschalten?",
      "start": 65171,
      "end": 68894,
      "confidence": 0.7349,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Neuerdings wieder. Letzte Woche genauso umgestellt, nachdem es mich dann wieder nachts geblendet hat.",
      "start": 68934,
      "end": 72697,
      "confidence": 0.7520714285714286,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Weil dich Kirill erinnert hat in unserem Gespräch über Flo, richtig?",
      "start": 73530,
      "end": 77633,
      "confidence": 0.7765454545454546,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Teilweise richtig, aber wenn wir Kirill jetzt auch wieder in der Leitung hätten, würde er sagen, nee, lass mal bitte das Handy irgendwie eine Stunde vorm Schlafen gehen irgendwie in der Küche und nimm das auf keinen Fall mit.",
      "start": 77653,
      "end": 87019,
      "confidence": 0.7022820512820512,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Wer jetzt nicht weiß, von was wir sprechen, springt einfach zwei Episoden zurück zu Episode 68, da haben wir Kirill.",
      "start": 87059,
      "end": 93043,
      "confidence": 0.7500999999999999,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Auf jeden Fall kriegt man da ja auf Hacker News, das ist ja irgendwie, weiß ich nicht, so ein Nährboden für Trivia-Wissen. Interessante Dinge, die kein Mensch braucht.",
      "start": 93083,
      "end": 100829,
      "confidence": 0.6453571428571429,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Da bist du Spezialist drin, ja das stimmt.",
      "start": 100849,
      "end": 102550,
      "confidence": 0.563125,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ich mag es, deswegen lese ich Hacker News. Und ich lese Hacker News, damit ich mehr so Trivia-Wissen kriege. Wie dem auch sei. Ich weiß aber auch, es schadet mir. Auf jeden Fall. Wusstest du, dass das printf-Statement in der Problemiersprache C inzwischen mehr oder weniger als Turing-Complete gehandelt wird?",
      "start": 103730,
      "end": 121379,
      "confidence": 0.7352999999999998,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Habe ich nicht gewusst, aber ich habe jetzt gleich parallel gegoogelt natürlich und der erste Treffer ist, dass es scheinbar nicht Turing-Complete ist, weil es irgendeine Schleife außen herum hat.",
      "start": 122158,
      "end": 130383,
      "confidence": 0.7663333333333333,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Das ist korrekt, aber ich finde es sehr sehr interessant und zwar ist die Main-Funktion wirklich eine While-Schleife und in dieser While-Schleife gibt es wirklich nur ein Printf-Befehl, was von einer unglaublich langen Kette an C-Makros zusammengehalten wird. Und zugegeben, da haben die auch noch ein scanf-Befehl, also um Eingaben von der Tastatur entgegenzunehmen. Und damit spielen die tic-tac-toe. Also ich wusste, ich hab gedacht, printf ist super, dass man dann irgendwie Dezimalzahlen immer mit zwei Nachkommastellen formatieren kann und sowas. Alles klasse. Aber dass man da wirklich so hart mit programmieren kann, muss ich zugeben, fand ich schon sportlich. Den C-Code für dieses mehr oder weniger Turing-Beispiel, Turing-Completeness-Beispiel für Printf verlinken wir natürlich auch in den Show Notes. Schaut euch's mal an. Ich hab versucht, hinterher zu steigen. Irgendwann hab ich aufgegeben. Und ich weiß ja nicht, ob... Ja, die Kritik. Hm. Ja, die ist valide. Das einzige printf-Statement oder das printf-Statement alleine ist gegebenenfalls nicht Turing-Complete, wegen der While-Schleife und wegen der Verwendung von einem scanf-Befehl. Aber hey, dass man so weit mit einem einzigen printf-Statement kommt, da muss ich schon sagen, Hut ab.",
      "start": 130424,
      "end": 199633,
      "confidence": 0.8096612903225803,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ein anderes klassisches Beispiel, was ja ganz oft erwähnt wird, ist CSS, dass CSS Turing Complete sei. Für die Vorbereitung für diese Episode habe ich jetzt aber herausgefunden, scheinbar ist es doch nicht Turing Complete. Also da scheiden sich die Geister. Aber jetzt mal eine Frage an dich. Hast du vor dieser Episode gewusst, was wirklich Turing Complete heißt?",
      "start": 200472,
      "end": 217803,
      "confidence": 0.8105762711864406,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ich hatte eigentlich gedacht, du wolltest mich jetzt fragen, kann ich ein Div centern? Horizontal und vertikal. Die Antwort wäre nein gewesen. Und wenn du mir eine Person nennst, die das aus dem Stehgreif kann, dann unterstelle ich dir, dass du lügst.",
      "start": 218363,
      "end": 232349,
      "confidence": 0.7570714285714286,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Du meinst, es ist komplizierter als Turing-Complete zu sein?",
      "start": 232369,
      "end": 234930,
      "confidence": 0.5515555555555556,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ich finde, die Definition von Turing-Complete sollte irgendwie so in diese Richtung der Zentralisierung eines Div-Elements auf einer HTML-Seite gehen.",
      "start": 234970,
      "end": 242853,
      "confidence": 0.79735,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Vielleicht kann dir ja irgendwer von unseren HörerInnen dann erklären, wie man Flexbox verwendet und sowas zentriert heutzutage.",
      "start": 243493,
      "end": 250060,
      "confidence": 0.7420000000000001,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Macht man heutzutage mit Flexbox.",
      "start": 250280,
      "end": 252182,
      "confidence": 0.49420000000000003,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Sag mal, du hast unsere Webseite gebaut.",
      "start": 252202,
      "end": 253704,
      "confidence": 0.5842857142857143,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ich glaube nicht, dass man einen Diff mit Flexbox centern, aber ich muss auch zugeben, ich habe keine Ahnung von CSS. Aber zurück zu deiner Frage. Wusste ich, was TuringComplete ist, bevor wir die Vorbereitung für diese Episode gestartet haben? Die richtige Antwort, also ich hätte es dir, glaube ich, nicht hinschreiben können, aber ich hätte dir sagen können, dass PowerPoint oder Excel oder Minecraft TuringComplete ist. Aber warum? Sehr wahrscheinlich, weil ich es auf HackerNews gelesen habe.",
      "start": 254758,
      "end": 277982,
      "confidence": 0.7441282051282047,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Also immer dieses gefährliche Halbwissen. Ich muss ja dazu sagen, es ist gar nicht so leicht, diese ganze Theorie und darum haben wir uns ja überlegt, dass wir eben diese Episode dem ganzen Thema Turing widmen und vielleicht sogar noch ein bisschen weiter, dass wir eine Serie daraus machen. Es gibt nämlich den berühmten Turing Award, den wahrscheinlich auch viele schon mal gehört haben und in dem Turing Award gibt es ausgezeichnete Personen, die irgendwas Großes geschaffen haben für die Informatikwelt. Und wir haben uns eigentlich überlegt, dass es super interessant wäre, sich diese Personen mal genauer anzusehen und auch die Technologien, die dahinter stecken und was die uns gebracht haben und wo die denn jetzt aktuell liegen.",
      "start": 278722,
      "end": 315898,
      "confidence": 0.8398813559322037,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Einspruch. Du hast dir das überlegt, weil es war nämlich wie immer. Es war mal wieder ein Tag vor Episodenaufnahme. Die Standardfrage ging durch den Slack. Welches Thema machen wir denn? Grübel, grübel, grübel. Niemand kam zu einer Antwort. Und du hast vorgeschlagen, hey, pass mal auf, da gibt es doch diesen Turing Award. Lass uns doch mal schauen, wer denn so alles gewonnen hat. Und vielleicht machen wir daraus eine Serie. Und dann hab ich mir gedacht, das hat ja letztes Mal schon so super geklappt. Wir haben auch gedacht, wir machen jetzt eine komplette Serie zu Containern und Dockern und diesem ganzen Cloud-Native-Ekosystem und allem drum und dran. Und sind bei Folge 2 von Docker erstmal ausgestiegen. Und jetzt bin ich gespannt, wie lange wir hier mit dieser Serie, wie soll man sagen, durchhalten, bevor wir überhaupt die erste Episode aufgenommen haben. Aber ich mag deine Ambition, Wolfgang.",
      "start": 315938,
      "end": 362185,
      "confidence": 0.7674733333333333,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, ab zwei ist es eine Serie, oder? So wie die Physiker zählen, eins, zwei, viele. Das ist eindeutig schon eine Serie. Sobald du mehr als eine Episode hast, hast du schon eine Serie.",
      "start": 362585,
      "end": 371512,
      "confidence": 0.725029411764706,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Hatte ich dir eigentlich mal erzählt, dass ich dem Begriff des Gruppenzwangs mal auf den Grund gegangen bin?",
      "start": 371532,
      "end": 377497,
      "confidence": 0.8153333333333332,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Nein, erhelle mich bitte.",
      "start": 377537,
      "end": 378658,
      "confidence": 0.7927500000000001,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ich habe mich damals gefragt, ab wann ist Gruppenzwang eigentlich Gruppenzwang? Das führt dann auf die Sprache zurück oder auf die Frage, ab wann ist eine Gruppe eine Gruppe?",
      "start": 378678,
      "end": 386545,
      "confidence": 0.8510689655172412,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, das ist die Frage, ob es eine mathematische Gruppe ist oder eine physikalische Gruppe.",
      "start": 387105,
      "end": 390267,
      "confidence": 0.5850666666666666,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Das ist genau richtig. Du bist schon sehr, sehr nah dran. Im mathematischen Sinne ist es eine Gruppe von zwei Leuten. Im sozialen, gesellschaftlichen Sinne ist es eine Gruppe von drei Elementen oder Leuten. Also, wenn jemand sagt, dass du alleine unterwegs bist, du musst jetzt auch eine kurze Hose tragen, wegen Gruppenzwang, kannst du sagen, tut mir leid, in der sozialen Sichtweise sind wir hier beide keine Gruppe. Es sei denn, du bist mit einem Mathematiker unterwegs, dann gibt es eine lustige Diskussion. Soviel dazu. Kommen wir zurück zu Turing Award. Wenn ich sage Turing Award, was ist das Erste, was dir einfällt?",
      "start": 390467,
      "end": 423033,
      "confidence": 0.715317307692308,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Nobelpreis der Informatik.",
      "start": 423073,
      "end": 424674,
      "confidence": 0.9056666666666667,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Boah, du hast das jetzt so richtig hochgestochen, weißt du, mit hohem Kinn erwähnt.",
      "start": 424714,
      "end": 428417,
      "confidence": 0.5537142857142856,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Natürlich. Das ist interessant. Egal, wo du liest oder hörst vom Turing Award, es wird immer dazu gesagt, der Nobelpreis der Informatik. Das ist schon fast automatisch mit dabei. Du kannst mal googlen bei irgendwelchen News. Es steht immer dabei, der Nobelpreis der Informatik. Damit die Leute, die keine Ahnung haben, wer Turing eigentlich ist, auch verstehen, um was es sich eigentlich dreht. Aber für mich als Informatiker, ich kenne mehr Turing Award Gewinner als Nobelpreisträger.",
      "start": 428457,
      "end": 452193,
      "confidence": 0.8291973684210525,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ich habe mir gerade die Frage gestellt, warum gibt es eigentlich gar keinen Nobelpreis für Mathematik und Informatik? Weil der Nobelpreis wird ja immer für Medizin und Chemie und so verteilt.",
      "start": 452513,
      "end": 462219,
      "confidence": 0.622258064516129,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Chemie, Chemie bitte, wichtig.",
      "start": 462259,
      "end": 464140,
      "confidence": 0.5415,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "China, China, jaja klar. Das ist mal eine interessante Frage. Weiß ich nicht, okay. Okay, Nobelpreis der Informatik. Nobelpreis, da sag ich immer, die Leute sind danach reich. Kriegt man da auch Geld beim Nobelpreis der Informatik?",
      "start": 464180,
      "end": 476212,
      "confidence": 0.6168648648648649,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, man kriegt mittlerweile eine Million, wobei das jetzt ... Wird man beim Nobelpreis wirklich reich? Ich glaub, da bekommt man auch relativ wenig, oder? Ich glaub, das Ansehen ist sowohl beim Nobelpreis als auch beim Turing Award eigentlich das Wichtigere.",
      "start": 476392,
      "end": 489754,
      "confidence": 0.7778048780487805,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Okay, also eigentlich wie in der klassischen Forschung, man kriegt da eh kein Geld.",
      "start": 489774,
      "end": 492935,
      "confidence": 0.5412857142857143,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Du kriegst eine Million mittlerweile, primär von Google gesponsert. Früher war es ein bisschen weniger. Aber wie gesagt, ums Geld geht es da eigentlich kaum.",
      "start": 493638,
      "end": 502622,
      "confidence": 0.74704,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ich würde mal fast sagen, die Leute, die den Preis gewonnen haben, die haben zeittechnisch und arbeitstechnisch ein bisschen mehr als eine Million investiert, oder?",
      "start": 502642,
      "end": 510585,
      "confidence": 0.7950400000000001,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, die sind meistens auch schon ziemlich alt, die den bekommen, muss man eigentlich auch ganz klar sagen. bekommst du ja meistens für dein Lebenswerk.",
      "start": 510625,
      "end": 517621,
      "confidence": 0.7616799999999999,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Gib mir doch mal ein paar Namen, beziehungsweise gib mir doch mal ein paar Sachen, die erschaffen wurden, wofür dann dir Düring Award verliehen wurde. Das, was so eigentlich jedem mal was sagt.",
      "start": 517640,
      "end": 527346,
      "confidence": 0.5798484848484848,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Also 1966 hat das Ganze begonnen und seitdem ist jedes Jahr eine Person ausgezeichnet worden. Gerade zu Beginn eigentlich hauptsächlich Männer, muss man sagen. Also es hat 40 Jahre gebraucht, bis die erste Frau ausgezeichnet wurde. Und da sind so Namen drunter, die wahrscheinlich jeder, der im Informatikbereich ein bisschen unterwegs ist, kennt von Donald Knuth zum Beispiel, der Tech erfunden hat, also das Grundsystem von LaTeX, was viele vielleicht kennen von der Uni-Zeit. Dijkstra, Dijkstra-Algorithmen im Grafenbereich kennt man wahrscheinlich. Tim Berners-Lee fürs World Wide Web.",
      "start": 527646,
      "end": 560207,
      "confidence": 0.8249540229885063,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Besonders Dijkstra. kenne ich immer nur zur Routenfindung und Routenalgorithmus und soviel ich weiß wird das auch sehr sehr viel in Netzwerkroutern und wirklich in Netzwerkswitches zur Shortest-Path-Analysis und sowas eingenutzt, oder?",
      "start": 560227,
      "end": 575700,
      "confidence": 0.7613750000000001,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, ja, also grundsätzlich haben diese Leute meistens ganz viele Algorithmen entwickelt. Und wie gesagt, es ist ein Lebenswerk, aber man kennt halt dann meistens eine Erfindung, die halt dann ganz groß geworden ist. Zum Beispiel die erste Frau, oder die zweite Frau, sorry, war die Barbara Liskov. Da kennt man zum Beispiel das Liskov'sche Substitionsprinzip aus der Objektorientierung, hat man vielleicht schon mal gehört. Aber die hat natürlich viel mehr gemacht.",
      "start": 576439,
      "end": 599844,
      "confidence": 0.8215277777777779,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ich stehe auf dem Schlauch.",
      "start": 600264,
      "end": 600924,
      "confidence": 0.11760000000000001,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, das ist, weil du nur Go programmierst, da gibt es keine Objektorientierung.",
      "start": 601287,
      "end": 604210,
      "confidence": 0.8176923076923077,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Erklär das mal bitte für Leute wie mich, die ja nicht studiert haben.",
      "start": 604270,
      "end": 607753,
      "confidence": 0.646076923076923,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, das ist im Prinzip, was du heute unter Polymorphie kennst bei der Objektorientierung, dass du einfach abgeleitete Klassen so behandeln kannst wie die Parent-Klasse, die übergeordnete Klasse.",
      "start": 607793,
      "end": 617503,
      "confidence": 0.827392857142857,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Also sarkastisch gesprochen, normales Java Enterprise.",
      "start": 617785,
      "end": 621247,
      "confidence": 0.44933333333333336,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Genau, genau. Oder dann gibt's zum Beispiel Helmen und Diffie. Diffie kennt man vielleicht aus der Kryptographie. Man kennt ja diese Nachnamen meistens nur von den Algorithmen, die es gibt. Und da kennt man halt dann meistens einen Algorithmus. Douglas Engelbart kennt man vielleicht Hypertext oder der Erfinder der Maus. Graham aus dem Compilerbau kennt man vielleicht. Dennis Ritchie, Betriebssysteme und C-Erfinder. Also er hat keine Betriebssysteme erfunden, aber er hat C erfunden und hat ganz viel in den Betriebssystembereichen, im Bereich der Betriebssysteme erfunden und keine Ahnung, kennst du vielleicht Carnegie und Ritchie? Das ist so die Standardkombination und das Horror-Autoren-Team, würde ich fast sagen, von diesem Buch, was kein Mensch versteht. Ich finde, das ist eines der unverständlichsten Bücher, die es gibt über C. Aber.",
      "start": 621307,
      "end": 663792,
      "confidence": 0.7511653543307086,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Weiß ich gar nicht, nur immer wenn ich Cunningham und Ritchie höre, dann frage ich mich, packst du die geschweifte Klammer in dieselbe und in die nächste Zeile? Ich glaub, da kennen die meisten Leute die beiden Namen her, weil dieser Coding-Style-Guide von Klammer in derselben Zeile wird ja auch sehr viel diskutiert. Und ich glaub, der heißt auch Cunningham und Ritchie-Style-Guide.",
      "start": 663812,
      "end": 682987,
      "confidence": 0.7279354838709678,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Aber man sieht schon, es gibt aus allen Bereichen Leute, die den gewonnen haben und die wirklich viel für die Informatik getan haben und darum rentiert sich das meiner Meinung nach auch da mal in die Tiefe zu gehen. Aber bevor wir das Ganze machen, müssen wir natürlich den Grundvater mal verstehen, Turing, was Turing eigentlich so gemacht hat und warum der Preis eigentlich nach ihm benannt ist und was der für die Informatik so geleistet hat. Und Turing kennen wahrscheinlich viele aus Filmen, weil mittlerweile hat Hollywood das auch erkannt. Das war ein schräger Vogel, dieser Turing. Und der war ja auch im Weltkrieg in irgendeiner Form beteiligt. Zumindest wird das jetzt immer in diesen Filmen komplett herausgestrichen, dass der halt die Enigma damals entschlüsselt hat, also die Chiffriermaschine von den Deutschen. Und da kann man natürlich extrem cool Hollywood-Filme draufsetzen. Und darum werden wir das ganze rund um den Krieg und die Verschlüsselung und Entschlüsselung einfach mal auf die Seite legen, da kann man irgendwelche Hollywoodfilme anschauen, wenn man das unbedingt wissen will. Wir konzentrieren uns nochmal auf die andere Seite, auf die Logikermathematik und Informatikaseite und weniger die Kryptoseite.",
      "start": 683333,
      "end": 745710,
      "confidence": 0.8502916666666666,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Du hast ihn gerade als Vater genannt, Alan Turing war der Grundvater und ich habe mal nachgeguckt, soviel ich weiß, hatte er keine Kinder.",
      "start": 745730,
      "end": 751595,
      "confidence": 0.4182083333333333,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, die ganzen Preisträger sind ja seine Kinder, oder?",
      "start": 752195,
      "end": 754537,
      "confidence": 0.7786666666666666,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ja, das ist so ne, so ne, so ne Frage. Also, ich mein, Alan Turing hat von 1912 bis 1954 gelebt und der Alan Turing Award oder der Turing Award wurde 1966 das erste Mal vergeben. Somit weiß er es ja eigentlich nicht.",
      "start": 754889,
      "end": 763325,
      "confidence": 0.4882790697674417,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, dumm gelaufen für ihn. Aber das ist ja meistens, wenn man post-Doom irgendwie so einen Preis bekommt oder so groß in die Höhe gelobt wird. Oft kommt man halt erst später drauf, wie intelligent alle waren. Also das Engineering-Kiosk wird man auch erst in 100 Jahren wahrscheinlich verstehen, was wir da geleistet haben, indem wir es miteinander ausgehalten haben.",
      "start": 767154,
      "end": 784044,
      "confidence": 0.7572500000000001,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ich hoffe, die Gesellschaft ist dann schon ein bisschen weiter, als über die Themen, mit denen wir hier sprechen. Aber naja. Auf jeden Fall wurde der sogenannte Herr leider nicht sehr alt, 41 Jahre. Wie der Wolfgang schon sagte, war er Briti, Mathematiker, Kryptoanalytiker und Informatiker, obwohl man natürlich 1912 bis 1950 noch nicht ganz so viel von Informatik sprechen konnte. Deswegen hatte man das, glaube ich, eher Logiker genannt damals noch. Leider wurde der Herr nicht sehr alt, weil er Selbstmord begangen hat. Und zwar auf Basis einer Depression. Alan Turing war selbst homosexuell und damals war das noch eine Straftat. Und er wurde 1952, also zwei Jahre vor seinem Tod, zu einer chemischen Kastration verurteilt. Und anhand der nachfolgenden Hormonbehandlung erlitt er dann eine Depression und hat sich dann zwei Jahre später leider selbst umgebracht.",
      "start": 784084,
      "end": 839550,
      "confidence": 0.7793795620437954,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Übrigens kleine Randnotiz, weil du gerade gesagt hast, damals war Homosexualität verboten, bis 1994 war das in Deutschland auch verboten.",
      "start": 840125,
      "end": 847188,
      "confidence": 0.77325,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ich hoffe doch, dass die Gesellschaft sich weiterentwickelt und ja, gut.",
      "start": 847588,
      "end": 851910,
      "confidence": 0.6814545454545454,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Aber tauchen wir mal ein in die Mathematik. Was wahrscheinlich ganz viele kennen ist ja die Turing-Maschine, hat man schon mal gehört. Den Turing-Test hat man wahrscheinlich auch mal gehört. Und warum diese zwei Dinge so fundamental sind, probieren wir jetzt mal zu analysieren.",
      "start": 851950,
      "end": 866075,
      "confidence": 0.8711590909090908,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ich kann mich erinnern, dass ich im Studium irgendwas zur Turing-Maschine hatte. Theoretische Informatik 1 oder irgendwie sowas hieß das. Ich gebe zu, ich glaube, es hat mich in dem Beruf der Webentwicklung und Co. bisher noch nicht weitergebracht. Jetzt möchte ich von dir.",
      "start": 866212,
      "end": 879578,
      "confidence": 0.7613863636363636,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Hast du das damals überhaupt verstanden?",
      "start": 879618,
      "end": 881159,
      "confidence": 0.6763333333333333,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ey, das wäre die nächste Frage. Ich glaube, damals lag mein Fokus nicht auf das Verstehen der Turing-Maschine, sondern eher auf das Bestehen der Klausur. Kriegst du es hin, mir die Turing-Maschine jetzt so zu erklären, dass ich sie nie wieder vergesse? Dieses Trivia-Wissen, von dem wir am Anfang gesprochen haben, das bleibt mir ja immer im Kopf. Zum Beispiel, was eine Gruppe im mathematischen und sozialen Sinne ist und so weiter. Kriegst du es hin, mir die Turing-Maschine so zu erklären, dass wenn du mich in vier Jahren fragst, wenn ich betrunken bin, dass ich dir immer noch die Turing-Maschine erklären kann. Wenn du das schaffst, Wolfgang, dann würde ich sagen, bist du deiner Lehrverpflichtung als Akademiker nachgekommen.",
      "start": 881339,
      "end": 924179,
      "confidence": 0.7912941176470587,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Kleines Funfact am Rande, ich wollte ja eigentlich den Master in Logik machen, in theoretischer Informatik. Und ich habe das ein paar Semester verfolgt und dann sind die Vorlesungen aber so hart geworden. Und bei der Vorlesung Computability, die war für mich damals so schockierend, dass ich es dann gelassen habe und dann zu Datenbanken geswitcht bin. Also du hast da jetzt vielleicht nicht den perfekten Menschen vor dir, der dir die theoretische Informatik näher bringen kann, aber ich werde mein Bestes versuchen, Andi.",
      "start": 924219,
      "end": 951204,
      "confidence": 0.7838333333333332,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Dann gib dem Ganzen doch mal eine Chance. Kleiner Tipp, mich kriegst du ja immer mit Praxis.",
      "start": 951224,
      "end": 955628,
      "confidence": 0.38805882352941173,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Also dass es sehr fundamental ist, haben wir ja schon besprochen, weil wenn man sagt, okay CSS ist so toll, Turing Complete, Turing vollständig, dann muss das ja irgendwas Fundamentales sein. Und Turing Complete oder vollständig wird alles bezeichnet, das so mächtig ist in der Programmierung, wie eine Turing Maschine. Also die Turing Maschine liegt dem Ganzen zugrunde. Das ist dieses theoretische Modell. Alles was du heute machen kannst, alles was du in deiner Go-Programmiersprache machen kannst, kannst du auch mit einer Turing-Maschine machen. Also es gibt nichts mächtigeres als eine Turing-Maschine.",
      "start": 956008,
      "end": 990937,
      "confidence": 0.8266195652173919,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Okay, heftiges Statement. Meine nächste Frage ist, wie launche ich denn Go-Routinen auf einer Turing-Maschine? Aber machen wir weiter, vielleicht komme ich ja dazu noch.",
      "start": 990977,
      "end": 997862,
      "confidence": 0.61016,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, das Schöne an einem theoretischen Modell ist ja, dass es theoretisch ist. Das heißt, du brauchst gar nichts praktisch machen. Das heißt, du kannst dir das alles nur im Kopf zusammendenken. Und eigentlich, wenn wir dabei sind, im Kopf zusammendenken, daher kommt das Ganze. Also Hilbert, das war ein Mathematiker damals, der hatte sich überlegt, wenn wir im Kopf uns was zusammendenken, dann müsste man das doch auch mathematisch darstellen können, mathematisch formalisieren. Also Hilbert war eigentlich der, der die Mathematik richtig formalisiert hat, der weg von der Sprache ist, wo man sehr viel Interpretation hat, hin zu Symbole und wirklich die Mathematik formalisiert hat und probiert hat, das was wir so im Alltag machen, denken, überzuleiten in Formalismus. Und er hat das sogenannte Hilbert-System oder Hilbert-Kalkül erfunden, das eigentlich beschreibt, wie so ein mathematisches System funktioniert. Und er hat da eben so drei Eigenschaften definiert. Der hat gesagt, okay, so ein mathematisches System, das muss complete sein, konsistent und entscheidbar. Das heißt, complete, alle Statements, die in so einem mathematischen System leben, können geprüft werden, bewiesen werden, dass da alles passt. Konsistenz heißt, dass es keine Widersprüche gibt. Das heißt, ich kann keine widersprüchliche Aussage in so einem System finden, die vielleicht einmal wahr und einmal falsch ist. Es muss alles genau definiert sein und eben widerspruchslos. Und die Entscheidbarkeit, dass ich in so einem mathematischen System immer entscheiden kann, ob etwas richtig oder falsch ist. Also wenn ich da irgendeine Formel habe, dann kann ich entscheiden, ist es richtig oder falsch und das kann ich entscheiden mit einer effektiven Prozedur oder Ablauf, wie er das genannt hat. Das war so seine Definition von dem Ganzen. Und er hat aber nicht so richtig gewusst, was so eine Effective Procedure ist. Er hat es nur mal so definiert. Und jetzt kommt eigentlich der Turing ins Spiel. Weil der Turing hat den Algorithmus erfunden. Davor hat es dieses Wort Algorithmus eigentlich nicht gegeben. Turing war der erste, der sich überlegt hat, so eine effektive Procedure, so eine Prozedur, die im Kopf abläuft bei den Menschen, so ein Algorithmus, heute ist es ganz klar, das was du im Kopf machst, ist auch irgendwie ein Algorithmus, der ablauft. Früher war das was komplett Neues und Turing hat den Algorithmus definiert und wie so ein Algorithmus überhaupt hingeschrieben werden kann, definiert werden kann, der gebraucht wird, um im Hilbert-System dann eben diese Entscheidbarkeit überhaupt anzuwenden, dass man Algorithmus hat. ist etwas falsch, ja, nein, entscheidbar. Und das, was du heute in deinem Go-Programm machst, so ein Algorithmus, das geht alles zurück auf Turing. Das heißt, Turing ist der Erfinder des Algorithmus. Das heißt, ohne Turing könntest du dein ganzes Webzeug gar nicht machen.",
      "start": 998362,
      "end": 1161404,
      "confidence": 0.80538,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Verstehe ich das denn jetzt richtig, dass die Turing-Maschine gar keine Maschine ist, gar kein reelles Ding, was in der realen Welt existiert, sondern eigentlich nur eine Formalisierung meiner Gedanken? Oder wie man meine Gedanken beziehungsweise in einer mathematischen Formel irgendwie ausdrücken kann?",
      "start": 1161424,
      "end": 1173453,
      "confidence": 0.8024186046511629,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Also Turing-Maschine geht jetzt noch einen Schritt weiter. Jetzt sind wir nur mal bei dem Algorithmus. Und jetzt hat er sich überlegt, okay, wenn ich so einen Algorithmus habe, wie kann ich denn diesen Algorithmus ausführen? Und da hat er die Turing-Maschine entworfen. Dies ermöglicht jeden beliebigen Algorithmus auszuführen. Das heißt, alles was du jetzt in deinem Go-Programm prokribieren könntest, kannst du eben auch mit einer Turing-Maschine ausführen. Und eine Turing-Maschine ist ganz einfach aufgebaut. Du kannst dir das so vorstellen wie ein ganz langes Blatt Papier, so Streifen von einem Blatt Papier, wo ein Schreibkopf Symbole draufschreiben kann auf dieses Papier. Und der kann natürlich auch wieder lesen, wie so ein klassischer alter Festplattenkopf, der liest und schreibt, aber halt auf einem Blatt Papier. Und die Turing-Maschine hat, nachdem es ein theoretisches Modell ist, kann man da auch sowas definieren wie ein unendlich langes Blatt Papier, so ein Streifen.",
      "start": 1173873,
      "end": 1226087,
      "confidence": 0.7874600000000003,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Das ist ja jetzt Quatsch, merkst du selbst, ne?",
      "start": 1226127,
      "end": 1227508,
      "confidence": 0.24355555555555558,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, es hat bisher noch nie jemand das Gegenteil bewiesen.",
      "start": 1228159,
      "end": 1231682,
      "confidence": 0.8122999999999999,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Dass es ein unendlich langes Blatt gibt.",
      "start": 1231722,
      "end": 1233924,
      "confidence": 0.6131428571428572,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, du musst dir das natürlich vorstellen, aber du bist natürlich in der Realität limitiert, aber du bist ja beim Computer auch. Du hast ja einen limitierten Speicherplatz. Du könntest natürlich jetzt auch so ein komplexes Programm schreiben, das du nicht mehr ausrechnen könntest, weil dir dein Speicher vollläuft. Das heißt aber nicht, dass das Programm irgendwie ungültig wäre. oder nicht berechenbar ist.",
      "start": 1233964,
      "end": 1251259,
      "confidence": 0.7094444444444444,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Das bedeutet aber in der Realität, eine richtige Turing-Maschine kann man gar nicht bauen. Weil du sagtest ja gerade, man kann jeden Algorithmus ausführen, aber das ist ja dann in der Realität nicht möglich, weil man hat ja nur endliche Ressourcen. Unter dem Gedankenexperiment, dass wir unendliche Ressourcen hätten, so wie dein unendlich langes Blatt, ich rede jetzt von unendlich viel Terabyte RAM und Petabyte und keine Ahnung was, dann sprechen wir von einer Turing-Maschine, oder?",
      "start": 1251279,
      "end": 1272652,
      "confidence": 0.7976842105263159,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, nachdem du ja unendlich viele Meter von deinem Blatt Papier, von dem Streifen hinzufügen kannst und da ja eigentlich kein Ende ist, kannst du das als unendlich ansehen. Also klar ist es theoretisch, aber du kannst schon sehr weit gehen. Du kannst ja auch immer bessere Computer bauen, immer mehr Festplatten, immer mehr Speicher. Aber in dem theoretischen Modell ist es natürlich unendlich, damit du auch wirklich alles ausrechnen kannst. Und die dritte Komponente, also wir haben jetzt diesen Speicher, dieses Blatt Papier. Wir haben den Lesekopf und Schreibkopf. Und die dritte Komponente von so einer Turing-Maschine ist ein Automat. Kannst du dich noch an Automaten erinnern in deiner Studiumszeit?",
      "start": 1273600,
      "end": 1312198,
      "confidence": 0.7979189189189185,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Da klingelt was. Erfolgreich aufgesogen, wieder in die Klausur gepackt und wieder rausgeschmissen.",
      "start": 1312218,
      "end": 1318243,
      "confidence": 0.3599230769230769,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Also Automaten sind so definiert, dass man verschiedene Zustände hat. Man kann sich das in so Kreisen vorstellen, wird es nochmal dargestellt. Und zwischen den Kreisen kann man hin- und herspringen, zwischen den Zuständen. Je nachdem, was man zum Beispiel auf das Band schreibt oder liest, kann man zwischen Zustände hin- und herspringen. Und das ist eigentlich der Algorithmus an sich. Also in diesen Zuständen, in diesen Automaten ist dein Algorithmus gespeichert. Verstehst du mal die drei Komponenten bisher, was in deinem Kopf so vorgeht? Wenn du einen Algorithmus machst, wenn du was abarbeitest, dann hast du ja auch ein Blatt Papier, einen Stift und dein Algorithmus läuft im Kopf ab und das genau das gleiche machst du in der Tülgenmaschine auch.",
      "start": 1319014,
      "end": 1359124,
      "confidence": 0.8207540983606554,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ich bin froh, wenn ich einen Bubble Sorting kriege.",
      "start": 1359184,
      "end": 1360726,
      "confidence": 0.16855555555555557,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, weil der ist schon viel komplizierter. Wir können ja mal ein ganz einfaches Beispiel machen. Du willst checken, ob eine Zeichenkette ein Palindrom ist. Palindrom, sagt dir noch was?",
      "start": 1360766,
      "end": 1370893,
      "confidence": 0.6722999999999999,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ein Wort, was man von vorne und hinten gleichzeitig lesen kann. Also der Name Anna zum Beispiel wäre ein Palindrom.",
      "start": 1370933,
      "end": 1377377,
      "confidence": 0.8355,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Genau, und jetzt machen wir es ein bisschen einfacher. Wir verwenden nicht 26 Buchstaben, oder wie viele gibt es im Alphabet? 24, ich bin da immer verwirrt.",
      "start": 1377417,
      "end": 1385501,
      "confidence": 0.6531481481481483,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "26. Im deutschen Alphabet ohne Zahlen, ja.",
      "start": 1385511,
      "end": 1388003,
      "confidence": 0.6215714285714286,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Genau, also wir nehmen ein vereinfachtes Alphabet, wo es nur A und B gibt, damit man das ein bisschen einfacher machen kann.",
      "start": 1388527,
      "end": 1393469,
      "confidence": 0.7385000000000002,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Also die Band ABBA.",
      "start": 1393489,
      "end": 1394669,
      "confidence": 0.537,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Genau, ein sehr gutes Beispiel. Da kommt wieder das wichtige Wissen rein. Danke, Andi. Okay, jetzt hast du das auf dem Blatt Papier stehen und willst überprüfen, ob das ein Palindrom ist. Wie würdest du das jetzt im Kopf machen?",
      "start": 1394689,
      "end": 1406614,
      "confidence": 0.755125,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ich würde mir den ersten Buchstaben schnappen und den letzten und würde vergleichen, ob die gleich sind. Wenn das der Fall ist, dann würde ich mir den zweiten Buchstaben und den vorletzten nehmen und dann immer so weiter, bis ich die Anzahl der Buchstaben durch zwei und das ist die Anzahl der Schritte, die ich gehen muss, bis ich alle Buchstaben habe.",
      "start": 1407654,
      "end": 1427589,
      "confidence": 0.8561290322580645,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Und genau so machst du das auch in der Turing-Maschine. Die Turing-Maschine macht nichts anderes, also sie nimmt das Blatt Papier, wo jetzt Upper zum Beispiel oben steht, und fangt einfach ganz links an, liest diesen Buchstaben ein, weiß, okay, da steht ein A, wandert dann ganz auf die andere Seite nach rechts, bis keine Buchstaben mehr da sind, dann weiß die Turing-Maschine, ah, ich bin am Ende, und prüft, ob dieser Buchstabe ein A ist. Wenn ja, fährt die Maschine wieder ganz nach links auf diesem Band und prüft den zweiten Buchstaben. Und damit sie sich merken kann, wo sie gewesen ist, löscht sie den Buchstaben immer. Das heißt, sobald sie einen Buchstaben liest, wird der vom Band gelöscht, überschrieben, mit einem Leerraum zum Beispiel. Weil wenn du geprüft hast, okay, A ganz links, A ganz rechts, kannst du die A's einfach überschreiben, whitespace, weil die hast du ja schon geprüft. Dann fährst du wieder ganz nach links bis zum Buchstaben, das wäre jetzt ein B, löscht den wieder, fährst dann wieder nach rechts bis zum letzten Buchstaben, ist auch ein B. Wenn du dann am Ende bist, wenn es keine Buchstaben mehr gibt, weißt du, es ist ein Palindrom und sonst brichst du irgendwo ab. Also dieser Algorithmus ist programmiert in so einem Automaten über die Zustände und Verbindungen zwischen den Zuständen. Und das Wort steht auf dem Papierstreifen und wird einfach abgearbeitet. Also genau das, was du im Kopf machst, wird dann in der Turing-Maschine gemacht. Und genau so hat sich das damals Turing eigentlich auch hergeleitet. Genau das, was wir im Kopf so machen, hat er probiert in eine Maschine überzuführen. Und zwar in so eine Maschine, die dann eben alles berechnen kann, was wir uns so vorstellen können als Algorithmus.",
      "start": 1428269,
      "end": 1519645,
      "confidence": 0.7951627118644066,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Aber wenn du doch die vorhandenen Buchstaben wieder überschreibst, dann, also technisch gesprochen, ist das ja dann mehr oder weniger dein Garbage-Collector. Also du hast deine Informationen gespeichert, brauchst sie jetzt nicht mehr und der Garbage-Collector schmeißt sie weg. Warum braucht dann eine Turing-Maschine unendliche Ressourcen? Weil eigentlich... Ah, die unendliche Ressourcen wird benötigt, um jeden Algorithmus ausführen zu können, oder?",
      "start": 1520605,
      "end": 1540872,
      "confidence": 0.7148524590163935,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Genau, du kannst dir unter Umständen auch gewisse Sachen wieder zwischenspeichern auf deinem Band hin und her fahren, dann brauchst du noch mehr Speicher. Wenn du alles auf einem so einen Streifen abbildest, sehr komplexe Programme, brauchst du immer mehr Speicher, um Zwischenzustände zu speichern, um gewisse Dinge abzulegen auf dem Band und drum ist es in der Theorie zumindest unendlich. Und mit diesem einfachen System kannst du theoretisch oder nicht nur theoretisch, sondern auch praktisch kannst du heute jedes Programm, dein komplexes Go-Programm, kannst du so weit runterbrechen, dass du das auf einer Turing-Maschine mit den simplen drei Komponenten, mit einem Automaten, mit dem Papierstreifen und dem Lese-Schreibe-Kopf abbilden kannst.",
      "start": 1541812,
      "end": 1584546,
      "confidence": 0.8091711711711713,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Da bin ich schon glücklich, dass es hohe Programmiersprachen gibt.",
      "start": 1584566,
      "end": 1587208,
      "confidence": 0.4318999999999999,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, ich glaube, da sind wir alle froh. Ich meine, ich würde auch nicht gerne Assembler programmieren, obwohl das auch schon im Gegensatz zu einer Turing-Maschine sehr, sehr hoch ist.",
      "start": 1587715,
      "end": 1594436,
      "confidence": 0.6686333333333334,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Inwieweit können denn Quantencomputer jetzt dabei helfen?",
      "start": 1595016,
      "end": 1598637,
      "confidence": 0.6577142857142856,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, die Quantencomputer sind ein ziemliches Problem, weil bisher, und das ist ja jetzt eigentlich 100 Jahre alt, bisher galt das als das berechenbare Modell. Also alles, was berechenbar ist, lässt sich mit der Turing-Maschine berechnen und dieses Modell beschreibt, was wir heutzutage berechnen können. Und jetzt sind diese dummen Quantencomputer gekommen und die Physiker mit ihren Quanten und haben das alles über den Haufen geworfen, weil Quantencomputer können in der Theorie zumindest, so richtig bauen kann man die ja noch nicht, in der Theorie können die mehr berechnen als die Turing-Maschine. Und darum sind die ja so ein großes Problem, dass man dann in der Kryptografie eben Sachen schneller entschlüsseln kann, weil die Berechenbarkeit plötzlich eine andere ist und mächtiger ist als in der Turing-Maschine.",
      "start": 1599057,
      "end": 1642578,
      "confidence": 0.8118412698412699,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Also eigentlich wissen wir gar nicht, was in der Gesellschaft dann so alles Doofes passieren könnte, wenn Quantencomputer mal Realität werden, oder? Also ich stelle mir das schon ziemlich böse vor, wenn die RSA-Algorithmen jetzt mal eben ratzfatz geknackt werden und ähnliches. Also ich glaube, da haben wir alle ein paar Probleme.",
      "start": 1642933,
      "end": 1658648,
      "confidence": 0.6779038461538465,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja man ganz allgemein, wie ich ja immer auch sage, Vorhersagen sind schwierig, vor allem wenn sie die Zukunft betreffen, aber wenn natürlich sowas Grundlegendes auch noch über den Haufen geworfen wird, wie die gesamte Berechenbarkeit, dann kann es natürlich schon sein, dass da viel passieren könnte. Ja korrekt. Und was vielleicht auch noch ganz interessant ist, es hat nicht nur den Turing damals gegeben, der so ein Modell entwickelt hat, sondern es hat auch den Alonzo Church gegeben. Hast du den schon mal gehört?",
      "start": 1659585,
      "end": 1686105,
      "confidence": 0.7937529411764707,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "In bestimmten paar Mafia-Filmen habe ich den Namen Alonzo schon mal gehört und Church bestimmt den Begriff von Churchill, also Alonzo, Church, die Mix habe ich noch nicht gehört, ne tut mir leid.",
      "start": 1686145,
      "end": 1695087,
      "confidence": 0.7409090909090909,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Der hat nämlich zur gleichen Zeit ein anderes System erfunden, wie der Turing, und zwar den Lambda-Kalkulus. Hast du den vielleicht schon mal gehört? Lambda-Kalkül.",
      "start": 1695907,
      "end": 1705552,
      "confidence": 0.7923600000000001,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Lambda-Kalkül habe ich schon mal gehört, ich kann es dir jetzt auch nicht sagen, was es ist. Ich komme mir hier gerade total dumm vor. Du fragst mich immer irgendwelche Themen, habe ich alles schon mal irgendwie gehört, aber ich kann dir das alles nicht erklären.",
      "start": 1705572,
      "end": 1715618,
      "confidence": 0.6913695652173911,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, es ist ja sehr unfair, weil ich bin ja natürlich vorbereitet. Ich habe das ja noch mal durchgelesen. Also es war jetzt nicht, dass ich das aus dem Stehgreif alles so von mir geben könnte. Aber das Interessante ist ja, dass der mit dem Lambda-Kalkulus eigentlich das gleichmächtige System wie die Turing-Maschine entworfen hat, ohne dass sie voneinander gewusst haben am Anfang. Und man ist dann später draufgekommen oder beziehungsweise sie sind selber schnell draufgekommen, dass die gleichmächtig sind. Aber durchgesetzt hat sich die Turing-Maschine, weil die vielleicht einfacher zu verstehen ist. Aber was wir alle noch von dem ganzen Lambda-Kalkulus haben, der sehr sehr wichtig ist übrigens in der ganzen theoretischen Informatik, sind die Lambda-Functions. Die gehen ja auf diesen Lambda-Kalkulus zurück. Das heißt, wenn du in Python zum Beispiel eine Lambda-Function schreibst oder was halt eine Lambda-Function sonst in den Programmiersprachen ist, die gehen alle auf dieses lambda kalkül zurück und sind heute in beinahe allen programmiersprachen in irgendeiner form möglich also diese ganze funktionale welt kommt aus diesen lambda kalkulus und ist auch wieder gleichmächtig wie die thuringmaschine und das war alles vor hundert jahren.",
      "start": 1716238,
      "end": 1775929,
      "confidence": 0.8044656084656081,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Also haben die beiden herren serverless erfunden sozusagen kann man kann man das so festhalten. Liebe Hörerinnen und Hörer, das aktuelle Bild, was ich hier gerade sehe, ist ein purer Genuss. Wolfgang muss echt hart überlegen, ob Lambda Functions, was glaube ich unter anderem anonyme Funktionen innerhalb des Quellcodes sind, auch was mit Serverless und AWS Lambda zu tun hat. Könnt ihr so Aufzugmusik spielen, würde das passen?",
      "start": 1776169,
      "end": 1800287,
      "confidence": 0.6517205882352942,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, es ist wirklich schwierig, da eine gute Connection herzustellen. Aber ich gebe dir den Punkt einfach mal, Turing hat Serverless erfunden.",
      "start": 1800607,
      "end": 1806433,
      "confidence": 0.6703181818181817,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Wäre auf jeden Fall eine geile neue Headline für so einen Artikel. Turing hat Serverless erfunden. Wäre jetzt mal interessant zu wissen, wie die Person oder die Personengruppe bei Amazon damals mit dem Namen Lambda ausgetaucht ist, ob die darüber nachgedacht haben. Also das würde ich jetzt schon mal gerne mal wissen.",
      "start": 1807354,
      "end": 1824105,
      "confidence": 0.7167307692307694,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, das will ich wohl hoffen, dass die gewusst haben, woher Lambda kommt und warum dieses Zeichen verwendet wird.",
      "start": 1824505,
      "end": 1829268,
      "confidence": 0.7263684210526316,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ja, aber ob das eher Zufall war oder ob die wirklich dann sich die ganze Sache so hergeleitet haben wie du dir gerade.",
      "start": 1829288,
      "end": 1833811,
      "confidence": 0.7403913043478261,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Du meinst, die waren einfach nur verliebt in das Lambda-Symbol?",
      "start": 1833851,
      "end": 1836192,
      "confidence": 0.7851999999999999,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Keine Ahnung. Aber wow, mein Kopf explodiert gerade. Turing hat Serverless erfunden. Okay, lassen wir das so stehen.",
      "start": 1836753,
      "end": 1844866,
      "confidence": 0.7413888888888889,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Aber wenn wir jetzt von Turing schon reden, dann ist natürlich ein Punkt noch ganz, ganz wichtig und zwar das Halting Problem. Das Halte Problem. Hast du wahrscheinlich auch schon irgendwo mal gehört, oder?",
      "start": 1844906,
      "end": 1854790,
      "confidence": 0.7925294117647059,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Das einzige Problem habe ich, um anzuhalten, ist, wenn ich ganz schnell fahre und da kommt eine rote Ampel. Ist das auch das Halte Problem?",
      "start": 1854810,
      "end": 1860412,
      "confidence": 0.6673200000000001,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Das ist deutsche halt das Problem, in der Auto-Nation Nummer 1.",
      "start": 1860812,
      "end": 1865387,
      "confidence": 0.7302727272727272,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Passiert ab und zu auch mit meinem Aufsitzrasenmäher in meinem Garten. Dann kommt da auf einmal eine Pflanze und dann habe ich Probleme anzuhalten. Weil, Achtung, mein Aufsitzrasenmäher selbst hat keine Bremse. Der hat eine Kupplung. Und dann rollt der aus. Also eigentlich ist er lebensgefährlich, muss ich zugeben, jetzt wo ich drüber nachdenke. Und er hat auch keine Servolenkung, also ist ein bisschen schwierig.",
      "start": 1865397,
      "end": 1887458,
      "confidence": 0.6616923076923076,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ich probiere gerade da einen Link herzubekommen, aber es ist gar nicht so schwierig eigentlich mit deinem Rasenmäher, weil so ähnlich läuft das Halteproblem auch ab. Du weißt eigentlich nicht, wann das Ding stehen bleibt. Und zwar definiert das Halting Problem, das Halteproblem, dass du nicht beweisen kannst oder definieren kannst, dass du entscheiden kannst, ob ein Programm terminiert oder nicht.",
      "start": 1887498,
      "end": 1909612,
      "confidence": 0.8030655737704921,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Terminiert heißt, ob das Programm Ende ist.",
      "start": 1909652,
      "end": 1912192,
      "confidence": 0.8022857142857143,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Genau, ob das einfach beendet wird, ob das durchläuft. Du kannst es nicht entscheiden, du kannst keinen Algorithmus schreiben, der sich dein Programm ansieht und sagt, es terminiert oder terminiert nicht.",
      "start": 1912232,
      "end": 1922534,
      "confidence": 0.8552258064516131,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Na ja, auf Linux würde ich sagen, hat er das Ding Exit Code, ne?",
      "start": 1923034,
      "end": 1926115,
      "confidence": 0.49921428571428567,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, aber dann ist es schon beendet. Aber du kannst von außen nicht sagen, läuft es durch in alle Ewigkeit oder beendet es. Natürlich kannst du das, wenn da eine While-Schleife, While True irgendwo drin ist und du schaust drauf, dann ist dir das klar. Okay. Aber sobald es ein komplexeres Programm ist, kannst du das nicht mehr programmatisch entscheiden, beendet das Ding oder nicht. Was natürlich super relevant ist heutzutage in der Programmierung, weil du wirst ja vielleicht automatisch überprüfen, hast du irgendwo einen Fehler in deinem Programm. Hast du da irgendwo ne Schleife drin, die dann nie mehr beendet wird?",
      "start": 1926514,
      "end": 1959048,
      "confidence": 0.7747254901960784,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Also ich sag mal so, wenn das möglich wäre, würde mir das total helfen, und zwar jeden Dezember. Da gibt's diese Competition, die nennt sich Advent of Code. Und ich bin sehr doof im Algorithmen schreiben. Und spätestens am Tag drei schreibe ich irgendwelche Brutforce-Algorithmen, lass die laufen, und nach zwei Stunden, nachdem mein Laptop mein Zimmer schon aufgeheizt hat, hab ich gedacht, vielleicht sollte ich das mal abbrechen. Hätten wir das Halting-Problem gelöst, würde ich sehr viel Energie sparen.",
      "start": 1959408,
      "end": 1983996,
      "confidence": 0.7700250000000002,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Und du würdest wahrscheinlich einen Turing Award bekommen und nicht nur das, du hättest wahrscheinlich die halbe Mathematik außer Kraft gesetzt, weil Turing damals schon bewiesen hat, dass das einfach nicht geht. Bevor es überhaupt Computer gegeben hat, in den 30er Jahren, hat er bewiesen, dass du das nicht überprüfen kannst. Und das ist bis heute der Fall und du kannst es nicht überprüfen. Natürlich, du kannst manchmal überprüfen, ob es terminiert. Also du kannst bei vielen Programmen sagen, es terminiert, aber du kannst nicht sagen, ob es nicht terminiert. Weil du kannst dir das so vorstellen, wenn man das ein bisschen vereinfacht. Wenn du da irgendwo eine Endlosschleife hast, damit du weißt, dass das eine Endlosschleife ist, musst du durch die Endlosschleife durchgehen und dir das durchrechnen und dann hängt dein Programm, was das prüft, auch in dieser Endlosschleife und beendet sich nicht mehr.",
      "start": 1984314,
      "end": 2029195,
      "confidence": 0.7660827586206898,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Na super, jetzt hast du mir wieder ein Projekt für meine lange To-Do-Liste gegeben. Danke, Wolfgang.",
      "start": 2029295,
      "end": 2034836,
      "confidence": 0.38612499999999994,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Kannst du gerne probieren. Turing wird es dir danken. Aber in der Tat ist es heutzutage in der Wissenschaft ein großes Thema in der theoretischen Informatik, was kann ich überprüfen, was terminiert, gerade wenn es um das ganze Testen geht von Software, weil du wirst ja, wenn du dann eine Software hast, die die Rakete steuert, wirst du ja, dass das wirklich immer terminiert, dass das sauber durchläuft, dass du da keine Endlosschleifen drinnen hast, die dann womöglich irgendwie die Rakete zum Absturz bringen. Also bei so kritischen Programmen ist das natürlich ein großes Thema und wenn du die Programme ein bisschen vereinfachst, dann kannst du unter Umständen sagen, es terminiert oder wenn du gewisse Einschränkungen machst. Aber eben zu entscheiden, terminiert etwas ja oder nein im Allgemeinen für alle Programme, funktioniert nicht und das ist das berühmte Halteproblem von Turing.",
      "start": 2034876,
      "end": 2079393,
      "confidence": 0.7769290780141844,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Kommen wir zurück zu meinem Rasenmäher. Der hat eine relativ einfache Exit-Strategie, wenn der Sprit leer ist.",
      "start": 2080813,
      "end": 2087097,
      "confidence": 0.48147058823529415,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Und wenn man das ganze Horting-Problem erwähnt, dann müsste man eigentlich auch Gödel erwähnen. Ich als Österreicher sowieso, weil der war ja aus Wien und da gibt es viele schöne Geschichten, aber ich bin mir sicher, es würde dich langweilen. Aber um Gödel zu teasern, wenn wir mal eine eigene Gödel-Episode machen, er hat daran gearbeitet, Gott logisch zu beweisen.",
      "start": 2087317,
      "end": 2105244,
      "confidence": 0.8190999999999999,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ich habe bisher noch keine Schlagzeilen in der Bild-Zeitung gelesen, dass das jemand geschafft hat, deswegen gehe ich mal davon aus, er war nicht erfolgreich.",
      "start": 2105724,
      "end": 2111346,
      "confidence": 0.50656,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Es hat vor kurzer Zeit mal wieder so ein Update gegeben bezüglich dem Gottesbeweis, aber ehrlich gesagt, ich weiß nicht mehr, was rausgekommen ist. Und im Gegensatz zu allen anderen Dingen, die Gödel so gemacht hat, die wirklich weltbewegend waren, geht mir der Gottesbeweis eher so irgendwo vorbei.",
      "start": 2111366,
      "end": 2126631,
      "confidence": 0.8181249999999999,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Okay, genug Theorie, kommen wir mal wieder zu der Praxis und zwar zu einer Sache, die auch sehr stark von Alan Turing getrieben wurde, die heute noch eine starke Relevanz spielt und wo sich wirklich ganz viele Leute die Köpfe einschlagen.",
      "start": 2127238,
      "end": 2139792,
      "confidence": 0.7911951219512195,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Moment, willst du mir jetzt sagen, dass die Turing-Maschine keine Relevanz mehr hat? Da baut die gesamte Informatik auf. Jede einer deiner Go-Routinen baut auf der Turing-Maschine auf. Aber komm mal zu deinem Turing-Test, ist schon okay.",
      "start": 2140267,
      "end": 2151330,
      "confidence": 0.7144594594594594,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Das ist richtig, aber das soziale Wesen Mensch braucht ja was zum Streiten. Und ich finde, die Turing-Tests sind da perfekt dafür. Weil da gab es in letzter Zeit nämlich schon noch ein bisschen Streit drum. Das ist nämlich eine tolle Sache. Aber fangen wir ganz von Anfang an.",
      "start": 2151350,
      "end": 2165354,
      "confidence": 0.6884897959183673,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Genau, und zwar der Turing-Test ist ja auch sowas wie die Turing-Maschine, das hört man immer. CSS ist Turing-Complete. Dann hört man, okay, diese AI hat den Turing-Test bestanden oder nicht bestanden, oder wir sind noch weit weg, dass dieser Turing-Test besteht. Also was ist denn der Turing-Test? Wie ist der definiert? Weil auch da kennen die wenigsten wahrscheinlich die Definition. Ich kenne sie ehrlich gesagt auch nicht. Also, Andi, schieß los.",
      "start": 2165375,
      "end": 2186500,
      "confidence": 0.7995833333333332,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Also erstens, der Turing-Test kommt gar nicht von Alan Turing.",
      "start": 2186960,
      "end": 2189501,
      "confidence": 0.7990999999999999,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Jetzt bin ich enttäuscht.",
      "start": 2189521,
      "end": 2190721,
      "confidence": 0.6165,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Er hat nämlich nur das theoretische Modell, die theoretische Skizze formalisiert, aber nie wirklich zu dem gemacht, was es eigentlich heute ist.",
      "start": 2190761,
      "end": 2198083,
      "confidence": 0.8395,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Hat er das damals schon Turing-Test genannt?",
      "start": 2198103,
      "end": 2200304,
      "confidence": 0.6985714285714285,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Soviel ich weiß, wurde der nur nach Alan Turing benannt, da der ursprüngliche Test und das sogenannte Imitation Game auf Turing basiert. Das Imitation Game war früher folgendes Szenario. Du hast drei Räume und die drei Räume sind durch drei Terminals verbunden, wo du nur Text eingeben kannst. In einem Raum saß ein Richter, in einem anderen Raum ein Mann und im dritten Raum eine Frau. Die Frau hatte das Ziel, sich als Mann auszugeben und der Richter hatte das Ziel, zu erkennen, wer ist der Mann. Und die konnten nur über Textnachrichten kommunizieren. Das war das sogenannte Imitation Game.",
      "start": 2200344,
      "end": 2236988,
      "confidence": 0.8303300000000003,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Und das hat Thuring erfunden. Damals hat es noch gar keine Terminals gegeben, 1930.",
      "start": 2237028,
      "end": 2242610,
      "confidence": 0.6461428571428572,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Das theoretische Modell des Turing-Tests hat darauf basiert, denn Turing selbst beschäftigte sich intensiv mit dem Problem der künstlichen Intelligenz und mit deren Kriterien. Und später hat man die ganze Sache erst konkreter ausformuliert, also nach Turings Tod, weil später erst die künstliche Intelligenz als Teilbereich der Informatik als eigenständiges akademisches Fachgebiet ausgewiesen wurde. Also zu dem Zeitpunkt, wo Alan Turing darüber geforscht hat, hatte das akademisch noch gar keine Relevanz. Und dieses Imitation Game wurde dann mehr oder weniger weiterentwickelt zu dem heutigen Turing-Test. Und das Ziel des Turing-Tests ist es, ob ein Computer in der Lage ist, sich wie ein Mensch zu verhalten. Und der Aufbau ist eigentlich dasselbe. Du hast drei Terminals, zwei Menschen, ein Computer. Alle sind physisch voneinander getrennt. Ein Mensch ist der Fragesteller und erstellt Fragen in einem vorgegebenen Format und einem vorgegebenen Kontext, also wirklich von einem Thema. Am Ende der Testdurchläufe wird der Fragesteller immer wieder gefragt, wer ist denn jetzt der Mensch? Und wird in entweder 30% oder 50% der Fälle der Computer nicht eindeutig identifiziert, wird laut dem Turing-Test der Computer als künstlich intelligent eingestuft.",
      "start": 2242620,
      "end": 2315832,
      "confidence": 0.8597783783783787,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Und wie viele Fragen hat man da zur Verfügung? Das ist wahrscheinlich alles nicht definiert, oder?",
      "start": 2316272,
      "end": 2319956,
      "confidence": 0.7314374999999999,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ne, das ist alles nicht definiert und da kommt natürlich dann in irgendeiner Art und Weise ein bisschen Knatsch zustande. Kommen wir aber gleich noch zu der Kritik und wie sich das also in der Praxis verhält. Was ich aber wirklich mindblowing finde, und jetzt halte ich fest. Sitzt du, Wolfgang? Halte ich am Stuhl fest?",
      "start": 2319977,
      "end": 2334093,
      "confidence": 0.7712321428571428,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Natürlich, natürlich. Ich halte mich fest, ja.",
      "start": 2334133,
      "end": 2335815,
      "confidence": 0.5178571428571428,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Turing hat damals schon vermutet, dass es im Jahr 2000 möglich sein werde, Computer so zu programmieren, dass der durchschnittliche Anwender eine höchstens 70-prozentige Chance habe, Mensch und Maschine erfolgreich zu identifizieren, nachdem er fünf Minuten mit ihnen in Anführungszeichen gesprochen hat. Ist das nicht mindblowing?",
      "start": 2336275,
      "end": 2358923,
      "confidence": 0.8239130434782607,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ziemlich. Gute Schätzung, ja.",
      "start": 2358963,
      "end": 2360743,
      "confidence": 0.542,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ziemlich harter Tobak. Denn zugegeben, bis zum Jahr 2008 kam kein Computerprogramm wirklich nah ran, um den Turing-Test zu bestehen. Aber da kommen wir gleich zu.",
      "start": 2360763,
      "end": 2374729,
      "confidence": 0.848423076923077,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Aber man muss ja auch sagen, dass der ja zu Zeiten gelebt hat, wo es gar keinen richtigen Computer gegeben hat. Also in den 50ern ist ja das gerade so gestartet mit den Computern. Und dann hat er das auf 50 Jahre vorhergesagt.",
      "start": 2374769,
      "end": 2387775,
      "confidence": 0.8046279069767441,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Das ist hart, oder? Also ich meine, zugegeben, 60 Jahre wäre deutlich genauer gewesen, aber hey, wow.",
      "start": 2387795,
      "end": 2392919,
      "confidence": 0.6607058823529414,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ich habe gerade nachgeschaut, er hat genau 1950 das vorhergesagt, auf 50 Jahre.",
      "start": 2393259,
      "end": 2397823,
      "confidence": 0.5562307692307693,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Aber ich habe ja am Anfang gesagt, da gibt es immer so ein bisschen Knatsch drum, weil was wären wir Menschen heute ohne zu meckern? Und zwar gibt es Kritik am Turing-Test. Auf der einen Seite kritisieren Leute die Art der Fragen oder die Art des Kontextes. Also auf der einen Seite früher war es nur erlaubt im Turing-Test limitierende Fragen zu stellen, also die man wirklich nur mit Ja oder Nein beantworten kann oder das Wissensgebiet am Anfang einzuschränken. Heutzutage ist das natürlich relativ fragwürdig, ob das dann auch Sinn macht, den Turing-Test so durchzuführen, nur mit Ja und Nein zu beantworten. Speziell im Bereich von Large Language Models, Chat-GPT und Co. Deswegen kann die Kritik eher so als überholt oder mehr oder weniger valide in der Hinsicht anerkannt werden.",
      "start": 2398454,
      "end": 2442680,
      "confidence": 0.8329465648854957,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Es ist ja auch immer die Frage, wie Personen dann schlussendlich damit umgehen mit dem Computer. Weil wenn man daran, wenn man da zum Beispiel an ELISA denkt, an das Projekt von Weizenbaum 66, wo ja Leute schon mit dem Computer in einem Raum alleingelassen werden wollten, damit sie mit dem Computer alleine sprechen können, sozusagen alleine chatten können. Dann haben die Personen zwar gewusst, es ist ein Computer, aber sie haben trotzdem irgendwie dem Computer persönliche Dinge anvertraut und haben das Ganze fast wie ein Wesen gesehen. Also auch wenn der Turing-Tester nicht bestanden wird, ist trotzdem die soziale Interaktion dann sehr interessant, was Leute mit einem Computer machen.",
      "start": 2443303,
      "end": 2481252,
      "confidence": 0.8282636363636363,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Und du sprichst da einen sehr, sehr guten Punkt an, denn das ist eigentlich so die meiste Kritik, die heutzutage in den Tag gelegt werden. Die meisten sagen, der Turing-Test ist gar nicht mehr relevant. Der ist völlig irrelevant, weil wen interessiert, ob der Computer sich als Mensch ausgeben kann? Viel wichtiger ist die Interaktion zwischen Mensch und Maschine, dass die intuitiv und effizient gestaltet wird. Und das prüft der Turing-Test halt auch nicht mehr. Und auch sehr relevant, in erster Linie geht es im Turing-Test ja eher um Täuschung. Ein Computer täuscht vor, ein Mensch zu sein. Und somit teste man eher die menschliche Leichtgläubigkeit anstatt echte künstliche Intelligenz. Das ist heute so die Kritik so an den Tag gelegt wird. Und ich muss zugeben, ganz Unrecht haben die Kritiker ja hier nicht.",
      "start": 2481412,
      "end": 2523745,
      "confidence": 0.7577089552238812,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, es ist halt so ein bisschen dieses Schreckgespenst, dass ich einen Computer nicht mehr identifizieren kann und unterscheiden kann vom Menschen. Darum ist es, glaube ich, auch so interessant, dass man eben so einen Test anwendet, weil das ist ja so die Horrorvorstellung. Ich kann nicht mehr unterscheiden, ob du jetzt ein Roboter bist oder ein Mensch.",
      "start": 2523785,
      "end": 2540470,
      "confidence": 0.7760689655172412,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Und genau zu dem Problem kommen wir gleich, wenn wir den ganzen Turing-Test mal in die Praxis setzen und sagen, okay, wie läuft die ganze Sache denn heute. Aber auf Basis dieser Kritik haben die ganzen Leute dann natürlich auch irgendwie Weiterentwicklungen und Varianten vom Turing-Test entwickelt. Da gibt es etliche, aber zwei fand ich irgendwie ganz lustig. Und zwar gibt es einen umgekehrten Turing-Test.",
      "start": 2541186,
      "end": 2563204,
      "confidence": 0.8211692307692308,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Der Computer testet, ob du ein Mensch bist.",
      "start": 2563224,
      "end": 2564885,
      "confidence": 0.6182500000000001,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Der Mensch versucht dem Computer davon überzeugen, dass er kein Computer ist, genau. Und das beste Beispiel dafür ist das klassische Capture. Ne, so hier diese Thematik, du siehst neun Bilder, klicke alles an, was ein Bus im Bild hat oder ähnliches. Oder schreibe diese Zahlen- und Buchstabenfolge, die immer zerkritzelt ist, in dieses Feld daneben.",
      "start": 2565363,
      "end": 2584873,
      "confidence": 0.760642857142857,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Das heißt, wir machen eigentlich ständig diesen Reverse-Turing-Test.",
      "start": 2585500,
      "end": 2588282,
      "confidence": 0.8657500000000001,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Dauerhaft, dauerhaft.",
      "start": 2588322,
      "end": 2590043,
      "confidence": 0.871,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Kleines Fun-Fact am Rande. Am Rande? Am Rande. Weißt du, wer der Captcha-Erfinder ist?",
      "start": 2590063,
      "end": 2596167,
      "confidence": 0.708357142857143,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Nee, aber den würde ich ... Ich glaube, viele Menschen haben Hass auf den.",
      "start": 2596567,
      "end": 2600649,
      "confidence": 0.6875714285714286,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Es war, glaube ich, sogar ein universitäres Projekt, aber es ist der Gründer von Duolingo, dieser Vokabellernsoftware oder Sprachenlernsoftware. Der hat das Captcha erfunden.",
      "start": 2600689,
      "end": 2611076,
      "confidence": 0.7605833333333334,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Lustig. Zweiter Fun-Fact. Weißt du eigentlich, wofür Captcha steht?",
      "start": 2611136,
      "end": 2614918,
      "confidence": 0.5724444444444443,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Nein.",
      "start": 2617714,
      "end": 2618614,
      "confidence": 0.843,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "CAPTCHA selbst hat seinen Namen vom Turing-Test und CAPTCHA steht für Completely Automated Public Turing Test to Tell Computers and Humans Apart. Völlig mindblowing, wie die ganze Klamotte doch zusammenhängt, oder?",
      "start": 2618674,
      "end": 2632607,
      "confidence": 0.8012903225806451,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Da siehst du wieder, wie viel Einfluss Turing hatte.",
      "start": 2632648,
      "end": 2635090,
      "confidence": 0.6655555555555555,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Es gibt aber noch eine weitere Weiterentwicklung, eine weitere Weiterentwicklung, auch geil, vom Turing-Test. Und zwar ist das der Markus-Test, bei dem ein Programm, das eine Fernsehsendung sehen kann, also wirklich gucken kann.",
      "start": 2635510,
      "end": 2647424,
      "confidence": 0.811969696969697,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Moment, das kommt bei mir nicht von Markus Lanz. Schreibt man denn Markus mit K oder mit C? Mit C. Okay, dann kann es nicht der Lanz sein. Gut, ich bin zufrieden, ist keine deutsche Erfindung.",
      "start": 2647444,
      "end": 2654892,
      "confidence": 0.5553055555555555,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Naja, auf jeden Fall guckt dann halt dieses Programm dieser Fernsehsendung und danach stellst du dem Programm sinnvolle Fragen zum Inhalt der Sendung. Wenn das Programm das beantworten kann, dann hat es halt den Markus-Test bestanden. Gilt als Weiterentwicklung vom Turing-Test.",
      "start": 2655172,
      "end": 2665494,
      "confidence": 0.7337560975609757,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Hat JetGPT dann den Markus-Test schon bestanden?",
      "start": 2665534,
      "end": 2667895,
      "confidence": 0.7934285714285715,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Das weiß ich nicht, habe ich jetzt noch nicht nachgeguckt, aber das kann ich mal eben gucken.",
      "start": 2667915,
      "end": 2671856,
      "confidence": 0.6365882352941178,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ganz allgemein hat der JetGPT den Turing-Test erfolgreich absolviert. Also ihr würdet mal davon ausgehen, dass sowohl Markus-Test wie auch Turing-Test eigentlich mit JetGPT möglich sein sollte, oder?",
      "start": 2671876,
      "end": 2683218,
      "confidence": 0.7893928571428571,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ist es möglich, mit Chachipiti in eine Fernsehsendung zu gucken?",
      "start": 2683607,
      "end": 2687112,
      "confidence": 0.5614,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, du musst es transkribieren natürlich zuerst.",
      "start": 2687493,
      "end": 2689576,
      "confidence": 0.7091428571428572,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Wenn man die Fernsehsendung in ein Textformat umwandelt, dann ist es ja keine Fernsehsendung gucken mehr. Also ich glaube, du musst da schon eine Kamera mit Imagerecognition und so hinten hinstellen.",
      "start": 2689616,
      "end": 2697066,
      "confidence": 0.7331935483870968,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, aber das könntest du auch zusammenbauen. Da gibt's ja heute genug Interfaces dafür. Das kann man ja zusammenstöpseln.",
      "start": 2697705,
      "end": 2703850,
      "confidence": 0.660421052631579,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Okay, es geht aber hier nicht um den Marcus-Test, es geht um den Turing-Test. Und hat JetGPT den Turing-Test bestanden? Ja, und zwar eigentlich offiziell als zweite KI, weil Google Lambda hat 2022, wenige Monate davor, auch als eher erste KI den Turing Test bestanden. Es gab immer wieder ganz ganz ganz viel Streit darum, ah war jetzt nicht 2008 oder 2011 mit dem Cleverbot oder oder 2014 mit dem Eugene Gooseman Chatbot, das ist immer so ein bisschen bisschen krumm gewesen.",
      "start": 2703911,
      "end": 2738012,
      "confidence": 0.7668414634146342,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, gibt es da definiertes Fragenset, was heutzutage verwendet wird? Das ist ja wahrscheinlich auch alles frei definiert, oder?",
      "start": 2738441,
      "end": 2744206,
      "confidence": 0.7806315789473682,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Genau, es ist alles frei definiert, weil du musst halt schon einen Menschen täuschen in der Hinsicht. Und da kommt halt die ganze Kritik. Also 2011 gab es mal eine Web-Applikation, die nannte sich Cleverbot. Da ging es darum, dass genau dieser Turing-Test gemacht wurde, aber die Fragen nicht von einem Fragesteller kamen, sondern von einer Gruppe von Zuschauern. Also gar nicht von den Juroren selbst. Und deswegen gilt die Kritik, okay, der Cleverbot hat den Turing-Test nicht bestanden. Ja, weil das nicht anhand der Formalien des Turing-Tests erfolgt ist. 2014 gibt es dann immer noch, was im Internet hochgehandelt wird, so ein Chatbot namens Eugene Gooseman. Eugene Gooseman ist ein Chatbot, der als 13-jähriger Junge aus der Ukraine sich verhält oder so agiert. Und der war in der Lage, 33% der Juoren zu täuschen, dass es ein Chatbot ist. Super interessant. Kritik dabei ist jedoch, a, es gab zu wenig Juoren, B. Der Test dauerte nur 5 Minuten, also 5 Minuten Konversation pro Jury-Mitglied mit dem Chatbot. Und C. Es wurde gesagt, dass von diesem Chatbot Englisch nicht die Muttersprache ist, weil 13-jähriger Junge aus der Ukraine. Und das soll die Juorin dazu verleitet haben, über grammatikalische Fehler leichter hinwegzusehen.",
      "start": 2744246,
      "end": 2819447,
      "confidence": 0.814442786069652,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ist irgendwie nachvollziehbar, ja. Wobei, wenn man so schaut, was heutzutage Leute schreiben, so auf WhatsApp, und ich will jetzt nicht die Jugend verdammen oder so, aber es fällt bei Jugendlichen irgendwie mehr auf, da muss man da heutzutage sowieso bei Menschen über die Grammatikfehler hinwechseln.",
      "start": 2820251,
      "end": 2835486,
      "confidence": 0.7828913043478261,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Okay, Boomer. Aber ja, gehen wir nochmal zu der ursprünglichen Kritik vom Turing-Test, so das geht eher um die Täuschung, da würde ich sagen, okay, der Chatbot Eugene Guzman hat es ja irgendwie geschafft, die Leute zu täuschen, ja, weil er hat eine Identität da irgendwie kreiert und dann allem drum und dran, also das finde ich schon irgendwie interessant. Eine weitere tolle Story ist eigentlich 2018, da hat Google was rausgebracht auf der Google I.O., nannte sich Google Duplex. Und Google Duplex war eine KI, die hat dann bei einem Friseur in einem Restaurant angerufen, um Termine zu machen. Und jetzt Funfact, ich war auf der Google IO und hab mir diese Keynote angesehen und das war schon sehr impressive, muss ich zugeben.",
      "start": 2835526,
      "end": 2871540,
      "confidence": 0.7481370967741934,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Wobei die auch die besten Gespräche rausgebickt haben. Ich kann mich erinnern, ich hab die dann auch angeschaut. Aber meines Wissens wird es in England zumindest eingesetzt, ist voll im Betrieb und erfragt vor allem die Öffnungszeiten bei Geschäften.",
      "start": 2871600,
      "end": 2884649,
      "confidence": 0.826,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Also ob das jetzt im Betrieb ist oder so, weiß ich nicht, aber viele Leute sagen, okay, dieses Google Duplex, also eine KI, die dann mit Restaurants und was weiß ich nicht, Friseuren Termine machen kann, Das gilt eher so als modernes Bestehen des Turing-Tests, weil das ist ja wirklich schon, die Leute sehen sich nicht, die telefonieren nur, der andere Gesprächspartner weiß ja überhaupt nicht, dass da ein Computer dran ist, aber er agiert mit dem wie Mensch, wie ein Mensch und das ist wirklich, es gibt keine vorgefertigten Fragen oder ähnliches. Es gibt keine limitierten Fragen, wie ja, nein, sondern es ist ja schon ein reales Gespräch. Und das Tolle ist an Google Duplex, die Erfinder haben dann eher so Laute dann halt immer so injectet, so wie aha und mh, was das halt deutlich realistischer macht, was ja super interessant war.",
      "start": 2884949,
      "end": 2926819,
      "confidence": 0.7881319444444446,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "In der Realität müssen die, glaube ich, aber auch immer dazu sagen, dass sie Computer sind, wenn sie irgendwo anrufen. Also sie dürfen sich nicht als Menschen ausgeben, meines Wissens. Aber die haben natürlich auch Tests gemacht, wo Leute das nicht gewusst haben oder begleitete Tests, wo Leute dann einspringen können und solche Dinge.",
      "start": 2927508,
      "end": 2943624,
      "confidence": 0.8531296296296296,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ja, ich glaube, das ist von Land zu Land unterschiedlich. Wo es mehr Rechte gibt, müssen die das, glaube ich, sagen, wo es weniger Rechte gibt, glaube ich nicht.",
      "start": 2943664,
      "end": 2949089,
      "confidence": 0.6031724137931036,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Aber darum glaube ich, ist es eben bisher nur in der UK im Einsatz, weil das eben auf der rechtlichen Seite bisschen schwierig ist teilweise.",
      "start": 2949489,
      "end": 2957866,
      "confidence": 0.7943200000000001,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "So, und kommen wir jetzt wieder zu der formalen Geschichte. Hat Google Duplex damit den Turing-Test bestanden, ja oder nein? Und die Kritiker sagen, formal nicht, weil die Zuschauer wussten ja, wer wer ist. Also, du hattest ja eigentlich nur zwei Leute in dem Turing-Test und nicht drei. Einmal die Person, die angerufen wurde, und dann die KI. Die Zuschauer, die wussten ja das. Und das Gespräch war auf Terminvereinbarung konzentriert. Also, wieder dieser enge Gesprächskontext.",
      "start": 2958167,
      "end": 2984430,
      "confidence": 0.7778421052631579,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Du hast ja so einen Kontext und eigentlich, das Gespräch wurde geleitet vom Anrufer, das heißt vom Bot. Die andere Seite beantwortet ja eher Fragen. Das heißt, du hast ja auch keine Fragen, die irgendwie das Gegenüber challengen könnten oder da irgendwie probieren, irgendwelche Infos rauszubicken, weil du antwortest ja als Restaurant zum Beispiel nur und sagst Termin frei, nicht frei oder so.",
      "start": 2985170,
      "end": 3006820,
      "confidence": 0.789777777777778,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Da sagt man jetzt halt okay, alles so zwischen 2.8, also 2.8 fing der ganze Spaß jetzt an, so realistisch an mit den Turing-Tests und relativ nah an diese 30%-Täuschung ranzukommen. 2.14 gab es halt mal so ein bisschen dieser 13-jährige Junge aus der Ukraine, Eugene Guzman, dieser Chatbot. Aber wo sich halt alle Medien wirklich so einig sind, ganz formal, ist, dass 2022 Google Lambda und ChatGPT den Turing-Test bestanden haben in der Hinsicht und da gibt es dann jetzt eigentlich relativ wenig Kritik drüber. So und jetzt kann man sagen, ja gut, jetzt wurde letztes Jahr der Turing-Test bestanden von diesen Large-Language-Models, aber wie sieht das denn heutzutage in der Praxis aus? Ist der Turing-Test überhaupt noch relevant? Und meines Erachtens nach ja, sogar relevanter denn je. Denn wenn man Spam abwehren möchte, zum Beispiel E-Mail-Spam, dann ist es halt wirklich erforderlich, AI- oder KI-generierten Texts und Eingaben von Menschen unterscheiden zu müssen. Es gibt ja sogar inzwischen Browser-Extensions, die versuchen, Chat-GPT-generierte Texte zu erkennen. Und eigentlich ist das ja nichts anderes als der Turing-Test, also ein nicht bestandener Turing-Test. Und ich finde, das ist heute umso wichtiger, besonders wenn wir mal an diese Deepfake-Geschichten denken und was weiß ich nicht, was da noch so gibt. Ah, kleiner Brottipp, wusstest du eigentlich schon, dass bei diesen generierten AI-Bildern, dass die bisher noch sehr schwach sind im Generieren von Händen?",
      "start": 3007700,
      "end": 3091536,
      "confidence": 0.7822727272727273,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Ja, ja, natürlich. Also alles, was so Körperteile sind, sind teilweise sehr verunstaltet, ja. Das kann man noch relativ einfach erkennen, aber das wird sich mit der Zeit auch legen. Und um jetzt noch einen ganz aktuellen Kontext mit reinzubringen, Ich weiß nicht, ob du es mitbekommen hast, aber Geoffrey Hinton von Google, der so als einer der Väter von AI gilt, hat seinen Job zurückgelegt bei Google, weil er das ganze AI-Movement als zu gefährlich ansieht und nicht mehr mitmachen will. Und der hat eben auch begründet, dass in den nächsten Jahren wir mit so Informationen von AIs geflooded werden, überrollt werden, sei es Bilder, sei es Texte. Und dass es immer schwieriger wird, eben zu erkennen, ist es ein künstlich generiertes Text, Bild, was auch immer, oder ist es was Menschliches? Also auch da wieder richtig, wie du sagst, der Turing-Test wird immer wichtiger, um zu erkennen, ob was künstlich generiert wurde. Und wenn jetzt sogar die großen Befürworter von AI oder die Erfinder von AI jetzt so einen Schritt zurück machen, ist es schon auch ein bisschen beunruhigend, muss ich sagen.",
      "start": 3091596,
      "end": 3157715,
      "confidence": 0.8317445652173912,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ja, was ich jetzt so in meinem Freundeskreis mitkriege, jeder fragt mich schon, hast du schon JGPT ausprobiert? Und jeder ist halt super begeistert, weil man kann ja super viele kleine Aufgaben automatisieren. Und es ist auch wirklich impressive. Schreibt mir bitte einen Song über meinen Kegelklub im Stile von Rammstein oder ähnliches. Tolle Sachen kommen da raus. Doch am Ende vom Tag denke ich, wir als Gesellschaft müssen irgendwie lernen, noch damit umzugehen. Und ich glaube, die Entwicklung ist halt unglaublich schnell. Und irgendwo in einem Podcast oder so habe ich gehört, wir drehen uns ja immer nur um sogenannte LLMs, Large Language Models, also ganz große neurale Netzwerke und KI-Modelle, AI-Modelle, die super viele Dokumente irgendwie als Input haben. Und wenn das jetzt im selben Speed so weitergeht, wie wir das jetzt im letzten Jahr, letzten anderthalb Jahren gesehen haben, dann werden sich in Zukunft nur noch zwei, drei große Firmen herauskristallisieren, die sich dann einzig und allein nur noch leisten können, larger large language models zu generieren, weil die Generation von solchen großen Modellen ja immer und immer und immer teurer wird. Was ist das für eine ganz interessante Reise, wo wir gerade sind? Warten wir mal ab.",
      "start": 3158055,
      "end": 3224981,
      "confidence": 0.8128606965174127,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Aber!",
      "start": 3225021,
      "end": 3225942,
      "confidence": 0.984,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Nochmal ein finales Kommentar zum Turing-Test. Besonders weil du auch gerade Google erwähnt hast. Google selbst fordert nämlich einen neuen Turing-Test. Weil die sagen, okay, der alte passt jetzt gerade nicht mehr zu der AI und KI, die wir gerade haben. Und zwar benennen die Forscher den neuen Turing-Test Big. Big Bench. Also eigentlich Beyond the Imitation Game Benchmark. finde ich auch sehr schön. Und dieser besteht dann aus 204 konkreten KI-Aufgaben, die dann eine KI lösen muss. Und das geht dann natürlich weiter als nur die klassische Täuschung von Menschen, sondern wirklich gibt es denn da zusammengesetztes Wissen und so weiter und so fort. Also sehr interessante Entwicklung, und das haben sie, glaube ich, letztes Jahr oder vorletztes Jahr irgendwie bekannt gegeben, dass sie das fordern. Ich habe das jetzt nicht wirklich im Detail verfolgt, ob das was geworden ist, aber ich kann mir schon vorstellen, dass umso mehr KI auf den Markt kommt, dass man irgendwie, ich sag mal, gute KI von schlechter KI unterscheiden können muss, und dann kommt vielleicht dieser Beyoncé-Imitation-Game-Bingenschmark irgendwie in der Relevanz.",
      "start": 3225982,
      "end": 3290538,
      "confidence": 0.8049832402234638,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Also wenn man das Ganze zusammenfasst, könnte man sagen, alles was Turing im Namen hat oder was Turing auch so gemacht hat, ist die Definition einerseits vom Computer, was kann der Computer, aber auch was kann der Mensch oder was unterscheidet den Menschen vom Computer. Also er hat einerseits die ganze Berechenbarkeit definiert, aber auch irgendwo die Menschheit, um das Ganze zu unterscheiden. Und da fragst du noch, was Turing so für uns gemacht hat.",
      "start": 3290878,
      "end": 3314492,
      "confidence": 0.8123733333333332,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ja, völlig mindblowing. Also ich sage das nicht oft, aber da muss ich echt drüber nachdenken.",
      "start": 3315001,
      "end": 3320185,
      "confidence": 0.3963125,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Während du nachdenkst, möchte ich die Zeit nutzen, um mich mal zu entschuldigen bei allen theoretischen InformatikerInnen, was ich so heute von mir gegeben habe. Es ist kein leichtes Thema. Wir verlinken natürlich auch einiges noch in den Shownotes zu allen Punkten, die wir erwähnt haben. Wer sich da ein bisschen mehr damit beschäftigen will, ein paar Startpunkte. Und weil es so gut funktioniert hat mit den großen Mathematikern und Informatikern, versprechen wir schon, dass es nächste Woche nochmal eine große Informatikerpersönlichkeit gibt, damit wir die Serie endlich zu einer Serie machen können, zumindest mit mindestens zwei Episoden. Wobei du ja nicht sagst, dass zwei Episoden schon eine Serie sind, oder? Oder eine mathematische Gruppe, oder wie war das?",
      "start": 3320225,
      "end": 3362697,
      "confidence": 0.8248571428571427,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Ja, eine mathematische Gruppe ist bei zwei. Jetzt weiß ich nicht, was eine Serie ist. Ist eine Serie eine Gruppe? Keine Ahnung.",
      "start": 3363336,
      "end": 3369137,
      "confidence": 0.6324545454545457,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Wir lassen das mal mit zwei durchgehen, ganz eindeutig.",
      "start": 3369177,
      "end": 3371658,
      "confidence": 0.7652222222222221,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Also, ich sag mal so, wenn wir eine dritte Folge dann machen, dann wäre das schon die längste Serie, die wir in diesem Podcast bisher gemacht haben.",
      "start": 3371698,
      "end": 3376699,
      "confidence": 0.6628888888888889,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Aber wir haben doch auch drei Docker-Folgen, oder?",
      "start": 3376759,
      "end": 3378419,
      "confidence": 0.7793749999999999,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Nee, nee, zwei.",
      "start": 3378439,
      "end": 3380339,
      "confidence": 0.44733333333333336,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Waren das nur zwei?",
      "start": 3380359,
      "end": 3380959,
      "confidence": 0.32525,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Waren das nur zwei. Ich glaub, ich vote dann zwischendurch mal für eine dritte Docker-Folge. Oder eher Container-Folge oder eher Cloud-Native-Folge.",
      "start": 3380979,
      "end": 3389401,
      "confidence": 0.6116666666666668,
      "channel": null,
      "speaker": "B"
    },
    {
      "text": "Also wer Vorschläge hat in Richtung Container und Docker, schaut vorbei bei uns in der Community. Übrigens auch ein großes Problem, viele kennen unsere Community nicht, obwohl sie uns schon sehr lange hören. Wir haben immer wieder Leute, die uns erklären, sie haben nichts von der Community gewusst. Vielleicht sollten wir das einfach am Anfang erwähnen anstatt immer am Ende, aber jetzt ist es zu spät. In dem Sinne, eine schöne Woche.",
      "start": 3389870,
      "end": 3410170,
      "confidence": 0.8354166666666666,
      "channel": null,
      "speaker": "A"
    },
    {
      "text": "Tschüss, bis zum nächsten Mal. Bye bye. Ciao.",
      "start": 3411051,
      "end": 3412673,
      "confidence": 0.29775,
      "channel": null,
      "speaker": "B"
    }
  ],
  "confidence": 0.7711585377869743,
  "audio_duration": 3419.0,
  "webhook_status_code": null,
  "webhook_auth": false,
  "summary": null,
  "auto_highlights_result": null,
  "content_safety_labels": null,
  "chapters": null,
  "sentiment_analysis_results": null,
  "entities": null
}
